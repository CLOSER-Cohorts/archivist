var expect=require("expect.js"),io=require("../"),hasCORS=require("has-cors"),textBlobBuilder=require("text-blob-builder"),env=require("./support/env");describe("connection",function(){if(this.timeout(7e4),it("should connect to localhost",function(e){var n=io({forceNew:!0});n.emit("hi"),n.on("hi",function(){n.disconnect(),e()})}),it("should not connect when autoConnect option set to false",function(){var e=io({forceNew:!0,autoConnect:!1});expect(e.io.engine).to.not.be.ok(),e.disconnect()}),it("should start two connections with same path",function(){var e=io("/"),n=io("/");expect(e.io).to.not.be(n.io),e.disconnect(),n.disconnect()}),it("should start two connections with same path and different querystrings",function(){var e=io("/?woot"),n=io("/");expect(e.io).to.not.be(n.io),e.disconnect(),n.disconnect()}),it("should work with acks",function(e){var n=io({forceNew:!0});n.emit("ack"),n.on("ack",function(e){e(5,{test:!0})}),n.on("got it",function(){n.disconnect(),e()})}),it("should receive date with ack",function(e){var n=io({forceNew:!0});n.emit("getAckDate",{test:!0},function(o){expect(o).to.be.a("string"),n.disconnect(),e()})}),it("should work with false",function(e){var n=io({forceNew:!0});n.emit("false"),n.on("false",function(o){expect(o).to.be(!1),n.disconnect(),e()})}),it("should receive utf8 multibyte characters",function(e){var n=["\u3066\u3059\u3068","\u042f \u0411 \u0413 \u0414 \u0416 \u0419","\xc4 \xe4 \xdc \xfc \xdf","utf8 \u2014 string","utf8 \u2014 string"],o=io({forceNew:!0}),t=0;o.on("takeUtf8",function(c){expect(c).to.be(n[t]),++t===n.length&&(o.disconnect(),e())}),o.emit("getUtf8")}),it("should connect to a namespace after connection established",function(e){var n=io.Manager(),o=n.socket("/");o.on("connect",function(){var t=n.socket("/foo");t.on("connect",function(){t.close(),o.close(),n.close(),e()})})}),it("should open a new namespace after connection gets closed",function(e){var n=io.Manager(),o=n.socket("/");o.on("connect",function(){o.disconnect()}).on("disconnect",function(){var o=n.socket("/foo");o.on("connect",function(){o.disconnect(),n.close(),e()})})}),it("should reconnect by default",function(e){var n=io({forceNew:!0});n.io.on("reconnect",function(){n.disconnect(),e()}),setTimeout(function(){n.io.engine.close()},500)}),it("should reconnect manually",function(e){var n=io({forceNew:!0});n.once("connect",function(){n.disconnect()}).once("disconnect",function(){n.once("connect",function(){n.disconnect(),e()}),n.connect()})}),it("should reconnect automatically after reconnecting manually",function(e){var n=io({forceNew:!0});n.once("connect",function(){n.disconnect()}).once("disconnect",function(){n.on("reconnect",function(){n.disconnect(),e()}),n.connect(),setTimeout(function(){n.io.engine.close()},500)})}),it("should attempt reconnects after a failed reconnect",function(e){var n=io.Manager({reconnection:!0,timeout:0,reconnectionAttempts:2,reconnectionDelay:10}),o=n.socket("/timeout");o.once("reconnect_failed",function(){var t=0,c=function(){t++};n.on("reconnect_attempt",c),n.on("reconnect_failed",function(){expect(t).to.be(2),o.close(),n.close(),e()}),o.connect()})}),it("reconnect delay should increase every time",function(e){var n,o=io.Manager({reconnection:!0,timeout:0,reconnectionAttempts:3,reconnectionDelay:100,randomizationFactor:.2}),t=o.socket("/timeout"),c=0,i=!0,r=0;t.on("connect_error",function(){n=(new Date).getTime()}),t.on("reconnect_attempt",function(){c++;var e=(new Date).getTime()-n;e<=r&&(i=!1),r=e}),t.on("reconnect_failed",function(){expect(c).to.be(3),expect(i).to.be.ok(),t.close(),o.close(),e()})}),it("reconnect event should fire in socket",function(e){var n=io({forceNew:!0});n.on("reconnect",function(){n.disconnect(),e()}),setTimeout(function(){n.io.engine.close()},500)}),it("should not reconnect when force closed",function(e){var n=io("/invalid",{forceNew:!0,timeout:0,reconnectionDelay:10});n.on("connect_error",function(){n.on("reconnect_attempt",function(){expect().fail()}),n.disconnect(),setTimeout(function(){e()},500)})}),it("should stop reconnecting when force closed",function(e){var n=io("/invalid",{forceNew:!0,timeout:0,reconnectionDelay:10});n.once("reconnect_attempt",function(){n.on("reconnect_attempt",function(){expect().fail()}),n.disconnect(),setTimeout(function(){e()},500)})}),it("should reconnect after stopping reconnection",function(e){var n=io("/invalid",{forceNew:!0,timeout:0,reconnectionDelay:10});n.once("reconnect_attempt",function(){n.on("reconnect_attempt",function(){n.disconnect(),e()}),n.disconnect(),n.connect()})}),it("should stop reconnecting on a socket and keep to reconnect on another",function(e){var n=io.Manager(),o=n.socket("/"),t=n.socket("/asd");n.on("reconnect_attempt",function(){o.on("connect",function(){expect().fail()}),t.on("connect",function(){setTimeout(function(){t.disconnect(),n.disconnect(),e()},500)}),o.disconnect()}),setTimeout(function(){n.engine.close()},1e3)}),it("should try to reconnect twice and fail when requested two attempts with immediate timeout and reconnect enabled",function(e){var n,o=io.Manager({reconnection:!0,timeout:0,reconnectionAttempts:2,reconnectionDelay:10}),t=0,c=function(){t++};o.on("reconnect_attempt",c),o.on("reconnect_failed",function(){expect(t).to.be(2),n.close(),o.close(),e()}),n=o.socket("/timeout")}),it("should fire reconnect_* events on socket",function(e){var n=io.Manager({reconnection:!0,timeout:0,reconnectionAttempts:2,reconnectionDelay:10}),o=n.socket("/timeout_socket"),t=0,c=function(e){t++,expect(e).to.be(t)};o.on("reconnect_attempt",c),o.on("reconnect_failed",function(){expect(t).to.be(2),o.close(),n.close(),e()})}),it("should fire error on socket",function(e){var n=io.Manager({reconnection:!0}),o=n.socket("/timeout_socket");o.on("error",function(t){expect(t.code).to.be("test"),o.close(),n.close(),e()}),o.on("connect",function(){n.engine.onPacket({type:"error",data:"test"})})}),it("should fire reconnecting (on socket) with attempts number when reconnecting twice",function(e){var n=io.Manager({reconnection:!0,timeout:0,reconnectionAttempts:2,reconnectionDelay:10}),o=n.socket("/timeout_socket"),t=0,c=function(e){t++,expect(e).to.be(t)};o.on("reconnecting",c),o.on("reconnect_failed",function(){expect(t).to.be(2),o.close(),n.close(),e()})}),it("should not try to reconnect and should form a connection when connecting to correct port with default timeout",function(e){var n=io.Manager({reconnection:!0,reconnectionDelay:10}),o=function(){t.close(),expect().fail()};n.on("reconnect_attempt",o);var t=n.socket("/valid");t.on("connect",function(){setTimeout(function(){t.close(),n.close(),e()},1e3)})}),it("should connect while disconnecting another socket",function(e){var n=io.Manager(),o=n.socket("/foo");o.on("connect",function(){n.socket("/asd").on("connect",e),o.disconnect()})}),global.document&&!hasCORS||(it("should try to reconnect twice and fail when requested two attempts with incorrect address and reconnect enabled",function(e){var n=io.Manager("http://localhost:3940",{reconnection:!0,reconnectionAttempts:2,reconnectionDelay:10}),o=n.socket("/asd"),t=0,c=function(){t++};n.on("reconnect_attempt",c),n.on("reconnect_failed",function(){expect(t).to.be(2),o.disconnect(),n.close(),e()})}),it("should not try to reconnect with incorrect port when reconnection disabled",function(e){var n=io.Manager("http://localhost:9823",{reconnection:!1}),o=function(){t.close(),expect().fail()};n.on("reconnect_attempt",o),n.on("connect_error",function(){setTimeout(function(){t.disconnect(),n.close(),e()},1e3)});var t=n.socket("/invalid")})),it("should emit date as string",function(e){var n=io({forceNew:!0});n.on("takeDate",function(o){n.close(),expect(o).to.be.a("string"),e()}),n.emit("getDate")}),it("should emit date in object",function(e){var n=io({forceNew:!0});n.on("takeDateObj",function(o){n.close(),expect(o).to.be.an("object"),expect(o.date).to.be.a("string"),e()}),n.emit("getDateObj")}),global.Blob||global.ArrayBuffer||it("should get base64 data as a last resort",function(e){var n=io({forceNew:!0});n.on("takebin",function(o){n.disconnect(),expect(o.base64).to.be(!0),expect(o.data).to.eql("YXNkZmFzZGY="),e()}),n.emit("getbin")}),global.ArrayBuffer){var e=require("base64-arraybuffer");it("should get binary data (as an ArrayBuffer)",function(e){var n=io({forceNew:!0});env.node&&(n.io.engine.binaryType="arraybuffer"),n.emit("doge"),n.on("doge",function(o){expect(o instanceof ArrayBuffer).to.be(!0),n.disconnect(),e()})}),it("should send binary data (as an ArrayBuffer)",function(n){var o=io({forceNew:!0});o.on("buffack",function(){o.disconnect(),n()});var t=e.decode("asdfasdf");o.emit("buffa",t)}),it("should send binary data (as an ArrayBuffer) mixed with json",function(n){var o=io({forceNew:!0});o.on("jsonbuff-ack",function(){o.disconnect(),n()});var t=e.decode("howdy");o.emit("jsonbuff",{hello:"lol",message:t,goodbye:"gotcha"})}),it("should send events with ArrayBuffers in the correct order",function(n){var o=io({forceNew:!0});o.on("abuff2-ack",function(){o.disconnect(),n()});var t=e.decode("abuff1");o.emit("abuff1",t),o.emit("abuff2","please arrive second")})}global.Blob&&null!=textBlobBuilder("xxx")&&(it("should send binary data (as a Blob)",function(e){var n=io({forceNew:!0});n.on("back",function(){n.disconnect(),e()});var o=textBlobBuilder("hello world");n.emit("blob",o)}),it("should send binary data (as a Blob) mixed with json",function(e){var n=io({forceNew:!0});n.on("jsonblob-ack",function(){n.disconnect(),e()});var o=textBlobBuilder("EEEEEEEEE");n.emit("jsonblob",{hello:"lol",message:o,goodbye:"gotcha"})}),it("should send events with Blobs in the correct order",function(e){var n=io({forceNew:!0});n.on("blob3-ack",function(){n.disconnect(),e()});var o=textBlobBuilder("BLOBBLOB");n.emit("blob1",o),n.emit("blob2","second"),n.emit("blob3",o)}))});