(function(){var onmessage,service,indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++)if(i in this&&this[i]===item)return i;return-1};Array.prototype.select_resource_by_id=function(ref_id){var key,output;return output=function(){var i,ref,results;for(results=[],key=i=0,ref=this.length;0<=ref?i<ref:i>ref;key=0<=ref?++i:--i)this[key].id===ref_id&&results.push(this[key]);return results}.call(this)[0]},service={},service.ConstructResolver=function(){function _Class(constructs){this.constructs=constructs}return _Class.prototype.map={CcCondition:"Conditions",CcLoop:"Loops",CcQuestion:"Questions",CcSequence:"Sequences",CcStatement:"Statements"},_Class.prototype.resolve=function(to_check,check_against){var child,collection,construct,index,key,ref,results;null==to_check&&(to_check=["Conditions","Loops","Sequences"]),null==check_against&&(check_against=["Conditions","Loops","Questions","Sequences","Statements"]),ref=this.constructs,results=[];for(key in ref)collection=ref[key],indexOf.call(to_check,key)>=0?results.push(function(){var i,j,k,len,len1,len2,ref1,ref2,results1;for(results1=[],i=0,len=collection.length;i<len;i++){for(construct=collection[i],ref1=construct.children,index=j=0,len1=ref1.length;j<len1;index=++j)child=ref1[index],null!=child.type&&child.type in this.map&&(construct.children[index]=this.constructs[this.map[child.type]].select_resource_by_id(child.id));if(null!=construct.fchildren)for(ref2=construct.fchildren,index=k=0,len2=ref2.length;k<len2;index=++k)child=ref2[index],null!=child.type&&child.type in this.map&&(construct.fchildren[index]=this.constructs[this.map[child.type]].select_resource_by_id(child.id));results1.push(construct.resolved=!0)}return results1}.call(this)):results.push(void 0);return results},_Class}(),service.QuestionResolver=function(){function _Class(questions){this.questions=questions}return _Class.prototype.map={QuestionItem:"Items",QuestionGrid:"Grids"},_Class.prototype.resolve=function(constructs){var base,construct,i,index,len,results;for(results=[],index=i=0,len=constructs.length;i<len;index=++i)construct=constructs[index],results.push(null!=(base=constructs[index]).base?base.base:base.base=this.questions[this.map[construct.question_type]].select_resource_by_id(construct.question_id));return results},_Class}(),service.CodeResolver=function(){function _Class(codes_lists,categories){this.code_lists=codes_lists,this.categories=categories}return _Class.prototype.category=function(code){return this.categories.select_resource_by_id(code.category_id)},_Class.prototype.resolve=function(){var code,code_list,i,index,len,ref,results;for(ref=this.code_lists,results=[],i=0,len=ref.length;i<len;i++)code_list=ref[i],results.push(function(){var j,len1,ref1,results1;for(ref1=code_list.codes,results1=[],index=j=0,len1=ref1.length;j<len1;index=++j)code=ref1[index],results1.push(code_list.codes[index].label=this.category(code).label);return results1}.call(this));return results},_Class}(),service.GroupResolver=function(){function _Class(groups,users){this.groups=groups,this.users=users}return _Class.prototype.resolve=function(){var group,group_index,i,len,ref,results,user,user_index;for(ref=this.groups,results=[],group_index=i=0,len=ref.length;i<len;group_index=++i)group=ref[group_index],this.groups[group_index].users=[],results.push(function(){var j,len1,ref1,results1;for(ref1=this.users,results1=[],user_index=j=0,len1=ref1.length;j<len1;user_index=++j)user=ref1[user_index],group.id===user.group_id?(this.users[user_index].group=group.label,results1.push(this.groups[group_index].users.push(user))):results1.push(void 0);return results1}.call(this));return results},_Class}(),onmessage=function(e){var ConstructResolver,QuestionResolver,data,i,len,options,type,types;for(data=e.data.data,options=e.data.options,types=Array.isArray(e.data.type)?e.data.type:[e.data.type],i=0,len=types.length;i<len;i++)type=types[i],console.time("resolving"),"constructs"===type?(ConstructResolver=new service.ConstructResolver(data.Constructs),ConstructResolver.resolve(options)):"questions"===type&&(QuestionResolver=new service.QuestionResolver(data.Questions),QuestionResolver.resolve(data.Constructs.Questions)),console.timeEnd("resolving");return this.postMessage(data)},self.addEventListener("message",onmessage)}).call(this);