{"version":3,"sources":["routes.js","AuthRoute.js","actions/index.js","pages/Login.js","components/BreadcrumbBar.js","components/Dashboard.js","pages/Instruments.js","pages/InstrumentMap.js","pages/InstrumentBuild.js","components/ObjectStatusBar.js","components/CodeListForm.js","components/CreateNewBuildObjectButtons.js","pages/InstrumentBuildCodeLists.js","components/QuestionItemForm.js","pages/InstrumentBuildQuestionItems.js","components/QuestionGridForm.js","pages/InstrumentBuildQuestionGrids.js","components/ResponseDomainNumericForm.js","components/ResponseDomainTextForm.js","components/ResponseDomainDatetimeForm.js","pages/InstrumentBuildResponseDomains.js","pages/NoMatch.js","components/RedirectFromState.js","App.js","reducers/index.js","components/Store.js","serviceWorker.js","index.js"],"names":["login","instruments","include","all","instrument","map","show","build","codeLists","new","questionItems","questionGrids","responseDomains","AuthRoute","props","isAuthUser","useSelector","state","auth","type","to","url","routes","api_host","process","api_headers","window","localStorage","getItem","axios","interceptors","response","use","error","status","Promise","reject","removeItem","location","Instrument","request","get","headers","dispatch","then","res","instrumentsFetchSuccess","data","catch","err","fetchFailure","message","id","instrumentFetchSuccess","instrumentStatsFetchSuccess","Categories","instrumentId","categoriesFetchSuccess","categories","payload","CodeLists","codeListsFetchSuccess","codeListId","values","put","codeListFetchSuccess","saveError","error_sentence","post","codeList","CcSequences","ccSequencesFetchSuccess","sequences","CcStatements","ccStatementsFetchSuccess","statements","CcConditions","ccConditionsFetchSuccess","conditions","CcQuestions","ccQuestionsFetchSuccess","set","ccQuestionId","topicId","savingItem","savedItem","ccQuestionFetchSuccess","add","variableNames","remove","variableId","questions","question","QuestionItems","questionItemsFetchSuccess","questionItemId","questionItemFetchSuccess","questionItem","QuestionGrids","questionGridsFetchSuccess","questionGridId","questionGridFetchSuccess","questionGrid","ResponseDomainNumerics","responseDomainNumericsFetchSuccess","responseDomainNumericId","responseDomainNumericFetchSuccess","redirectTo","instrument_id","responseDomainType","responseDomainId","responseDomainNumerics","responseDomainNumeric","ResponseDomainTexts","responseDomainTextsFetchSuccess","responseDomainTextId","responseDomainTextFetchSuccess","responseDomainTexts","responseDomainText","ResponseDomainDatetimes","responseDomainDatetimesFetchSuccess","responseDomainDatetimeId","responseDomainDatetimeFetchSuccess","responseDomainDatetimes","responseDomainDatetime","Variables","variablesFetchSuccess","variables","Topics","topicsFetchSuccess","topics","stats","authUserSuccess","authUserFailure","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","useFormField","initialValue","React","useState","value","setValue","onChange","useCallback","e","target","Login","classes","emailField","passwordField","useDispatch","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","onSubmit","preventDefault","email","password","authUser","TextField","required","fullWidth","label","name","autoComplete","autoFocus","Button","color","BreadcrumbBarItem","text","link","isEmpty","BreadcrumbBar","breadcrumbs","Paper","Breadcrumbs","separator","fontSize","aria-label","breadcrumb","Copyright","align","Date","getFullYear","root","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","fixedHeight","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","Dashboard","open","setOpen","charSet","AppBar","clsx","Toolbar","IconButton","edge","onClick","noWrap","Drawer","Divider","List","Grid","item","xs","children","Box","pt","Instruments","page","setPage","rowsPerPage","setRowsPerPage","rows","Object","useEffect","style","Table","size","TableHead","TableRow","TableCell","TableBody","slice","row","key","prefix","ccs","qvs","study","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","length","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","SelectProps","inputProps","native","background","control","nested","paddingLeft","ObjectFinder","cc_sequences","cc_statements","cc_conditions","cc_questions","allQuestionItems","allQuestionGrids","toString","question_type","question_id","QuestionItemListItem","literal","topic","statuses","ObjectStatus","isNil","Alert","severity","AlertTitle","errorMessage","Chip","saving","saved","deleteIcon","TopicList","textAlign","FormControl","formControl","InputLabel","htmlFor","Select","defaultValue","reason","level","VariableList","allVariables","variableOptions","difference","handleChange","filter","x","includes","newVariables","variable","join","oldVariables","Autocomplete","multiple","options","getOptionLabel","option","filterSelectedOptions","renderInput","params","placeholder","getOptionSelected","ConditionItem","aria-labelledby","Collapse","in","timeout","unmountOnExit","disablePadding","child","console","log","SequenceItem","InstrumentMap","seq","sequence","InstrumentBuild","instrumentStats","code_lists","response_domain_datetimes","response_domain_numerics","response_domain_texts","question_items","question_grids","instructions","cc_loops","StatCount","ListItemSecondaryAction","dense","ObjectStatusBar","table","minWidth","validate","errors","formFields","field","formControlProps","multiline","CodeListForm","initialValues","mutators","arrayMutators","render","handleSubmit","push","pristine","pop","submitting","idx","TableContainer","fields","index","freesolo","update","category_id","cursor","reset","disabled","used_by","CreateNewBuildObjectButtons","objectTypes","history","useHistory","buttons","objectType","path","ObjectTypeLookup","ButtonGroup","startIcon","InstrumentBuildCodeLists","selectedCodeList","CodeListItem","handleCodeListSelection","QuestionItemForm","InstrumentBuildQuestionItems","selectedQuestion","QuestionItem","handleQuestionSelection","MenuItem","QuestionGridForm","InstrumentBuildQuestionGrids","setquestionGridId","QuestionGrid","ResponseDomainNumericForm","responseDomain","JSON","stringify","ResponseDomainTextForm","visible","FormField","undefined","ResponseDomainDatetimeForm","InstrumentBuildResponseDomains","selectedResponseDomain","find","ResponseDomainItem","handleResponseDomainSelection","crumbs","responseDomainForm","NoMatch","RedirectFromState","redirect","common","createMuiTheme","App","exact","serializeSearchesArrayToObject","array","reduce","obj","serializeArrayToObject","appReducer","combineReducers","action","setItem","jwt","instrumentQuestions","revisedQuestionItems","revisedQuestionGrids","revisedCodeLists","revisedResponseDomains","createStore","reducers","applyMiddleware","thunk","Boolean","hostname","match","ReactDOM","store","Store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68443663.chunk.js","sourcesContent":["import { include } from 'named-urls'\n\nexport default {\n   login : '/login',\n   instruments: include('/instruments', {\n      all: '',\n      instrument: include(':instrument_id/', {\n         map: include('map/', {\n            show: ''\n        }),\n        build: include('build/', {\n            show: '',\n            codeLists: include('code_lists/', {\n              all: '',\n              show: ':codeListId',\n              new: 'new'\n            }),\n            questionItems: include('question_items/', {\n              all: '',\n              show: ':questionItemId',\n              new: 'new'\n            }),\n            questionGrids: include('question_grids/', {\n              all: '',\n              show: ':questionGridId',\n              new: 'new'\n            }),\n            responseDomains: include('response_domains/', {\n              all: '',\n              new: 'new',\n              show: ':responseDomainType/:responseDomainId',\n            })\n        })\n      })\n   })\n}\n","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { reverse as url } from 'named-urls'\n\nimport routes from './routes'\n\nconst AuthRoute = props => {\n\n  const isAuthUser = useSelector(state => state.auth.isAuthUser);\n\n  const { type } = props;\n\n  if (type === \"guest\" && isAuthUser) {\n    return <Redirect to={url(routes.instruments.all)} />\n  }else if (type === \"private\" && !isAuthUser){\n    return <Redirect to={url(routes.login)} />\n  };\n\n  return <Route {...props} />;\n};\n\nexport default AuthRoute;\n","import axios from \"axios\";\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst api_host = process.env.REACT_APP_API_HOST\n\nconst api_headers = () => ({\n          'Authorization': 'Bearer ' + window.localStorage.getItem('jwt'),\n          'Content-Type': 'application/json'\n        })\n\naxios.interceptors.response.use(function (response) {\n    return response;\n}, function (error) {\n    if (401 === error.response.status) {\n      window.localStorage.removeItem('jwt');\n      window.location = '/login'\n    } else {\n        return Promise.reject(error);\n    }\n});\n\n// Auth\nexport const authUser = (email, password) => {\n  const request = axios.post(api_host + '/users/sign_in.json', {\n      \"user\": {\n              \"email\": email,\n              \"password\": password\n      }\n    })\n  return (dispatch) => {\n      return request.then(res => {\n        dispatch(authUserSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(authUserFailure(err.message));\n      });\n  };\n};\n\nexport const Instrument = {\n  all: () => {\n    const request = axios.get(api_host + '/instruments.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  show: (id) => {\n    const request = axios.get(api_host + '/instruments/' + id + '.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  stats: (id) => {\n    const request = axios.get(api_host + '/instruments/' + id + '/stats.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentStatsFetchSuccess(id, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nexport const Categories = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/categories.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(categoriesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst categoriesFetchSuccess = (instrumentId, categories) => ({\n  type: 'LOAD_INSTRUMENT_CATEGORIES',\n  payload: {\n    instrumentId: instrumentId,\n    categories: categories\n  }\n});\n\nexport const CodeLists = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/code_lists.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(codeListsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, codeListId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/code_lists/' + codeListId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(codeListFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(codeListId, 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/code_lists.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(codeListFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst codeListsFetchSuccess = (instrumentId, codeLists) => ({\n  type: 'LOAD_INSTRUMENT_CODE_LISTS',\n  payload: {\n    instrumentId: instrumentId,\n    codeLists: codeLists\n  }\n});\n\nconst codeListFetchSuccess = (instrumentId, codeList) => ({\n  type: 'LOAD_INSTRUMENT_CODE_LIST',\n  payload: {\n    instrumentId: instrumentId,\n    codeList: codeList\n  }\n});\n\nexport const CcSequences = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_sequences.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccSequencesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst ccSequencesFetchSuccess = (instrumentId, sequences) => ({\n  type: 'LOAD_INSTRUMENT_SEQUENCES',\n  payload: {\n    instrumentId: instrumentId,\n    sequences: sequences\n  }\n});\n\nexport const CcStatements = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_statements.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccStatementsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst ccStatementsFetchSuccess = (instrumentId, statements) => ({\n  type: 'LOAD_INSTRUMENT_STATEMENTS',\n  payload: {\n    instrumentId: instrumentId,\n    statements: statements\n  }\n});\n\nexport const CcConditions = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_conditions.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccConditionsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst ccConditionsFetchSuccess = (instrumentId, conditions) => ({\n  type: 'LOAD_INSTRUMENT_CONDITIONS',\n  payload: {\n    instrumentId: instrumentId,\n    conditions: conditions\n  }\n});\n\nexport const CcQuestions = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_questions.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccQuestionsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  topic: {\n    set: (instrumentId, ccQuestionId, topicId) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/set_topic.json',\n      {\n        \"topic_id\": topicId\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data.message));\n          });\n      };\n    }\n  },\n  variables: {\n    add: (instrumentId, ccQuestionId, variableNames) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/add_variables.json',\n      {\n        \"variable_names\": variableNames\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data.message));\n          });\n      };\n    },\n    remove: (instrumentId, ccQuestionId, variableId) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/remove_variable.json',\n      {\n        \"variable_id\": variableId\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.message));\n          });\n      };\n    }\n  }\n}\n\nconst savingItem = (id, type) => ({\n  type: 'SAVING',\n  payload: {\n    id: id,\n    type: type\n  }\n});\n\nconst savedItem = (id, type) => ({\n  type: 'SAVED',\n  payload: {\n    id: id,\n    type: type\n  }\n});\n\nconst ccQuestionsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTIONS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst ccQuestionFetchSuccess = (instrumentId, question) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION',\n  payload: {\n    instrumentId: instrumentId,\n    question: question\n  }\n});\n\nexport const QuestionItems = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/question_items.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionItemsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, questionItemId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/question_items/' + questionItemId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionItemFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(questionItemId, 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/question_items.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionItemFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst questionItemsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_ITEMS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst questionItemFetchSuccess = (instrumentId, questionItem) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_ITEM',\n  payload: {\n    instrumentId: instrumentId,\n    questionItem: questionItem\n  }\n});\n\nexport const QuestionGrids = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/question_grids.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionGridsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, questionGridId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/question_grids/' + questionGridId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionGridFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(questionGridId, 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/question_grids.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionGridFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst questionGridsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_GRIDS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst questionGridFetchSuccess = (instrumentId, questionGrid) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_GRID',\n  payload: {\n    instrumentId: instrumentId,\n    questionGrid: questionGrid\n  }\n});\n\nexport const ResponseDomainNumerics = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_numerics.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainNumericsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainNumericId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_numerics/' + responseDomainNumericId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainNumericFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainNumericId, 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_numerics.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainNumericFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainNumericsFetchSuccess = (instrumentId, responseDomainNumerics) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERICS',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainNumerics: responseDomainNumerics\n  }\n});\n\nconst responseDomainNumericFetchSuccess = (instrumentId, responseDomainNumeric) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERIC',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainNumeric: responseDomainNumeric\n  }\n});\n\nexport const ResponseDomainTexts = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_texts.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainTextsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainTextId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_texts/' + responseDomainTextId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainTextFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainTextId, 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_texts.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainTextFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainTextsFetchSuccess = (instrumentId, responseDomainTexts) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXTS',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainTexts: responseDomainTexts\n  }\n});\n\nconst responseDomainTextFetchSuccess = (instrumentId, responseDomainText) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXT',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainText: responseDomainText\n  }\n});\n\nexport const ResponseDomainDatetimes = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainDatetimesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainDatetimeId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes/' + responseDomainDatetimeId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainDatetimeFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainDatetimeId, 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainDatetimeFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainDatetimesFetchSuccess = (instrumentId, responseDomainDatetimes) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIMES',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainDatetimes: responseDomainDatetimes\n  }\n});\n\nconst responseDomainDatetimeFetchSuccess = (instrumentId, responseDomainDatetime) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIME',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainDatetime: responseDomainDatetime\n  }\n});\n\nexport const Variables = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(variablesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  add: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/add_variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(variablesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst variablesFetchSuccess = (instrumentId, variables) => ({\n  type: 'LOAD_INSTRUMENT_VARIABLES',\n  payload: {\n    instrumentId: instrumentId,\n    variables: variables\n  }\n});\n\nexport const Topics = {\n  all: () => {\n    const request = axios.get(api_host + '/topics/flattened_nest.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(topicsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst topicsFetchSuccess = (topics) => ({\n  type: 'LOAD_TOPICS',\n  payload: {\n    topics: topics\n  }\n});\n\nconst instrumentsFetchSuccess = instruments => ({\n  type: 'LOAD_INSTRUMENTS',\n  payload: {\n    instruments: instruments\n  }\n});\n\nconst instrumentFetchSuccess = instruments => ({\n  type: 'LOAD_INSTRUMENT',\n  payload: {\n    instrument: instruments\n  }\n});\n\nconst instrumentStatsFetchSuccess = (instrumentId, stats) => ({\n  type: 'LOAD_INSTRUMENT_STATS',\n  payload: {\n    instrumentId: instrumentId,\n    stats: stats\n  }\n});\n\nconst fetchFailure = error => ({\n  type: 'FETCH_FAILURE',\n  payload: {\n    error\n  }\n});\n\nconst saveError = (id, type, error) => ({\n  type: 'ERROR',\n  payload: {\n    id: id,\n    type: type,\n    error: error\n  }\n});\n\nconst authUserSuccess = auth => ({\n  type: 'LOGIN',\n  payload: {\n    ...auth\n  }\n});\n\nconst authUserFailure = error => ({\n  type: 'LOGIN_FAILURE',\n  payload: {\n    error\n  }\n});\n\nconst redirectTo = (url) => ({\n  type: 'REDIRECT',\n  payload: {\n    to: url\n  }\n})\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { authUser } from '../actions'\nimport { useDispatch } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst useFormField = (initialValue: string = \"\") => {\n  const [value, setValue] = React.useState(initialValue);\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value),\n    []\n  );\n  return { value, onChange };\n};\n\nexport default function Login() {\n  const classes = useStyles();\n\n  const emailField = useFormField();\n  const passwordField = useFormField();\n\n  const dispatch = useDispatch()\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    dispatch(authUser(emailField.value, passwordField.value));\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            {...emailField}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            {...passwordField}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { isEmpty } from 'lodash'\n\nconst BreadcrumbBarItem = (props) => {\n  const {text, link} = props\n\n  if(isEmpty(link)){\n    return (\n      <Typography color=\"textPrimary\">{text}</Typography>\n    )\n  }else{\n    return (\n      <Link color=\"inherit\" to={link}>\n        {text}\n      </Link>\n    )\n  }\n}\n\nconst BreadcrumbBar = (props) => {\n  const {breadcrumbs=[]} = props\n\n  return (\n      <Paper>\n        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n          {breadcrumbs.map((breadcrumb) => {\n            return <BreadcrumbBarItem text={breadcrumb.text} link={breadcrumb.link} />\n          })}\n        </Breadcrumbs>\n      </Paper>\n  )\n}\n\nexport default BreadcrumbBar\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport LabelIcon from '@material-ui/icons/Label';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport Helmet from \"react-helmet\";\nimport { useDispatch } from 'react-redux'\nimport BreadcrumbBar from './BreadcrumbBar'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\n        Archivist\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button>\n        <ListItemIcon>\n          <Link to={url(routes.instruments.all)}>\n            <QuestionAnswerIcon />\n          </Link>\n        </ListItemIcon>\n      <Link to={url(routes.instruments.all)}>\n        <ListItemText primary=\"Instruments\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <StorageIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Datasets\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LabelIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Topics\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <SupervisedUserCircleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Admin\" />\n    </ListItem>\n  </div>\n);\n\nexport const Dashboard = (props)  => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Archivist</title>\n      </Helmet>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            {props.title}\n          </Typography>\n          <IconButton color=\"inherit\">\n            <ExitToAppIcon onClick={()=>{ dispatch({type:'LOGOUT'}) }}/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth={false} className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <BreadcrumbBar breadcrumbs={props.breadcrumbs} />\n              <Paper className={classes.paper}>\n                {props.children}\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { Link } from 'react-router-dom';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst Instruments = () => {\n\n  const dispatch = useDispatch()\n  const instruments = useSelector(state => state.instruments);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(instruments);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n     dispatch(Instrument.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Instruments'}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Prefix</TableCell>\n              <TableCell>Control Constructs</TableCell>\n              <TableCell>Q-V Mappings</TableCell>\n              <TableCell>Study</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.prefix}</TableCell>\n                <TableCell>{row.ccs}</TableCell>\n                <TableCell>{row.qvs}</TableCell>\n                <TableCell>{row.study}</TableCell>\n                <TableCell>\n                  <Button variant=\"outlined\">\n                    <Link to={url(routes.instruments.instrument.build.show, { instrument_id: row.prefix })}>Build</Link>\n                  </Button>\n                  <Button variant=\"outlined\">\n                    <Link to={url(routes.instruments.instrument.map.show, { instrument_id: row.prefix })}>Map</Link>\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default Instruments;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, Variables, Topics } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { get, isEmpty, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n  }\n\n  return item\n\n}\n\nconst QuestionItemListItem = (props) => {\n  const {type, id, instrumentId} = props\n  const item = ObjectFinder(instrumentId, type, id)\n  const classes = useStyles();\n\n  const title = (isEmpty(item.question)) ? item.label : item.question.literal\n\n  const topic = get(item, 'topic', {id: null})\n\n  const status = ObjectStatus(item.id, 'CcQuestion')\n\n  return (\n      <ListItem>\n      <Paper className={classes.control}>\n      <Grid container spacing={3}>\n          { !isEmpty(status) && !isNil(status.error) && (\n            <div className={classes.root}>\n              <Alert severity=\"error\">\n                <AlertTitle>Error</AlertTitle>\n                {status.errorMessage}\n              </Alert>\n            </div>\n          )}\n          <Grid item xs={9}>\n            <ListItemText primary={title} />\n          </Grid>\n          <Grid item xs={3}>\n            <Chip label={item.label} color=\"primary\"></Chip>\n            { !isEmpty(status) && !isNil(status.saving) && (\n              <Chip label=\"Saving\" color=\"secondary\"></Chip>\n            )}\n            { !isEmpty(status) && !isNil(status.saved) && (\n              <Chip label=\"Saved\" color=\"secondary\" deleteIcon={<DoneIcon />}></Chip>\n            )}\n          </Grid>\n          <Grid item xs={6}>\n            <VariableList variables={item.variables} instrumentId={instrumentId} ccQuestionId={item.id} />\n          </Grid>\n          <Grid item xs={6}>\n            <TopicList topicId={topic.id} instrumentId={instrumentId} ccQuestionId={item.id} />\n          </Grid>\n        </Grid>\n      </Paper>\n      </ListItem>\n  )\n}\n\nconst TopicList = (props) => {\n  const {topicId, instrumentId, ccQuestionId} = props\n\n  const dispatch = useDispatch()\n\n  const topics = useSelector(state => state.topics);\n\n  const classes = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\n  const handleChange = (event, value, reason) => {\n    dispatch(CcQuestions.topic.set(instrumentId, ccQuestionId, event.target.value));\n  }\n\n  if(isEmpty(topics)){\n    return 'Fetching topics'\n  }else if(isNil(topicId)){\n    return 'Fetching topics'\n  }else{\n    return (\n          <div>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"grouped-native-select\">Topic</InputLabel>\n              <Select native defaultValue={topicId} id=\"grouped-native-select\" onChange={handleChange}>\n                <option aria-label=\"None\" value=\"\" />\n                {Object.values(topics).map((topic) => (\n                  <option key={topic.id} value={topic.id}>{(topic.level === 1) ? topic.name : '--' + topic.name }</option>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n    )\n  }\n}\n\nconst VariableList = (props) => {\n  const {variables, instrumentId, ccQuestionId} = props\n\n  const dispatch = useDispatch()\n\n  const allVariables = useSelector(state => state.variables);\n  const variableOptions = get(allVariables, instrumentId, {})\n\n  const handleAddVariable = (newVariables) => {\n    dispatch(CcQuestions.variables.add(instrumentId, ccQuestionId, newVariables));\n  }\n\n  const handleRemoveVariable = (oldVariables) => {\n    dispatch(CcQuestions.variables.remove(instrumentId, ccQuestionId, oldVariables));\n  }\n\n  var difference = []\n\n  const handleChange = (event, value, reason) => {\n    switch (reason) {\n      case 'select-option':\n        difference = value.filter(x => !variables.includes(x));\n        if(!isEmpty(difference)){\n          return handleAddVariable(difference.map((variable) => { return variable.name }).join(','))\n        };\n        break;\n      case 'remove-option':\n        difference = variables.filter(x => !value.includes(x));\n        if(!isEmpty(difference)){\n          return handleRemoveVariable(difference.map((variable) => { return variable.id }).join(','))\n        };\n        break;\n      default:\n        return null;\n    }\n  }\n\n  if(isEmpty(variables)){\n    return (\n      <div>\n         <Autocomplete\n          multiple\n          id=\"tags-outlined\"\n          options={Object.values(variableOptions)}\n          getOptionLabel={(option) => option.name}\n          onChange={handleChange}\n          value={[]}\n          filterSelectedOptions\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Variables\"\n              placeholder=\"Add variable\"\n            />\n          )}\n        />\n      </div>\n    )\n  }else{\n    return (\n      <div>\n         <Autocomplete\n          multiple\n          id=\"tags-outlined\"\n          options={Object.values(variableOptions)}\n          getOptionLabel={(option) => option.name}\n          onChange={handleChange}\n          value={variables}\n          getOptionSelected= {(option, value) => (\n            option.id === value.id\n          )}\n          filterSelectedOptions\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Variables\"\n              placeholder=\"Add variable\"\n            />\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nconst QuestionGridListItem = (props) => {\n\n  return (\n    <div>This is a Question Grid</div>\n  )\n}\n\nconst ConditionItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'literal', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n              <ListItem button className={classes.nested}>\n                {(function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />;\n                    case 'CcQuestion':\n                      return <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    case 'CcCondition':\n                      return <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    default:\n                      console.log(child)\n                      return null;\n                  }\n                })()}\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst SequenceItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'label', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n                (function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />;\n                          </ListItem>)\n                    case 'CcQuestion':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    case 'CcCondition':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    default:\n                      return null;\n                  }\n                })()\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst InstrumentMap = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n\n  useEffect(() => {\n    dispatch(Instrument.show(instrumentId));\n    dispatch(CcSequences.all(instrumentId));\n    dispatch(CcStatements.all(instrumentId));\n    dispatch(CcConditions.all(instrumentId));\n    dispatch(CcQuestions.all(instrumentId));\n    dispatch(QuestionItems.all(instrumentId));\n    dispatch(QuestionGrids.all(instrumentId));\n    dispatch(Variables.all(instrumentId));\n    dispatch(Topics.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Maps'}>\n        <h1>{get(instrument, 'label')}</h1>\n        {Object.values(cc_sequences).filter(seq => seq.position === 1).map((sequence) => (\n          <SequenceItem instrumentId={instrumentId} type={'CcSequence'} id={sequence.id} title={sequence.label} children={sequence.children}/>\n        ))}\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentMap;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { get } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuild = (props) => {\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const stats = useSelector(state => get(state.instrumentStats, instrumentId, {}));\n\n  const instrumentStats = get(stats, 'stats', {})\n  const {\n    categories=0, code_lists=0, response_domain_datetimes=0,\n    response_domain_numerics=0, response_domain_texts=0,\n    question_items=0, question_grids=0, instructions=0,\n    cc_conditions=0, cc_loops=0, cc_questions=0, cc_sequences=0,\n    cc_statements=0\n  } = instrumentStats\n\n  useEffect(() => {\n    dispatch(Instrument.stats(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const StatCount = (props) => {\n    const {label, value} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label}/>\n        <ListItemSecondaryAction>\n          <Chip label={value} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })}>Code Lists</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Categories\" value={categories} />\n                  <StatCount label=\"Code Lists\" value={code_lists} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })}>ResponseDomains</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Datetime Answers\" value={response_domain_datetimes} />\n                  <StatCount label=\"Numberic Answers\" value={response_domain_numerics} />\n                  <StatCount label=\"Text Answers\" value={response_domain_texts} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })}>Questions</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Question Items\" value={question_items} />\n                  <StatCount label=\"Question Grids\" value={question_grids} />\n                  <StatCount label=\"Instructions\" value={instructions} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2>Constructs</h2>\n              <List dense={true}>\n                  <StatCount label=\"Conditions\" value={cc_conditions} />\n                  <StatCount label=\"Loops\" value={cc_loops} />\n                  <StatCount label=\"Questions\" value={cc_questions} />\n                  <StatCount label=\"Sequences\" value={cc_sequences} />\n                  <StatCount label=\"Statements\" value={cc_statements} />\n              </List>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuild;\n","import React from 'react';\nimport { useSelector } from 'react-redux'\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { isEmpty, isNil, get } from 'lodash'\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nexport const ObjectStatusBar = (props) => {\n  const {id, type} = props\n  const status = ObjectStatus(id, type)\n\n  if(!isEmpty(status) && !isNil(status.error)){\n    return (\n      <div>\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          {status.errorMessage}\n        </Alert>\n      </div>\n    )\n  }else{\n    return ''\n  }\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CodeLists } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport {\n  TextField,\n  Checkboxes,\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <Checkboxes\n        name=\"rd\"\n        formControlProps={{ margin: 'none' }}\n        data={{ label: 'Response Domain', value: true }}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: <TextField name=\"min_responses\" multiline label=\"Min Responses\" margin=\"none\" />,\n  },\n  {\n    size: 12,\n    field: <TextField name=\"max_responses\" multiline label=\"Max Responses\" margin=\"none\" />,\n  }\n];\n\nexport const CodeListForm = (props) => {\n  const {codeList, instrumentId} = props;\n\n  const categories = useSelector(state => get(state.categories, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(codeList.id)){\n      dispatch(CodeLists.create(instrumentId, values))\n    }else{\n      dispatch(CodeLists.update(instrumentId, codeList.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={codeList.id || 'new'} type={'CodeList'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={codeList}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.field}\n                  </Grid>\n                ))}\n                <h3>Codes</h3>\n                  <AddCircleOutlineIcon onClick={() => push('codes', {})}/>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>ID</TableCell>\n                        <TableCell size=\"small\">Value</TableCell>\n                        <TableCell>Label</TableCell>\n                        <TableCell>Actions</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                            <FieldArray name=\"codes\">\n                              {({ fields }) =>\n                                fields.map((name, index) => (\n                                  <TableRow key={name}>\n                                    <TableCell>\n                                      {fields.value[index].id}\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      <TextField name={`${name}.value`} multiline label=\"Value\" margin=\"none\" />\n                                    </TableCell>\n                                    <TableCell>\n                                     <Autocomplete\n                                      freesolo=\"true\"\n                                      options={Object.values(categories)}\n                                      getOptionLabel={(option) => option.label}\n                                      onChange={(event, value, reason)=>{\n                                        if(isNil(value)){\n                                          fields.update(index, {...fields.value[index], ...{category_id: null, label: null} })\n                                        }else{\n                                          fields.update(index, {...fields.value[index], ...{category_id: value.id, label: value.label} })\n                                        }\n                                      } }\n                                      value={{id: fields.value[index].category_id, label:fields.value[index].label}}\n                                      getOptionSelected= {(option, value) => (\n                                        option.id === value.id\n                                      )}\n                                      renderInput={(params) => (\n                                        <TextField name={`${name}.label`}\n                                          {...params}\n                                          variant=\"outlined\"\n                                          label=\"Label\"\n                                          placeholder=\"label\"\n                                        />\n                                      )}\n                                    />\n                                    </TableCell>\n                                    <TableCell>\n                                      <span\n                                        onClick={() => fields.remove(index)}\n                                        style={{ cursor: 'pointer' }}\n                                      >\n                                        <DeleteIcon />\n                                      </span>\n                                    </TableCell>\n                                  </TableRow>\n                                ))\n                              }\n                            </FieldArray>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Grid>\n              <Grid item style={{ marginTop: 16 }}>\n                <h3>Used By</h3>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>ID</TableCell>\n                        <TableCell size=\"small\">Question Type</TableCell>\n                        <TableCell>Label</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                              {codeList.used_by.map((question) => (\n                                  <TableRow key={question.id}>\n                                    <TableCell>\n                                      <Button variant=\"outlined\">\n                                        <Link to={url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: question.id })}>{question.id}</Link>\n                                      </Button>\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      {question.type}\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      {question.label}\n                                    </TableCell>\n                                  </TableRow>\n                                ))\n                              }\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { useHistory } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst ObjectTypeLookup = (objectType, instrumentId) => {\n    switch(objectType) {\n      case('ResponseDomainNumeric'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Numeric'\n        }\n      case('ResponseDomainText'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Text'\n        }\n      case('ResponseDomainDatetime'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Datetime'\n        }\n      case('CodeList'):\n        return {\n          path: url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: 'new' }),\n          text: 'New CodeList'\n        }\n      case('QuestionItem'):\n        return {\n          path: url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: 'new' }),\n          text: 'Question Item'\n        }\n      case('QuestionGrid'):\n        return {\n          path: url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: 'new' }),\n          text: 'Question Grid'\n        }\n      default:\n        return {\n          path: '/',\n          text: 'Not found'\n        }\n  }\n}\n\nexport const CreateNewBuildObjectButtons  = (props) => {\n  const { objectTypes=[], instrumentId} = props;\n\n  const history = useHistory();\n\n  const createNew = (path) => {\n    history.push(path);\n  }\n\n  const buttons = objectTypes.map( objectType => ObjectTypeLookup(objectType, instrumentId) )\n\n  return (\n    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n     {buttons.map((button) => {\n        return <Button onClick={()=> { createNew(button.path)} }startIcon={<AddIcon />}>{button.text}</Button>\n      })}\n    </ButtonGroup>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CodeLists, Categories } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { CodeListForm } from '../components/CodeListForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildCodeLists = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const codeListId = get(props, \"match.params.codeListId\", null);\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n  const selectedCodeList = get(codeLists, codeListId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(CodeLists.all(instrumentId));\n    dispatch(Categories.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const CodeListItem = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleCodeListSelection(id)}}/>\n        <ListItemSecondaryAction>\n          <Chip label={value} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  const handleCodeListSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: id })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Code Lists</h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['CodeList']} />\n              <List dense={true}>\n                {Object.values(codeLists).map((codeList) => {\n                  return <CodeListItem label={codeList.label} value={codeList.used_by.length} id={codeList.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.control}>\n              {!isNil(selectedCodeList) && (\n                <CodeListForm codeList={selectedCodeList} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildCodeLists;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionItems } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Instruction\"\n        name=\"instruction\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nexport const QuestionItemForm = (props) => {\n  const {questionItem, instrumentId} = props;\n\n  const categories = useSelector(state => get(state.categories, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(questionItem.id)){\n      dispatch(QuestionItems.create(instrumentId, values))\n    }else{\n      dispatch(QuestionItems.update(instrumentId, questionItem.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={questionItem.id || 'new'} type={'QuestionItem'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={questionItem}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.field}\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionItems } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { QuestionItemForm } from '../components/QuestionItemForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildQuestionItems = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const questionItemId = get(props, \"match.params.questionItemId\", null);\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const questionItems = useSelector(state => get(state.questionItems, instrumentId, {}));\n  const selectedQuestion = get(questionItems, questionItemId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(QuestionItems.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const QuestionItem = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleQuestionSelection(id)}}/>\n      </ListItem>\n    )\n  }\n\n  const handleQuestionSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: id })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Question Items</h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['QuestionItem', 'QuestionGrid']} />\n              <Link to={url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })}>Question Grids</Link>\n              <List dense={true}>\n                {Object.values(questionItems).map((questionItem) => {\n                  return <QuestionItem label={questionItem.label} id={questionItem.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.control}>\n              {!isNil(selectedQuestion) && (\n                <QuestionItemForm questionItem={selectedQuestion} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildQuestionItems;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionGrids } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Instruction\"\n        name=\"instruction\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    type: 'select',\n    size: 12,\n    field: (options) => (\n      <Select\n        name=\"horizontal_code_list_id\"\n        label=\"Horizontal Code List (X)\"\n        formControlProps={{ margin: 'none' }}\n      >\n        <MenuItem></MenuItem>\n        {Object.values(options).map((item, idx) => (\n          <MenuItem value={item.id}>{item.label}</MenuItem>\n        ))}\n      </Select>\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"vertical_code_list_id\"\n          label=\"Vertical Code List (Y)\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          {Object.values(options).map((item, idx) => (\n            <MenuItem value={item.id}>{item.label}</MenuItem>\n          ))}\n        </Select>\n      )\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"corner_label\"\n          label=\"Corner Label\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='H'>Horizontal</MenuItem>\n          <MenuItem value='V'>Vertical</MenuItem>\n        </Select>\n      )\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Roster Label\"\n        name=\"roster_label\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Roster Row Number\"\n        name=\"roster_rows\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nexport const QuestionGridForm = (props) => {\n  const {questionGrid, instrumentId} = props;\n\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(questionGrid.id)){\n      dispatch(QuestionGrids.create(instrumentId, values))\n    }else{\n      dispatch(QuestionGrids.update(instrumentId, questionGrid.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={questionGrid.id || 'new'} type={'QuestionGrid'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={questionGrid}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionGrids, CodeLists } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { QuestionGridForm } from '../components/QuestionGridForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildQuestionGrids = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const [questionGridId, setquestionGridId] = React.useState(get(props, \"match.params.questionGridId\", null));\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const questionGrids = useSelector(state => get(state.questionGrids, instrumentId, {}));\n  const selectedQuestion = get(questionGrids, questionGridId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(QuestionGrids.all(instrumentId));\n    dispatch(CodeLists.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const QuestionGrid = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleQuestionSelection(id)}}/>\n      </ListItem>\n    )\n  }\n\n  const handleQuestionSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: id })\n    history.push(path);\n    setquestionGridId(id)\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Question Grids</h2>\n              <Link to={url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })}>Question Items</Link>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['QuestionItem', 'QuestionGrid']} />\n              <List dense={true}>\n                {Object.values(questionGrids).map((questionGrid) => {\n                  return <QuestionGrid label={questionGrid.label} id={questionGrid.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.control}>\n              {!isNil(selectedQuestion) && (\n                <QuestionGridForm questionGrid={selectedQuestion} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildQuestionGrids;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainNumerics } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Min\"\n        name=\"min\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Max\"\n        name=\"max\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nexport const ResponseDomainNumericForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainNumerics.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainNumerics.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n            <pre>{JSON.stringify(values, 0, 2)}</pre>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainTexts } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Max Length\"\n        name=\"maxlen\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nexport const ResponseDomainTextForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainTexts.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainTexts.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n            <pre>{JSON.stringify(values, 0, 2)}</pre>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainDatetimes } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    type: 'select',\n    size: 12,\n    field: (options) => (\n      <Select\n        name=\"subtype\"\n        label=\"Type\"\n        formControlProps={{ margin: 'none' }}\n      >\n        <MenuItem value=\"Date\">Date</MenuItem>\n        <MenuItem value=\"Time\">Time</MenuItem>\n        <MenuItem value=\"Duration\">Duration</MenuItem>\n      </Select>\n    ),\n  },\n  {\n    size: 12,\n    visible: (values) => {\n      return get(values, 'subtype', '') === 'Duration'\n    },\n    field: (\n      <TextField\n        label=\"Format\"\n        name=\"format\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nconst FormField = (props) => {\n  const {item, values} = props\n\n  if(item.visible !== undefined && !item.visible(values) ){\n    return ''\n  }\n\n  if(item.type && item.type === 'select'){\n    return item.field()\n  }else{\n    return item.field\n  }\n}\n\nexport const ResponseDomainDatetimeForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainDatetimes.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainDatetimes.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    <FormField item={item} values={values} />\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n            <pre>{JSON.stringify(values, 0, 2)}</pre>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainNumerics, ResponseDomainTexts, ResponseDomainDatetimes } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { ResponseDomainNumericForm } from '../components/ResponseDomainNumericForm'\nimport { ResponseDomainTextForm } from '../components/ResponseDomainTextForm'\nimport { ResponseDomainDatetimeForm } from '../components/ResponseDomainDatetimeForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildResponseDomains = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const responseDomainId = get(props, \"match.params.responseDomainId\", null)\n  const responseDomainType = get(props, \"match.params.responseDomainType\", null)\n\n  const responseDomainNumerics = useSelector(state => get(state.responseDomainNumerics, instrumentId, {}));\n  const responseDomainTexts = useSelector(state => get(state.responseDomainTexts, instrumentId, {}));\n  const responseDomainDatetimes = useSelector(state => get(state.responseDomainDatetimes, instrumentId, {}));\n\n  const responseDomains = [...Object.values(responseDomainNumerics), ...Object.values(responseDomainTexts), ...Object.values(responseDomainDatetimes)]\n\n  const selectedResponseDomain = responseDomains.find(responseDomain => responseDomain.id == responseDomainId && responseDomain.type == responseDomainType) || {};\n\n  useEffect(() => {\n    dispatch(ResponseDomainNumerics.all(instrumentId));\n    dispatch(ResponseDomainTexts.all(instrumentId));\n    dispatch(ResponseDomainDatetimes.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const ResponseDomainItem = (props) => {\n    const {label, type, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleResponseDomainSelection(type,id)}}/>\n        <ListItemSecondaryAction>\n          <Chip label={type} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  const handleResponseDomainSelection = (type, id) => {\n    const path = url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: type, responseDomainId: id })\n    history.push(path);\n  }\n\n  const responseDomainForm = () => {\n    switch(responseDomainType) {\n      case('ResponseDomainNumeric'):\n          return <ResponseDomainNumericForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      case('ResponseDomainText'):\n          return <ResponseDomainTextForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      case('ResponseDomainDatetime'):\n          return <ResponseDomainDatetimeForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      default:\n        return ''\n    }\n  }\n\n  const createNew = (type) => {\n    const path = url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: type, responseDomainId: 'new' })\n    history.push(path);\n  }\n\n  const breadcrumbs = () => {\n    let crumbs = []\n    crumbs.push({ text: 'Instruments', link: url(routes.instruments.all)})\n    crumbs.push({ text: instrumentId})\n    return crumbs;\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} breadcrumbs={breadcrumbs()}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Response Domains</h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['ResponseDomainText', 'ResponseDomainNumeric', 'ResponseDomainDatetime']} />\n              <List dense={true}>\n                {Object.values(responseDomains).map((responseDomain) => {\n                  return <ResponseDomainItem label={responseDomain.label} type={responseDomain.type} id={responseDomain.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.control}>\n              { responseDomainForm() }\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildResponseDomains;\n","const NoMatch = () => {\n\n  return (\n    'NoMatch'\n  )\n}\n\nexport default NoMatch;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport { get } from 'lodash'\n\nconst RedirectFromState = () => {\n  const redirect = useSelector(state => get(state.common, 'redirect'));\n  const dispatch = useDispatch()\n\n  if(redirect){\n    return (\n      <Redirect to={redirect} />\n    )\n  }else{\n    return ''\n  }\n}\n\nexport default RedirectFromState;\n","import React from 'react';\nimport { Switch, BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\n\nimport routes from './routes'\nimport AuthRoute from './AuthRoute'\nimport Login from './pages/Login';\nimport Instruments from './pages/Instruments';\nimport InstrumentMap from './pages/InstrumentMap';\nimport InstrumentBuild from './pages/InstrumentBuild';\nimport InstrumentBuildCodeLists from './pages/InstrumentBuildCodeLists';\nimport InstrumentBuildQuestionItems from './pages/InstrumentBuildQuestionItems';\nimport InstrumentBuildQuestionGrids from './pages/InstrumentBuildQuestionGrids';\nimport InstrumentBuildResponseDomains from './pages/InstrumentBuildResponseDomains';\nimport NoMatch from './pages/NoMatch';\nimport RedirectFromState from './components/RedirectFromState';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#009de6'\n    }\n  }\n});\n\nconst App = () => {\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Router>\n       <div>\n          <RedirectFromState />\n          <Switch>\n            <AuthRoute type=\"guest\" exact path={routes.login} component={Login} />\n            <Route\n              exact\n              path=\"/\"\n              render={() => {return ( <Redirect to={routes.instruments.all} />)}}\n            />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.map.show} component={InstrumentMap} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.show} component={InstrumentBuild} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.all} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.show} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.new} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.all} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.show} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.new} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.all} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.show} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.new} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.all} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.show} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.new} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.all} component={Instruments} />\n            <AuthRoute type=\"guest\" component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    </MuiThemeProvider>\n  )\n}\n\nexport default App\n","import { combineReducers } from \"redux\";\nimport { get } from 'lodash'\n\nconst serializeSearchesArrayToObject = (array) =>\n  array.reduce((obj, item) => {\n    obj[item.prefix] = item\n   return obj\n  }, {})\n\nconst serializeArrayToObject = (array) =>\n  array.reduce((obj, item) => {\n    obj[item.id] = item\n   return obj\n  }, {})\n\nconst auth = (state = { isAuthUser: !!window.localStorage.getItem(\"jwt\") }, action) => {\n\n  switch (action.type) {\n    case 'LOGIN':\n      window.localStorage.setItem('jwt', action.payload.jwt);\n      return { isAuthUser: true }\n    case 'LOGOUT':\n      window.localStorage.removeItem('jwt');\n      return { isAuthUser: false }\n    default:\n      return state\n  }\n}\n\nconst instruments = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENTS':\n      return serializeSearchesArrayToObject(action.payload.instruments)\n    case 'LOAD_INSTRUMENT':\n      return {...state, ...{[action.payload.instrument.prefix]: action.payload.instrument}}\n    default:\n      return state\n  }\n}\n\nconst instrumentStats = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_STATS':\n      return {...state, ...{[action.payload.instrumentId]: action.payload.stats}}\n    default:\n      return state\n  }\n}\n\nconst cc_sequences = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_SEQUENCES':\n    console.log(action.payload)\n    console.log({...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.sequences)}})\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.sequences)}}\n    default:\n      return state\n  }\n}\n\nconst cc_statements = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_STATEMENTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.statements)}}\n    default:\n      return state\n  }\n}\n\nconst cc_conditions = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CONDITIONS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.conditions)}}\n    default:\n      return state\n  }\n}\n\nconst cc_questions = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTIONS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION':\n      var instrumentQuestions = state[action.payload.instrumentId]\n      instrumentQuestions[action.payload.question.id] = action.payload.question\n      return {...state, ...{[action.payload.instrumentId]: instrumentQuestions}}\n    default:\n      return state\n  }\n}\n\nconst questionItems = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTION_ITEMS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION_ITEM':\n      var questionItems = get(state, action.payload.instrumentId, {})\n      const revisedQuestionItems = {...questionItems, ...{[action.payload.questionItem.id]: action.payload.questionItem}}\n      return {...state, ...{[action.payload.instrumentId]: revisedQuestionItems}}\n    default:\n      return state\n  }\n}\n\nconst questionGrids = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTION_GRIDS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION_GRID':\n      var questionGrids = get(state, action.payload.instrumentId, {})\n      const revisedQuestionGrids = {...questionGrids, ...{[action.payload.questionGrid.id]: action.payload.questionGrid}}\n      return {...state, ...{[action.payload.instrumentId]: revisedQuestionGrids}}\n    default:\n      return state\n  }\n}\n\nconst variables = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_VARIABLES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.variables)}}\n    default:\n      return state\n  }\n}\n\nconst codeLists = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CODE_LISTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.codeLists)}}\n    case 'LOAD_INSTRUMENT_CODE_LIST':\n      var codeLists = get(state, action.payload.instrumentId, {})\n      const revisedCodeLists = {...codeLists, ...{[action.payload.codeList.id]: action.payload.codeList}}\n      return {...state, ...{[action.payload.instrumentId]: revisedCodeLists}}\n    default:\n      return state\n  }\n}\n\nconst responseDomainNumerics = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERICS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainNumerics)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERIC':\n      var responseDomainNumerics = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainNumerics, ...{[action.payload.responseDomainNumeric.id]: action.payload.responseDomainNumeric}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    default:\n      return state\n  }\n}\n\nconst responseDomainTexts = (state = {}, action) => {\n\n  console.log(action)\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainTexts)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXT':\n      var responseDomainTexts = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainTexts, ...{[action.payload.responseDomainText.id]: action.payload.responseDomainText}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    default:\n      return state\n  }\n}\n\nconst responseDomainDatetimes = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIMES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainDatetimes)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIME':\n      var responseDomainDatetimes = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainDatetimes, ...{[action.payload.responseDomainDatetime.id]: action.payload.responseDomainDatetime}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    default:\n      return state\n  }\n}\n\nconst categories = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CATEGORIES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.categories)}}\n    default:\n      return state\n  }\n}\n\nconst topics = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_TOPICS':\n      return {...state, ...serializeArrayToObject(action.payload.topics)}\n    default:\n      return state\n  }\n}\n\nconst statuses = (state = {}, action) => {\n\n  var key;\n\n  switch (action.type) {\n    case 'SAVING':\n      key = action.payload.type + ':' + action.payload.id\n      return {...state, ...{[key]: {saving: true}}}\n    case 'SAVED':\n      key = action.payload.type + ':' + action.payload.id\n      return {...state, ...{[key]: {saved: true}}}\n    case 'ERROR':\n      key = action.payload.type + ':' + action.payload.id\n      return {...state, ...{[key]: {error: true, errorMessage: action.payload.error}}}\n    default:\n      return state\n  }\n}\n\nconst common = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'REDIRECT':\n      return {...state, ...{redirect: action.payload.to}}\n    case 'REDIRECT_CLEAR':\n      return {...state, ...{redirect: undefined}}\n    default:\n      return state\n  }\n}\n\n\nconst appReducer = combineReducers({\n    common,\n    auth,\n    instruments,\n    instrumentStats,\n    cc_sequences,\n    cc_statements,\n    cc_conditions,\n    cc_questions,\n    questionItems,\n    questionGrids,\n    categories,\n    codeLists,\n    responseDomainNumerics,\n    responseDomainTexts,\n    responseDomainDatetimes,\n    variables,\n    statuses,\n    topics\n})\n\nexport default appReducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport reducers from \"./../reducers\";\nimport thunk from \"redux-thunk\"\n\nexport default createStore(reducers, applyMiddleware(thunk));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport Store from './components/Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}