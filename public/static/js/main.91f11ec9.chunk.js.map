{"version":3,"sources":["routes.js","AuthRoute.js","actions/index.js","pages/Login.js","components/BreadcrumbBar.js","components/Dashboard.js","pages/Instruments.js","pages/InstrumentMap.js","pages/InstrumentBuild.js","components/ObjectStatusBar.js","components/DeleteObjectButton.js","components/CcConditionForm.js","components/CcQuestionForm.js","components/CcStatementForm.js","components/CcSequenceForm.js","pages/InstrumentConstructBuild.js","components/CodeListForm.js","components/CreateNewBuildObjectButtons.js","pages/InstrumentBuildCodeLists.js","components/QuestionItemForm.js","pages/InstrumentBuildQuestionItems.js","components/QuestionGridForm.js","pages/InstrumentBuildQuestionGrids.js","components/ResponseDomainNumericForm.js","components/ResponseDomainTextForm.js","components/ResponseDomainDatetimeForm.js","pages/InstrumentBuildResponseDomains.js","pages/NoMatch.js","components/RedirectFromState.js","App.js","reducers/index.js","components/Store.js","serviceWorker.js","index.js"],"names":["login","instruments","include","all","instrument","map","show","build","constructs","codeLists","new","questionItems","questionGrids","responseDomains","AuthRoute","props","isAuthUser","useSelector","state","auth","type","to","url","routes","api_host","process","api_headers","window","localStorage","getItem","axios","interceptors","response","use","error","status","Promise","reject","removeItem","location","Instrument","request","get","headers","dispatch","then","res","instrumentsFetchSuccess","data","catch","err","fetchFailure","message","id","instrumentFetchSuccess","instrumentStatsFetchSuccess","instrumentId","values","post","updates","console","log","Categories","categoriesFetchSuccess","categories","payload","CodeLists","codeListsFetchSuccess","update","codeListId","put","codeListFetchSuccess","saveError","error_sentence","create","redirectTo","instrument_id","delete","objectDeleteSuccess","codeList","CcSequences","ccSequencesFetchSuccess","ccSequenceId","ccSequenceFetchSuccess","sequences","sequence","CcStatements","ccStatementsFetchSuccess","ccStatementId","ccStatementFetchSuccess","statements","statement","CcConditions","ccConditionsFetchSuccess","ccConditionId","ccConditionFetchSuccess","conditions","condition","CcQuestions","ccQuestionsFetchSuccess","ccQuestionId","ccQuestionFetchSuccess","topic","set","topicId","savingItem","savedItem","variables","add","variableNames","remove","variableId","questions","question","QuestionItems","questionItemsFetchSuccess","questionItemId","questionItemFetchSuccess","questionItem","QuestionGrids","questionGridsFetchSuccess","questionGridId","questionGridFetchSuccess","questionGrid","ResponseDomainNumerics","responseDomainNumericsFetchSuccess","responseDomainNumericId","responseDomainNumericFetchSuccess","responseDomainType","responseDomainId","responseDomainNumerics","responseDomainNumeric","ResponseDomainTexts","responseDomainTextsFetchSuccess","responseDomainTextId","responseDomainTextFetchSuccess","responseDomainTexts","responseDomainText","ResponseDomainDatetimes","responseDomainDatetimesFetchSuccess","responseDomainDatetimeId","responseDomainDatetimeFetchSuccess","responseDomainDatetimes","responseDomainDatetime","Variables","variablesFetchSuccess","Topics","topicsFetchSuccess","topics","stats","objectType","authUserSuccess","authUserFailure","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","useFormField","initialValue","React","useState","value","setValue","onChange","useCallback","e","target","Login","classes","emailField","passwordField","useDispatch","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","onSubmit","preventDefault","email","password","authUser","TextField","required","fullWidth","label","name","autoComplete","autoFocus","Button","color","BreadcrumbBarItem","text","link","isEmpty","BreadcrumbBar","breadcrumbs","Paper","Breadcrumbs","separator","fontSize","aria-label","breadcrumb","Copyright","align","Date","getFullYear","root","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","fixedHeight","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","Dashboard","open","setOpen","charSet","AppBar","clsx","Toolbar","IconButton","edge","onClick","noWrap","Drawer","Divider","List","maxHeight","Grid","item","xs","children","Box","pt","Instruments","page","setPage","rowsPerPage","setRowsPerPage","rows","Object","useEffect","style","Table","size","TableHead","TableRow","TableCell","TableBody","slice","row","key","prefix","ccs","qvs","study","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","length","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","SelectProps","inputProps","native","background","control","nested","paddingLeft","ObjectFinder","cc_sequences","cc_statements","cc_conditions","cc_questions","allQuestionItems","allQuestionGrids","toString","question_type","question_id","QuestionItemListItem","literal","statuses","ObjectStatus","isNil","Alert","severity","AlertTitle","errorMessage","Chip","saving","saved","deleteIcon","TopicList","textAlign","handleChange","reason","FormControl","formControl","InputLabel","htmlFor","Select","level","defaultValue","VariableList","allVariables","variableOptions","difference","filter","x","includes","newVariables","variable","join","oldVariables","Autocomplete","multiple","options","getOptionLabel","option","filterSelectedOptions","renderInput","params","placeholder","getOptionSelected","ConditionItem","aria-labelledby","Collapse","in","timeout","unmountOnExit","disablePadding","child","SequenceItem","InstrumentMap","undefined","find","element","top","m","InstrumentBuild","instrumentStats","code_lists","response_domain_datetimes","response_domain_numerics","response_domain_texts","question_items","question_grids","instructions","cc_loops","StatCount","ListItemSecondaryAction","dense","ObjectStatusBar","DeleteObjectButton","action","confirm","table","minWidth","validate","errors","formFields","field","CcConditionForm","ccCondition","path","node","initialValues","mutators","arrayMutators","render","handleSubmit","pristine","push","pop","submitting","idx","reset","disabled","formControlProps","MenuItem","CcQuestionForm","ccQuestion","questionOptions","setQuestionOptions","previous","CcStatementForm","ccStatement","CcSequenceForm","ccSequence","TreeNode","expanded","Tree","topSequence","onNodeSelect","treeData","setTreeData","getNodeKey","treeIndex","reorderConstructs","getFlatDataFromTree","ignoreCollapsed","parent","indexOf","branch","orderArray","newTreeData","generateNodeProps","callback","changeNodeAtPath","newNode","updateNode","buttons","addNodeUnderParent","parentKey","expandParent","ConstructForm","object","InstrumentConstructBuild","selectedNode","setSelectedNode","multiline","CodeListForm","TableContainer","fields","index","freesolo","category_id","cursor","used_by","CreateNewBuildObjectButtons","objectTypes","history","useHistory","ObjectTypeLookup","ButtonGroup","startIcon","InstrumentBuildCodeLists","selectedCodeList","CodeListItem","handleCodeListSelection","QuestionItemForm","InstrumentBuildQuestionItems","selectedQuestion","QuestionItem","handleQuestionSelection","QuestionGridForm","cl","rd","InstrumentBuildQuestionGrids","setquestionGridId","QuestionGrid","ResponseDomainNumericForm","responseDomain","ResponseDomainTextForm","visible","FormField","ResponseDomainDatetimeForm","InstrumentBuildResponseDomains","selectedResponseDomain","ResponseDomainItem","handleResponseDomainSelection","crumbs","responseDomainForm","NoMatch","RedirectFromState","redirect","common","createMuiTheme","warning","info","success","App","exact","serializeSearchesArrayToObject","array","reduce","obj","serializeArrayToObject","appReducer","combineReducers","setItem","jwt","instrumentSequences","instrumentStatements","instrumentConditions","instrumentQuestions","revisedQuestionItems","objects","revisedQuestionGrids","revisedCodeLists","revisedResponseDomains","createStore","reducers","applyMiddleware","thunk","Boolean","hostname","match","ReactDOM","store","Store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91f11ec9.chunk.js","sourcesContent":["import { include } from 'named-urls'\n\nexport default {\n   login : '/login',\n   instruments: include('/instruments', {\n      all: '',\n      instrument: include(':instrument_id/', {\n         map: include('map/', {\n            show: ''\n        }),\n        build: include('build/', {\n            show: '',\n            constructs: include('constructs/', {\n                show: ''\n            }),\n            codeLists: include('code_lists/', {\n              all: '',\n              show: ':codeListId',\n              new: 'new'\n            }),\n            questionItems: include('question_items/', {\n              all: '',\n              show: ':questionItemId',\n              new: 'new'\n            }),\n            questionGrids: include('question_grids/', {\n              all: '',\n              show: ':questionGridId',\n              new: 'new'\n            }),\n            responseDomains: include('response_domains/', {\n              all: '',\n              new: 'new',\n              show: ':responseDomainType/:responseDomainId',\n            })\n        })\n      })\n   })\n}\n","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { reverse as url } from 'named-urls'\n\nimport routes from './routes'\n\nconst AuthRoute = props => {\n\n  const isAuthUser = useSelector(state => state.auth.isAuthUser);\n\n  const { type } = props;\n\n  if (type === \"guest\" && isAuthUser) {\n    return <Redirect to={url(routes.instruments.all)} />\n  }else if (type === \"private\" && !isAuthUser){\n    return <Redirect to={url(routes.login)} />\n  };\n\n  return <Route {...props} />;\n};\n\nexport default AuthRoute;\n","import axios from \"axios\";\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst api_host = process.env.REACT_APP_API_HOST\n\nconst api_headers = () => ({\n          'Authorization': 'Bearer ' + window.localStorage.getItem('jwt'),\n          'Content-Type': 'application/json'\n        })\n\naxios.interceptors.response.use(function (response) {\n    return response;\n}, function (error) {\n    if (401 === error.response.status) {\n      window.localStorage.removeItem('jwt');\n      window.location = '/login'\n    } else {\n        return Promise.reject(error);\n    }\n});\n\n// Auth\nexport const authUser = (email, password) => {\n  const request = axios.post(api_host + '/users/sign_in.json', {\n      \"user\": {\n              \"email\": email,\n              \"password\": password\n      }\n    })\n  return (dispatch) => {\n      return request.then(res => {\n        dispatch(authUserSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(authUserFailure(err.message));\n      });\n  };\n};\n\nexport const Instrument = {\n  all: () => {\n    const request = axios.get(api_host + '/instruments.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  show: (id) => {\n    const request = axios.get(api_host + '/instruments/' + id + '.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  stats: (id) => {\n    const request = axios.get(api_host + '/instruments/' + id + '/stats.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentStatsFetchSuccess(id, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  reorderConstructs: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/reorder_ccs.json', { updates: values }, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          console.log('ok')\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  }\n}\n\nexport const Categories = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/categories.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(categoriesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst categoriesFetchSuccess = (instrumentId, categories) => ({\n  type: 'LOAD_INSTRUMENT_CATEGORIES',\n  payload: {\n    instrumentId: instrumentId,\n    categories: categories\n  }\n});\n\nexport const CodeLists = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/code_lists.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(codeListsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, codeListId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/code_lists/' + codeListId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(codeListFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(codeListId, 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/code_lists.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(codeListFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, codeListId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/code_lists/' + codeListId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'CodeList', codeListId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(codeListId, 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst codeListsFetchSuccess = (instrumentId, codeLists) => ({\n  type: 'LOAD_INSTRUMENT_CODE_LISTS',\n  payload: {\n    instrumentId: instrumentId,\n    codeLists: codeLists\n  }\n});\n\nconst codeListFetchSuccess = (instrumentId, codeList) => ({\n  type: 'LOAD_INSTRUMENT_CODE_LIST',\n  payload: {\n    instrumentId: instrumentId,\n    codeList: codeList\n  }\n});\n\nexport const CcSequences = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_sequences.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccSequencesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccSequenceId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_sequences/' + ccSequenceId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccSequenceFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccSequenceId, 'CcSequence', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_sequences.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccSequenceFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcSequence', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, ccSequenceId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_sequences/' + ccSequenceId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'CcSequence', ccSequenceId));\n        })\n        .catch(err => {\n          dispatch(saveError(ccSequenceId, 'CcSequence', err.response.data.error_sentence));\n        });\n    };\n  },\n}\n\nconst ccSequencesFetchSuccess = (instrumentId, sequences) => ({\n  type: 'LOAD_INSTRUMENT_SEQUENCES',\n  payload: {\n    instrumentId: instrumentId,\n    sequences: sequences\n  }\n});\n\nconst ccSequenceFetchSuccess = (instrumentId, sequence) => ({\n  type: 'LOAD_INSTRUMENT_SEQUENCE',\n  payload: {\n    instrumentId: instrumentId,\n    sequence: sequence\n  }\n});\n\nexport const CcStatements = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_statements.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccStatementsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccStatementId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_statements/' + ccStatementId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccStatementFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccStatementId, 'CcStatement', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_statements.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccStatementFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcStatement', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, ccStatementId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_statements/' + ccStatementId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'CcStatement', ccStatementId));\n        })\n        .catch(err => {\n          dispatch(saveError(ccStatementId, 'CcStatement', err.response.data.error_sentence));\n        });\n    };\n  },\n}\n\nconst ccStatementsFetchSuccess = (instrumentId, statements) => ({\n  type: 'LOAD_INSTRUMENT_STATEMENTS',\n  payload: {\n    instrumentId: instrumentId,\n    statements: statements\n  }\n});\n\nconst ccStatementFetchSuccess = (instrumentId, statement) => ({\n  type: 'LOAD_INSTRUMENT_STATEMENT',\n  payload: {\n    instrumentId: instrumentId,\n    statement: statement\n  }\n});\n\nexport const CcConditions = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_conditions.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccConditionsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccConditionId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_conditions/' + ccConditionId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccConditionFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccConditionId, 'CcCondition', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_conditions.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccConditionFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcCondition', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, ccConditionId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_conditions/' + ccConditionId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'CcCondition', ccConditionId));\n        })\n        .catch(err => {\n          dispatch(saveError(ccConditionId, 'CcCondition', err.response.data.error_sentence));\n        });\n    };\n  },\n}\n\nconst ccConditionsFetchSuccess = (instrumentId, conditions) => ({\n  type: 'LOAD_INSTRUMENT_CONDITIONS',\n  payload: {\n    instrumentId: instrumentId,\n    conditions: conditions\n  }\n});\n\nconst ccConditionFetchSuccess = (instrumentId, condition) => ({\n  type: 'LOAD_INSTRUMENT_CONDITION',\n  payload: {\n    instrumentId: instrumentId,\n    condition: condition\n  }\n});\n\nexport const CcQuestions = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_questions.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccQuestionsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccQuestionId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcQuestion', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, ccQuestionId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'CcQuestion', ccQuestionId));\n        })\n        .catch(err => {\n          dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data.error_sentence));\n        });\n    };\n  },\n  topic: {\n    set: (instrumentId, ccQuestionId, topicId) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/set_topic.json',\n      {\n        \"topic_id\": topicId\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data.message));\n          });\n      };\n    }\n  },\n  variables: {\n    add: (instrumentId, ccQuestionId, variableNames) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/add_variables.json',\n      {\n        \"variable_names\": variableNames\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data.message));\n          });\n      };\n    },\n    remove: (instrumentId, ccQuestionId, variableId) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/remove_variable.json',\n      {\n        \"variable_id\": variableId\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.message));\n          });\n      };\n    }\n  }\n}\n\nconst savingItem = (id, type) => ({\n  type: 'SAVING',\n  payload: {\n    id: id,\n    type: type\n  }\n});\n\nconst savedItem = (id, type) => ({\n  type: 'SAVED',\n  payload: {\n    id: id,\n    type: type\n  }\n});\n\nconst ccQuestionsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTIONS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst ccQuestionFetchSuccess = (instrumentId, question) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION',\n  payload: {\n    instrumentId: instrumentId,\n    question: question\n  }\n});\n\nexport const QuestionItems = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/question_items.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionItemsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, questionItemId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/question_items/' + questionItemId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionItemFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(questionItemId, 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/question_items.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionItemFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, questionItemId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/question_items/' + questionItemId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'QuestionItem', questionItemId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(questionItemId, 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst questionItemsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_ITEMS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst questionItemFetchSuccess = (instrumentId, questionItem) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_ITEM',\n  payload: {\n    instrumentId: instrumentId,\n    questionItem: questionItem\n  }\n});\n\nexport const QuestionGrids = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/question_grids.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionGridsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, questionGridId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/question_grids/' + questionGridId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionGridFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(questionGridId, 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/question_grids.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionGridFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, questionGridId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/question_grids/' + questionGridId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'QuestionGrid', questionGridId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(questionGridId, 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst questionGridsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_GRIDS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst questionGridFetchSuccess = (instrumentId, questionGrid) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_GRID',\n  payload: {\n    instrumentId: instrumentId,\n    questionGrid: questionGrid\n  }\n});\n\nexport const ResponseDomainNumerics = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_numerics.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainNumericsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainNumericId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_numerics/' + responseDomainNumericId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainNumericFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainNumericId, 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_numerics.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainNumericFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainNumericId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_numerics/' + responseDomainNumericId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainNumeric', responseDomainNumericId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainNumericId, 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainNumericsFetchSuccess = (instrumentId, responseDomainNumerics) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERICS',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainNumerics: responseDomainNumerics\n  }\n});\n\nconst responseDomainNumericFetchSuccess = (instrumentId, responseDomainNumeric) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERIC',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainNumeric: responseDomainNumeric\n  }\n});\n\nexport const ResponseDomainTexts = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_texts.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainTextsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainTextId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_texts/' + responseDomainTextId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainTextFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainTextId, 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_texts.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainTextFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainTextId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_texts/' + responseDomainTextId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainText', responseDomainTextId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainTextId, 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainTextsFetchSuccess = (instrumentId, responseDomainTexts) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXTS',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainTexts: responseDomainTexts\n  }\n});\n\nconst responseDomainTextFetchSuccess = (instrumentId, responseDomainText) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXT',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainText: responseDomainText\n  }\n});\n\nexport const ResponseDomainDatetimes = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainDatetimesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainDatetimeId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes/' + responseDomainDatetimeId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainDatetimeFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainDatetimeId, 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainDatetimeFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainDatetimeId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes/' + responseDomainDatetimeId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainDatetime', responseDomainDatetimeId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainDatetimeId, 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainDatetimesFetchSuccess = (instrumentId, responseDomainDatetimes) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIMES',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainDatetimes: responseDomainDatetimes\n  }\n});\n\nconst responseDomainDatetimeFetchSuccess = (instrumentId, responseDomainDatetime) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIME',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainDatetime: responseDomainDatetime\n  }\n});\n\nexport const Variables = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(variablesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  add: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/add_variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(variablesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst variablesFetchSuccess = (instrumentId, variables) => ({\n  type: 'LOAD_INSTRUMENT_VARIABLES',\n  payload: {\n    instrumentId: instrumentId,\n    variables: variables\n  }\n});\n\nexport const Topics = {\n  all: () => {\n    const request = axios.get(api_host + '/topics/flattened_nest.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(topicsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst topicsFetchSuccess = (topics) => ({\n  type: 'LOAD_TOPICS',\n  payload: {\n    topics: topics\n  }\n});\n\nconst instrumentsFetchSuccess = instruments => ({\n  type: 'LOAD_INSTRUMENTS',\n  payload: {\n    instruments: instruments\n  }\n});\n\nconst instrumentFetchSuccess = instruments => ({\n  type: 'LOAD_INSTRUMENT',\n  payload: {\n    instrument: instruments\n  }\n});\n\nconst instrumentStatsFetchSuccess = (instrumentId, stats) => ({\n  type: 'LOAD_INSTRUMENT_STATS',\n  payload: {\n    instrumentId: instrumentId,\n    stats: stats\n  }\n});\n\nconst objectDeleteSuccess = (instrumentId, objectType, id) => ({\n  type: 'DELETE_INSTRUMENT_OBJECT_TYPE',\n  payload: {\n    instrumentId: instrumentId,\n    id: id,\n    objectType: objectType\n  }\n});\n\nconst fetchFailure = error => ({\n  type: 'FETCH_FAILURE',\n  payload: {\n    error\n  }\n});\n\nconst saveError = (id, type, error) => ({\n  type: 'ERROR',\n  payload: {\n    id: id,\n    type: type,\n    error: error\n  }\n});\n\nconst authUserSuccess = auth => ({\n  type: 'LOGIN',\n  payload: {\n    ...auth\n  }\n});\n\nconst authUserFailure = error => ({\n  type: 'LOGIN_FAILURE',\n  payload: {\n    error\n  }\n});\n\nconst redirectTo = (url) => ({\n  type: 'REDIRECT',\n  payload: {\n    to: url\n  }\n})\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { authUser } from '../actions'\nimport { useDispatch } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst useFormField = (initialValue: string = \"\") => {\n  const [value, setValue] = React.useState(initialValue);\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value),\n    []\n  );\n  return { value, onChange };\n};\n\nexport default function Login() {\n  const classes = useStyles();\n\n  const emailField = useFormField();\n  const passwordField = useFormField();\n\n  const dispatch = useDispatch()\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    dispatch(authUser(emailField.value, passwordField.value));\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            {...emailField}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            {...passwordField}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { isEmpty } from 'lodash'\n\nconst BreadcrumbBarItem = (props) => {\n  const {text, link} = props\n\n  if(isEmpty(link)){\n    return (\n      <Typography color=\"textPrimary\">{text}</Typography>\n    )\n  }else{\n    return (\n      <Link color=\"inherit\" to={link}>\n        {text}\n      </Link>\n    )\n  }\n}\n\nconst BreadcrumbBar = (props) => {\n  const {breadcrumbs=[]} = props\n\n  return (\n      <Paper>\n        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n          {breadcrumbs.map((breadcrumb) => {\n            return <BreadcrumbBarItem text={breadcrumb.text} link={breadcrumb.link} />\n          })}\n        </Breadcrumbs>\n      </Paper>\n  )\n}\n\nexport default BreadcrumbBar\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport LabelIcon from '@material-ui/icons/Label';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport Helmet from \"react-helmet\";\nimport { useDispatch } from 'react-redux'\nimport BreadcrumbBar from './BreadcrumbBar'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\n        Archivist\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n        <ListItemIcon>\n          <Link to={url(routes.instruments.all)}>\n            <QuestionAnswerIcon />\n          </Link>\n        </ListItemIcon>\n      <Link to={url(routes.instruments.all)}>\n        <ListItemText primary=\"Instruments\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <StorageIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Datasets\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LabelIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Topics\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <SupervisedUserCircleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Admin\" />\n    </ListItem>\n  </div>\n);\n\nexport const Dashboard = (props)  => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const dispatch = useDispatch();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Archivist</title>\n      </Helmet>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            {props.title}\n          </Typography>\n          <IconButton color=\"inherit\">\n            <ExitToAppIcon onClick={()=>{ dispatch({type:'LOGOUT'}) }}/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth={false} maxHeight={false} className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <BreadcrumbBar breadcrumbs={props.breadcrumbs} />\n              <Paper className={classes.paper}>\n                {props.children}\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { Link } from 'react-router-dom';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst Instruments = () => {\n\n  const dispatch = useDispatch()\n  const instruments = useSelector(state => state.instruments);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(instruments);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n     dispatch(Instrument.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Instruments'}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Prefix</TableCell>\n              <TableCell>Control Constructs</TableCell>\n              <TableCell>Q-V Mappings</TableCell>\n              <TableCell>Study</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.prefix}</TableCell>\n                <TableCell>{row.ccs}</TableCell>\n                <TableCell>{row.qvs}</TableCell>\n                <TableCell>{row.study}</TableCell>\n                <TableCell>\n                  <Button variant=\"outlined\">\n                    <Link to={url(routes.instruments.instrument.build.show, { instrument_id: row.prefix })}>Build</Link>\n                  </Button>\n                  <Button variant=\"outlined\">\n                    <Link to={url(routes.instruments.instrument.map.show, { instrument_id: row.prefix })}>Map</Link>\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default Instruments;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, Variables, Topics } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { get, isEmpty, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { Box } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n  }\n\n  return item\n\n}\n\nconst QuestionItemListItem = (props) => {\n  const {type, id, instrumentId} = props\n  const item = ObjectFinder(instrumentId, type, id)\n  const classes = useStyles();\n\n  const title = (isEmpty(item.question)) ? item.label : item.question.literal\n\n  const topic = get(item, 'topic', {id: null})\n  const topicId = get(topic, 'id', null)\n\n  const status = ObjectStatus(item.id, 'CcQuestion')\n\n  return (\n      <ListItem>\n      <Paper className={classes.control}>\n      <Grid container spacing={3}>\n          { !isEmpty(status) && !isNil(status.error) && (\n            <div className={classes.root}>\n              <Alert severity=\"error\">\n                <AlertTitle>Error</AlertTitle>\n                {status.errorMessage}\n              </Alert>\n            </div>\n          )}\n          <Grid item xs={9}>\n            <ListItemText primary={title} />\n          </Grid>\n          <Grid item xs={3}>\n            <Chip label={item.label} color=\"primary\"></Chip>\n            { !isEmpty(status) && !isNil(status.saving) && (\n              <Chip label=\"Saving\" color=\"secondary\">              <SyncLoader/></Chip>\n            )}\n            { !isEmpty(status) && !isNil(status.saved) && (\n              <Chip label=\"Saved\" color=\"success\" deleteIcon={<DoneIcon />}></Chip>\n            )}\n          </Grid>\n          <Grid item xs={6}>\n            <VariableList variables={item.variables} instrumentId={instrumentId} ccQuestionId={item.id} />\n          </Grid>\n          <Grid item xs={6}>\n            <TopicList topicId={topicId} instrumentId={instrumentId} ccQuestionId={item.id} />\n          </Grid>\n        </Grid>\n      </Paper>\n      </ListItem>\n  )\n}\n\nconst TopicList = (props) => {\n  const {topicId, instrumentId, ccQuestionId} = props\n\n  const dispatch = useDispatch()\n\n  const topics = useSelector(state => state.topics);\n\n  const classes = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\n  const handleChange = (event, value, reason) => {\n    dispatch(CcQuestions.topic.set(instrumentId, ccQuestionId, event.target.value));\n  }\n\n  if(isEmpty(topics)){\n    return 'Fetching topics'\n  }else if(isNil(topicId)){\n    return (\n          <div>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"grouped-native-select\">Topic</InputLabel>\n              <Select native id=\"grouped-native-select\" onChange={handleChange}>\n                <option aria-label=\"None\" value=\"\" />\n                {Object.values(topics).map((topic) => (\n                  <option key={topic.id} value={topic.id}>{(topic.level === 1) ? topic.name : '--' + topic.name }</option>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n    )\n  }else{\n    return (\n          <div>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"grouped-native-select\">Topic</InputLabel>\n              <Select native defaultValue={topicId} id=\"grouped-native-select\" onChange={handleChange}>\n                <option aria-label=\"None\" value=\"\" />\n                {Object.values(topics).map((topic) => (\n                  <option key={topic.id} value={topic.id}>{(topic.level === 1) ? topic.name : '--' + topic.name }</option>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n    )\n  }\n}\n\nconst VariableList = (props) => {\n  const {variables, instrumentId, ccQuestionId} = props\n\n  const dispatch = useDispatch()\n\n  const allVariables = useSelector(state => state.variables);\n  const variableOptions = get(allVariables, instrumentId, {})\n\n  const handleAddVariable = (newVariables) => {\n    dispatch(CcQuestions.variables.add(instrumentId, ccQuestionId, newVariables));\n  }\n\n  const handleRemoveVariable = (oldVariables) => {\n    dispatch(CcQuestions.variables.remove(instrumentId, ccQuestionId, oldVariables));\n  }\n\n  var difference = []\n\n  const handleChange = (event, value, reason) => {\n    switch (reason) {\n      case 'select-option':\n        difference = value.filter(x => !variables.includes(x));\n        if(!isEmpty(difference)){\n          return handleAddVariable(difference.map((variable) => { return variable.name }).join(','))\n        };\n        break;\n      case 'remove-option':\n        difference = variables.filter(x => !value.includes(x));\n        if(!isEmpty(difference)){\n          return handleRemoveVariable(difference.map((variable) => { return variable.id }).join(','))\n        };\n        break;\n      default:\n        return null;\n    }\n  }\n\n  if(isEmpty(variables)){\n    return (\n      <div>\n         <Autocomplete\n          multiple\n          id=\"tags-outlined\"\n          options={Object.values(variableOptions)}\n          getOptionLabel={(option) => option.name}\n          onChange={handleChange}\n          value={[]}\n          filterSelectedOptions\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Variables\"\n              placeholder=\"Add variable\"\n            />\n          )}\n        />\n      </div>\n    )\n  }else{\n    return (\n      <div>\n         <Autocomplete\n          multiple\n          id=\"tags-outlined\"\n          options={Object.values(variableOptions)}\n          getOptionLabel={(option) => option.name}\n          onChange={handleChange}\n          value={variables}\n          getOptionSelected= {(option, value) => (\n            option.id === value.id\n          )}\n          filterSelectedOptions\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Variables\"\n              placeholder=\"Add variable\"\n            />\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nconst QuestionGridListItem = (props) => {\n\n  return (\n    <div>This is a Question Grid</div>\n  )\n}\n\nconst ConditionItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'literal', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n              <ListItem button className={classes.nested}>\n                {(function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />;\n                    case 'CcQuestion':\n                      return <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    case 'CcCondition':\n                      return <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    default:\n                      console.log(child)\n                      return null;\n                  }\n                })()}\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst SequenceItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'label', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n                (function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />\n                          </ListItem>)\n                    case 'CcQuestion':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    case 'CcCondition':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    default:\n                      return null;\n                  }\n                })()\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst InstrumentMap = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n\n  useEffect(() => {\n    dispatch(Instrument.show(instrumentId));\n    dispatch(CcSequences.all(instrumentId));\n    dispatch(CcStatements.all(instrumentId));\n    dispatch(CcConditions.all(instrumentId));\n    dispatch(CcQuestions.all(instrumentId));\n    dispatch(QuestionItems.all(instrumentId));\n    dispatch(QuestionGrids.all(instrumentId));\n    dispatch(Variables.all(instrumentId));\n    dispatch(Topics.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sequence = (isEmpty(cc_sequences)) ? undefined : Object.values(cc_sequences).find(element => element.top == true)\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Maps'}>\n        <h1>{get(instrument, 'label')}</h1>\n      {isNil(sequence)\n        ? <Box m=\"auto\"><BounceLoader color={'#009de6'}/></Box>\n        : <SequenceItem instrumentId={instrumentId} type={'CcSequence'} id={sequence.children[0].id} title={sequence.children[0].label} children={sequence.children[0].children}/>\n      }\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentMap;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { get } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuild = (props) => {\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const stats = useSelector(state => get(state.instrumentStats, instrumentId, {}));\n\n  const instrumentStats = get(stats, 'stats', {})\n  const {\n    categories=0, code_lists=0, response_domain_datetimes=0,\n    response_domain_numerics=0, response_domain_texts=0,\n    question_items=0, question_grids=0, instructions=0,\n    cc_conditions=0, cc_loops=0, cc_questions=0, cc_sequences=0,\n    cc_statements=0\n  } = instrumentStats\n\n  useEffect(() => {\n    dispatch(Instrument.stats(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const StatCount = (props) => {\n    const {label, value} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label}/>\n        <ListItemSecondaryAction>\n          <Chip label={value} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })}>Code Lists</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Categories\" value={categories} />\n                  <StatCount label=\"Code Lists\" value={code_lists} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })}>ResponseDomains</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Datetime Answers\" value={response_domain_datetimes} />\n                  <StatCount label=\"Numberic Answers\" value={response_domain_numerics} />\n                  <StatCount label=\"Text Answers\" value={response_domain_texts} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })}>Questions</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Question Items\" value={question_items} />\n                  <StatCount label=\"Question Grids\" value={question_grids} />\n                  <StatCount label=\"Instructions\" value={instructions} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2>Constructs</h2>\n              <List dense={true}>\n                  <StatCount label=\"Conditions\" value={cc_conditions} />\n                  <StatCount label=\"Loops\" value={cc_loops} />\n                  <StatCount label=\"Questions\" value={cc_questions} />\n                  <StatCount label=\"Sequences\" value={cc_sequences} />\n                  <StatCount label=\"Statements\" value={cc_statements} />\n              </List>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuild;\n","import React from 'react';\nimport { useSelector } from 'react-redux'\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { isEmpty, isNil, get } from 'lodash'\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nexport const ObjectStatusBar = (props) => {\n  const {id, type} = props\n  const status = ObjectStatus(id, type)\n\n  if(!isEmpty(status) && !isNil(status.error)){\n    return (\n      <div>\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          {status.errorMessage}\n        </Alert>\n      </div>\n    )\n  }else{\n    return ''\n  }\n}\n","import React from 'react'\nimport {isNil} from 'lodash'\nimport { useDispatch } from 'react-redux'\n\nimport {\n  Grid,\n  Button\n} from '@material-ui/core';\n\nexport const DeleteObjectButton = (props) => {\n  const {instrumentId, id, action} = props;\n\n  const dispatch=useDispatch()\n\n  const handleDelete = () => {\n    if( !isNil(id) && window.confirm('Are you sure you want to delete this?')){\n      dispatch(action.delete(instrumentId, id))\n    }\n  }\n\n  if(isNil(id)){\n    return ''\n  }\n\n  return (\n    <Grid item style={{ marginTop: 16 }}>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={()=>{handleDelete()}}\n      >\n        Delete\n      </Button>\n    </Grid>\n  )\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcConditions } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Logic\"\n        name=\"logic\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n];\n\nexport const CcConditionForm = (props) => {\n  const {ccCondition, instrumentId, onChange, path} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(ccCondition.id)){\n      dispatch(CcConditions.create(instrumentId, values))\n    }else{\n      dispatch(CcConditions.update(instrumentId, ccCondition.id, values))\n    }\n    onChange({node: values, path: path})\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccCondition.id || 'new'} type={'CcQuestion'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccCondition}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcConditions} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcQuestions } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { OnChange } from 'react-final-form-listeners'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"question_type\"\n          label=\"Type\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='QuestionItem'>Item</MenuItem>\n          <MenuItem value='QuestionGrid'>Grid</MenuItem>\n        </Select>\n      )\n  }\n];\n\nexport const CcQuestionForm = (props) => {\n  const {ccQuestion, instrumentId, onChange, path} = props;\n\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  const [questionOptions, setQuestionOptions] = useState((ccQuestion.question_type === 'QuestionGrid') ? questionGrids : questionItems);\n\n  const changeQuestionOptions = (question_type) => {\n    setQuestionOptions((question_type === 'QuestionGrid') ? questionGrids : questionItems)\n  }\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(ccQuestion.id)){\n      dispatch(CcQuestions.create(instrumentId, values))\n    }else{\n      dispatch(CcQuestions.update(instrumentId, ccQuestion.id, values))\n    }\n\n    onChange({node: values, path: path})\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccQuestion.id || 'new'} type={'CcQuestion'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccQuestion}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <OnChange name=\"question_type\">\n                  {(value, previous) => {\n                    changeQuestionOptions(value)\n                    values.question_id = null\n                  }}\n                </OnChange>\n                <Grid item xs=\"12\" key=\"Umm\">\n                  <Select\n                    name=\"question_id\"\n                    label=\"Question\"\n                    formControlProps={{ margin: 'none' }}\n                  >\n                    <MenuItem></MenuItem>\n                    {Object.values(questionOptions).map((item, idx) => (\n                      <MenuItem value={item.id}>{item.label}</MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcQuestions} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcStatements } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n];\n\nexport const CcStatementForm = (props) => {\n  const {ccStatement, instrumentId, onChange, path} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(ccStatement.id)){\n      dispatch(CcStatements.create(instrumentId, values))\n    }else{\n      dispatch(CcStatements.update(instrumentId, ccStatement.id, values))\n    }\n\n    onChange({node: values, path: path})\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccStatement.id || 'new'} type={'CcQuestion'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccStatement}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcStatements} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcSequences } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n];\n\nexport const CcSequenceForm = (props) => {\n  const {ccSequence, instrumentId, onChange, path} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(ccSequence.id)){\n      dispatch(CcSequences.create(instrumentId, values))\n    }else{\n      dispatch(CcSequences.update(instrumentId, ccSequence.id, values))\n    }\n\n    onChange({node: values, path: path})\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccSequence.id || 'new'} type={'CcSequence'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccSequence}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcSequences} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, Variables, Topics } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { CcConditionForm } from '../components/CcConditionForm'\nimport { CcQuestionForm } from '../components/CcQuestionForm'\nimport { CcStatementForm } from '../components/CcStatementForm'\nimport { CcSequenceForm } from '../components/CcSequenceForm'\nimport { get, isEmpty, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { Box } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport SortableTree, { addNodeUnderParent, removeNodeAtPath, getFlatDataFromTree, changeNodeAtPath } from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css'; // This only needs to be imported once in your app\n\nconst TreeNode = (instrumentId, type, id) => {\n  var item = ObjectFinder(instrumentId, type, id)\n  var children = get(item, 'children',[])\n\n  return {...item, ...{ title: item.label, expanded: true, type: item.type, children: children.map(child => TreeNode(instrumentId, child.type, child.id)) } }\n}\n\nconst TreeNodeFormatter = (instrumentId, item) => {\n  return {...item, ...{ title: item.label, expanded: true, type: item.type } }\n}\n\nconst Tree = (props) => {\n  const { topSequence, instrumentId, dispatch, onNodeSelect } = props\n  const [treeData, setTreeData] = useState([TreeNode(instrumentId, 'CcSequence', topSequence.id)]);\n\n  const getNodeKey = ({ treeIndex }) => treeIndex;\n\n  const updateNode = ({ node, path }) => {\n    setTreeData(\n      changeNodeAtPath({\n        treeData: treeData,\n        path,\n        getNodeKey,\n        newNode: TreeNodeFormatter(instrumentId, node)\n      })\n    )\n  }\n\n  const deleteNode = ({ path }) => {\n    setTreeData(removeNodeAtPath({\n                    treeData: treeData,\n                    path,\n                    getNodeKey,\n    }));\n  }\n\n  const orderArray = (data) => {\n    return getFlatDataFromTree({\n      treeData: data,\n      getNodeKey: ({ node }) => { return { id: node.id, type: node.type, children: node.children.map(child => `type ${child.type} id ${child.id}` ) } }, // This ensures your \"id\" properties are exported in the path\n      ignoreCollapsed: false, // Makes sure you traverse every node in the tree, not just the visible ones\n    }).map(({ node, path }) => {\n      let parent = path[path.length - 2]\n      return {\n        id: node.id,\n        type: node.type,\n        position: (parent !== undefined) ? parent.children.indexOf(`type ${node.type} id ${node.id}`) + 1 : node.position,\n        branch: path.length - 1,\n        // // The last entry in the path is this node's key\n        // // The second to last entry (accessed here) is the parent node's key\n        parent: path.length > 1 ? { id: path[path.length - 2].id, type: path[path.length - 2].type } : {},\n    }});\n  }\n\n  const reorderConstructs = (data) => {\n      dispatch(Instrument.reorderConstructs(instrumentId, orderArray(data)));\n  }\n\n  return (\n    <div style={{ height: 10000 }}>\n      <SortableTree\n        treeData={treeData}\n        onChange={newTreeData => { setTreeData(newTreeData); reorderConstructs(newTreeData) } }\n        generateNodeProps={({ node, path }) => ({\n          onClick: () => { onNodeSelect({ node: node, path: path, callback: ({ node, path }) => { updateNode({ node, path }) } }) },\n          buttons: [\n              <button\n              onClick={() =>\n                  setTreeData(addNodeUnderParent({\n                    treeData: treeData,\n                    parentKey: path[path.length - 1],\n                    expandParent: true,\n                    getNodeKey,\n                    newNode: {\n                      title: `New`,\n                    }\n                  }).treeData)\n              }\n            >\n              <AddIcon />\n            </button>\n          ],\n        })}\n      />\n      ↓This flat data is generated from the modified tree data↓\n      <ul>\n      </ul>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n    item.type = 'sequence'\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n    item.type = 'statement'\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n    item.type = 'condition'\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n    item.type = 'question'\n  }\n\n  return item\n\n}\n\nconst ConstructForm = (props) => {\n  const {object, instrumentId} = props;\n  const { node={}, path, callback=(node)=>{ console.log(node)} } = object;\n\n  switch (node.type) {\n    case 'question':\n      return <CcQuestionForm ccQuestion={node} instrumentId={instrumentId} path={path} onChange={callback} />\n    case 'statement':\n      return <CcStatementForm ccStatement={node} instrumentId={instrumentId} path={path} onChange={callback} />\n    case 'sequence':\n      return <CcSequenceForm ccSequence={node} instrumentId={instrumentId} path={path} onChange={callback} />\n    case 'condition':\n      return <CcConditionForm ccCondition={node} instrumentId={instrumentId} path={path} onChange={callback} />\n    default:\n      return ''\n  }\n\n}\n\nconst InstrumentConstructBuild = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  const [selectedNode, setSelectedNode] = useState({});\n\n  useEffect(() => {\n    dispatch(Instrument.show(instrumentId));\n    dispatch(CcSequences.all(instrumentId));\n    dispatch(CcStatements.all(instrumentId));\n    dispatch(CcConditions.all(instrumentId));\n    dispatch(CcQuestions.all(instrumentId));\n    dispatch(QuestionItems.all(instrumentId));\n    dispatch(QuestionGrids.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sequence = (isEmpty(cc_sequences)) ? undefined : Object.values(cc_sequences).find(element => element.top == true)\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Build'}>\n        <h1>{get(instrument, 'label')}</h1>\n      {isNil(sequence) || isEmpty(statements)  || isEmpty(conditions) || isEmpty(questionItems) || isEmpty(questionGrids)  || isEmpty(questions)\n        ? <Box m=\"auto\"><BounceLoader color={'#009de6'}/></Box>\n        : (\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <Tree topSequence={sequence.children[0]} instrumentId={instrumentId} onNodeSelect={setSelectedNode} dispatch={dispatch} />\n            </Grid>\n            <Grid item xs={6}>\n              <ConstructForm object={selectedNode} instrumentId={instrumentId} />\n            </Grid>\n          </Grid>\n        )\n      }\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentConstructBuild;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CodeLists } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport {\n  TextField,\n  Checkboxes,\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <Checkboxes\n        name=\"rd\"\n        formControlProps={{ margin: 'none' }}\n        data={{ label: 'Response Domain', value: true }}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: <TextField name=\"min_responses\" multiline label=\"Min Responses\" margin=\"none\" />,\n  },\n  {\n    size: 12,\n    field: <TextField name=\"max_responses\" multiline label=\"Max Responses\" margin=\"none\" />,\n  }\n];\n\nexport const CodeListForm = (props) => {\n  const {codeList, instrumentId} = props;\n\n  const categories = useSelector(state => get(state.categories, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(codeList.id)){\n      dispatch(CodeLists.create(instrumentId, values))\n    }else{\n      dispatch(CodeLists.update(instrumentId, codeList.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={codeList.id || 'new'} type={'CodeList'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={codeList}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.field}\n                  </Grid>\n                ))}\n                <h3>Codes</h3>\n                  <AddCircleOutlineIcon onClick={() => push('codes', {})}/>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>ID</TableCell>\n                        <TableCell size=\"small\">Value</TableCell>\n                        <TableCell>Label</TableCell>\n                        <TableCell>Actions</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                            <FieldArray name=\"codes\">\n                              {({ fields }) =>\n                                fields.map((name, index) => (\n                                  <TableRow key={name}>\n                                    <TableCell>\n                                      {fields.value[index].id}\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      <TextField name={`${name}.value`} multiline label=\"Value\" margin=\"none\" />\n                                    </TableCell>\n                                    <TableCell>\n                                     <Autocomplete\n                                      freesolo=\"true\"\n                                      options={Object.values(categories)}\n                                      getOptionLabel={(option) => option.label}\n                                      onChange={(event, value, reason)=>{\n                                        if(isNil(value)){\n                                          fields.update(index, {...fields.value[index], ...{category_id: null, label: null} })\n                                        }else{\n                                          fields.update(index, {...fields.value[index], ...{category_id: value.id, label: value.label} })\n                                        }\n                                      } }\n                                      value={{id: fields.value[index].category_id, label:fields.value[index].label}}\n                                      getOptionSelected= {(option, value) => (\n                                        option.id === value.id\n                                      )}\n                                      renderInput={(params) => (\n                                        <TextField name={`${name}.label`}\n                                          {...params}\n                                          variant=\"outlined\"\n                                          label=\"Label\"\n                                          placeholder=\"label\"\n                                        />\n                                      )}\n                                    />\n                                    </TableCell>\n                                    <TableCell>\n                                      <span\n                                        onClick={() => fields.remove(index)}\n                                        style={{ cursor: 'pointer' }}\n                                      >\n                                        <DeleteIcon />\n                                      </span>\n                                    </TableCell>\n                                  </TableRow>\n                                ))\n                              }\n                            </FieldArray>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CodeLists} />\n              </Grid>\n              <Grid item style={{ marginTop: 16 }}>\n                <h3>Used By</h3>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>ID</TableCell>\n                        <TableCell size=\"small\">Question Type</TableCell>\n                        <TableCell>Label</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                              {codeList.used_by.map((question) => (\n                                  <TableRow key={question.id}>\n                                    <TableCell>\n                                      <Button variant=\"outlined\">\n                                        <Link to={url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: question.id })}>{question.id}</Link>\n                                      </Button>\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      {question.type}\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      {question.label}\n                                    </TableCell>\n                                  </TableRow>\n                                ))\n                              }\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { useHistory } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst ObjectTypeLookup = (objectType, instrumentId) => {\n    switch(objectType) {\n      case('ResponseDomainNumeric'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Numeric'\n        }\n      case('ResponseDomainText'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Text'\n        }\n      case('ResponseDomainDatetime'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Datetime'\n        }\n      case('CodeList'):\n        return {\n          path: url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: 'new' }),\n          text: 'New CodeList'\n        }\n      case('QuestionItem'):\n        return {\n          path: url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: 'new' }),\n          text: 'Question Item'\n        }\n      case('QuestionGrid'):\n        return {\n          path: url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: 'new' }),\n          text: 'Question Grid'\n        }\n      default:\n        return {\n          path: '/',\n          text: 'Not found'\n        }\n  }\n}\n\nexport const CreateNewBuildObjectButtons  = (props) => {\n  const { objectTypes=[], instrumentId} = props;\n\n  const history = useHistory();\n\n  const createNew = (path) => {\n    history.push(path);\n  }\n\n  const buttons = objectTypes.map( objectType => ObjectTypeLookup(objectType, instrumentId) )\n\n  return (\n    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n     {buttons.map((button) => {\n        return <Button onClick={()=> { createNew(button.path)} }startIcon={<AddIcon />}>{button.text}</Button>\n      })}\n    </ButtonGroup>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CodeLists, Categories } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { CodeListForm } from '../components/CodeListForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildCodeLists = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const codeListId = get(props, \"match.params.codeListId\", null);\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n  const selectedCodeList = get(codeLists, codeListId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(CodeLists.all(instrumentId));\n    dispatch(Categories.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const CodeListItem = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleCodeListSelection(id)}}/>\n        <ListItemSecondaryAction>\n          <Chip label={value} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  const handleCodeListSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: id })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Code Lists</h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['CodeList']} />\n              <List dense={true}>\n                {Object.values(codeLists).map((codeList) => {\n                  return (\n                    <CodeListItem label={codeList.label} value={codeList.used_by.length} id={codeList.id} />\n                  )\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.control}>\n              {!isNil(selectedCodeList) && (\n                <CodeListForm codeList={selectedCodeList} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildCodeLists;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionItems } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Instruction\"\n        name=\"instruction\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nexport const QuestionItemForm = (props) => {\n  const {questionItem, instrumentId} = props;\n\n  const categories = useSelector(state => get(state.categories, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(questionItem.id)){\n      dispatch(QuestionItems.create(instrumentId, values))\n    }else{\n      dispatch(QuestionItems.update(instrumentId, questionItem.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={questionItem.id || 'new'} type={'QuestionItem'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={questionItem}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.field}\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={QuestionItems} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionItems } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { QuestionItemForm } from '../components/QuestionItemForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildQuestionItems = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const questionItemId = get(props, \"match.params.questionItemId\", null);\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const questionItems = useSelector(state => get(state.questionItems, instrumentId, {}));\n  const selectedQuestion = get(questionItems, questionItemId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(QuestionItems.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const QuestionItem = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleQuestionSelection(id)}}/>\n      </ListItem>\n    )\n  }\n\n  const handleQuestionSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: id })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Question Items</h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['QuestionItem', 'QuestionGrid']} />\n              <Link to={url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })}>Question Grids</Link>\n              <List dense={true}>\n                {Object.values(questionItems).map((questionItem) => {\n                  return <QuestionItem label={questionItem.label} id={questionItem.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.control}>\n              {!isNil(selectedQuestion) && (\n                <QuestionItemForm questionItem={selectedQuestion} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildQuestionItems;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionGrids } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Instruction\"\n        name=\"instruction\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    type: 'select',\n    size: 12,\n    field: (options) => (\n      <Select\n        name=\"horizontal_code_list_id\"\n        label=\"Horizontal Code List (X)\"\n        formControlProps={{ margin: 'none' }}\n      >\n        <MenuItem></MenuItem>\n        {options.map((item, idx) => (\n          <MenuItem value={item.id}>{item.label}</MenuItem>\n        ))}\n      </Select>\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"vertical_code_list_id\"\n          label=\"Vertical Code List (Y)\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          {options.map((item, idx) => (\n            <MenuItem value={item.id}>{item.label}</MenuItem>\n          ))}\n        </Select>\n      )\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"corner_label\"\n          label=\"Corner Label\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='H'>Horizontal</MenuItem>\n          <MenuItem value='V'>Vertical</MenuItem>\n        </Select>\n      )\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Roster Label\"\n        name=\"roster_label\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Roster Row Number\"\n        name=\"roster_rows\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nexport const QuestionGridForm = (props) => {\n  const {questionGrid, instrumentId} = props;\n\n  var codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  // Only show response domains in the list of codeLists\n  codeLists = Object.values(codeLists).filter((cl) => { return cl.rd === true})\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(questionGrid.id)){\n      dispatch(QuestionGrids.create(instrumentId, values))\n    }else{\n      dispatch(QuestionGrids.update(instrumentId, questionGrid.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={questionGrid.id || 'new'} type={'QuestionGrid'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={questionGrid}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={QuestionGrids} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionGrids, CodeLists } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { QuestionGridForm } from '../components/QuestionGridForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildQuestionGrids = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const [questionGridId, setquestionGridId] = React.useState(get(props, \"match.params.questionGridId\", null));\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const questionGrids = useSelector(state => get(state.questionGrids, instrumentId, {}));\n  const selectedQuestion = get(questionGrids, questionGridId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(QuestionGrids.all(instrumentId));\n    dispatch(CodeLists.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const QuestionGrid = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleQuestionSelection(id)}}/>\n      </ListItem>\n    )\n  }\n\n  const handleQuestionSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: id })\n    history.push(path);\n    setquestionGridId(id)\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Question Grids</h2>\n              <Link to={url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })}>Question Items</Link>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['QuestionItem', 'QuestionGrid']} />\n              <List dense={true}>\n                {Object.values(questionGrids).map((questionGrid) => {\n                  return <QuestionGrid label={questionGrid.label} id={questionGrid.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.control}>\n              {!isNil(selectedQuestion) && (\n                <QuestionGridForm questionGrid={selectedQuestion} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildQuestionGrids;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainNumerics } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Min\"\n        name=\"min\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Max\"\n        name=\"max\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nexport const ResponseDomainNumericForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainNumerics.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainNumerics.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainNumerics} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainTexts } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Max Length\"\n        name=\"maxlen\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nexport const ResponseDomainTextForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainTexts.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainTexts.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainTexts} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainDatetimes } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    type: 'select',\n    size: 12,\n    field: (options) => (\n      <Select\n        name=\"subtype\"\n        label=\"Type\"\n        formControlProps={{ margin: 'none' }}\n      >\n        <MenuItem value=\"Date\">Date</MenuItem>\n        <MenuItem value=\"Time\">Time</MenuItem>\n        <MenuItem value=\"Duration\">Duration</MenuItem>\n      </Select>\n    ),\n  },\n  {\n    size: 12,\n    visible: (values) => {\n      return get(values, 'subtype', '') === 'Duration'\n    },\n    field: (\n      <TextField\n        label=\"Format\"\n        name=\"format\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nconst FormField = (props) => {\n  const {item, values} = props\n\n  if(item.visible !== undefined && !item.visible(values) ){\n    return ''\n  }\n\n  if(item.type && item.type === 'select'){\n    return item.field()\n  }else{\n    return item.field\n  }\n}\n\nexport const ResponseDomainDatetimeForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainDatetimes.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainDatetimes.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    <FormField item={item} values={values} />\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainDatetimes} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainNumerics, ResponseDomainTexts, ResponseDomainDatetimes } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { ResponseDomainNumericForm } from '../components/ResponseDomainNumericForm'\nimport { ResponseDomainTextForm } from '../components/ResponseDomainTextForm'\nimport { ResponseDomainDatetimeForm } from '../components/ResponseDomainDatetimeForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildResponseDomains = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const responseDomainId = get(props, \"match.params.responseDomainId\", null)\n  const responseDomainType = get(props, \"match.params.responseDomainType\", null)\n\n  const responseDomainNumerics = useSelector(state => get(state.responseDomainNumerics, instrumentId, {}));\n  const responseDomainTexts = useSelector(state => get(state.responseDomainTexts, instrumentId, {}));\n  const responseDomainDatetimes = useSelector(state => get(state.responseDomainDatetimes, instrumentId, {}));\n\n  const responseDomains = [...Object.values(responseDomainNumerics), ...Object.values(responseDomainTexts), ...Object.values(responseDomainDatetimes)]\n\n  const selectedResponseDomain = responseDomains.find(responseDomain => responseDomain.id == responseDomainId && responseDomain.type == responseDomainType) || {};\n\n  useEffect(() => {\n    dispatch(ResponseDomainNumerics.all(instrumentId));\n    dispatch(ResponseDomainTexts.all(instrumentId));\n    dispatch(ResponseDomainDatetimes.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const ResponseDomainItem = (props) => {\n    const {label, type, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleResponseDomainSelection(type,id)}}/>\n        <ListItemSecondaryAction>\n          <Chip label={type} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  const handleResponseDomainSelection = (type, id) => {\n    const path = url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: type, responseDomainId: id })\n    history.push(path);\n  }\n\n  const responseDomainForm = () => {\n    switch(responseDomainType) {\n      case('ResponseDomainNumeric'):\n          return <ResponseDomainNumericForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      case('ResponseDomainText'):\n          return <ResponseDomainTextForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      case('ResponseDomainDatetime'):\n          return <ResponseDomainDatetimeForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      default:\n        return ''\n    }\n  }\n\n  const createNew = (type) => {\n    const path = url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: type, responseDomainId: 'new' })\n    history.push(path);\n  }\n\n  const breadcrumbs = () => {\n    let crumbs = []\n    crumbs.push({ text: 'Instruments', link: url(routes.instruments.all)})\n    crumbs.push({ text: instrumentId})\n    return crumbs;\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} breadcrumbs={breadcrumbs()}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Response Domains</h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['ResponseDomainText', 'ResponseDomainNumeric', 'ResponseDomainDatetime']} />\n              <List dense={true}>\n                {Object.values(responseDomains).map((responseDomain) => {\n                  return <ResponseDomainItem label={responseDomain.label} type={responseDomain.type} id={responseDomain.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.control}>\n              { responseDomainForm() }\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildResponseDomains;\n","const NoMatch = () => {\n\n  return (\n    'NoMatch'\n  )\n}\n\nexport default NoMatch;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport { get } from 'lodash'\n\nconst RedirectFromState = () => {\n  const redirect = useSelector(state => get(state.common, 'redirect'));\n  const dispatch = useDispatch()\n\n  if(redirect){\n    return (\n      <Redirect to={redirect} />\n    )\n  }else{\n    return ''\n  }\n}\n\nexport default RedirectFromState;\n","import React from 'react';\nimport { Switch, BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\n\nimport routes from './routes'\nimport AuthRoute from './AuthRoute'\nimport Login from './pages/Login';\nimport Instruments from './pages/Instruments';\nimport InstrumentMap from './pages/InstrumentMap';\nimport InstrumentBuild from './pages/InstrumentBuild';\nimport InstrumentConstructBuild from './pages/InstrumentConstructBuild';\nimport InstrumentBuildCodeLists from './pages/InstrumentBuildCodeLists';\nimport InstrumentBuildQuestionItems from './pages/InstrumentBuildQuestionItems';\nimport InstrumentBuildQuestionGrids from './pages/InstrumentBuildQuestionGrids';\nimport InstrumentBuildResponseDomains from './pages/InstrumentBuildResponseDomains';\nimport NoMatch from './pages/NoMatch';\nimport RedirectFromState from './components/RedirectFromState';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#009de6',\n    },\n    secondary: {\n      main: '#652d90',\n    },\n    error: {\n      main: '#eb008b',\n    },\n    warning: {\n      main: '#eb008b',\n    },\n    info: {\n      main: '#faaf40',\n    },\n    success: {\n      main: '#37b34a',\n    },\n  }\n});\n\nconst App = () => {\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Router>\n       <div>\n          <RedirectFromState />\n          <Switch>\n            <AuthRoute type=\"guest\" exact path={routes.login} component={Login} />\n            <Route\n              exact\n              path=\"/\"\n              render={() => {return ( <Redirect to={routes.instruments.all} />)}}\n            />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.map.show} component={InstrumentMap} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.show} component={InstrumentBuild} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.all} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.show} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.new} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.all} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.show} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.new} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.all} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.show} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.new} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.all} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.show} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.new} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.constructs.show} component={InstrumentConstructBuild} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.all} component={Instruments} />\n            <AuthRoute type=\"guest\" component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    </MuiThemeProvider>\n  )\n}\n\nexport default App\n","import { combineReducers } from \"redux\";\nimport { get } from 'lodash'\n\nconst serializeSearchesArrayToObject = (array) =>\n  array.reduce((obj, item) => {\n    obj[item.prefix] = item\n   return obj\n  }, {})\n\nconst serializeArrayToObject = (array) =>\n  array.reduce((obj, item) => {\n    obj[item.id] = item\n   return obj\n  }, {})\n\nconst auth = (state = { isAuthUser: !!window.localStorage.getItem(\"jwt\") }, action) => {\n\n  switch (action.type) {\n    case 'LOGIN':\n      window.localStorage.setItem('jwt', action.payload.jwt);\n      return { isAuthUser: true }\n    case 'LOGOUT':\n      window.localStorage.removeItem('jwt');\n      return { isAuthUser: false }\n    default:\n      return state\n  }\n}\n\nconst instruments = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENTS':\n      return serializeSearchesArrayToObject(action.payload.instruments)\n    case 'LOAD_INSTRUMENT':\n      return {...state, ...{[action.payload.instrument.prefix]: action.payload.instrument}}\n    default:\n      return state\n  }\n}\n\nconst instrumentStats = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_STATS':\n      return {...state, ...{[action.payload.instrumentId]: action.payload.stats}}\n    default:\n      return state\n  }\n}\n\nconst cc_sequences = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_SEQUENCES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.sequences)}}\n    case 'LOAD_INSTRUMENT_SEQUENCE':\n      var instrumentSequences = state[action.payload.instrumentId]\n      instrumentSequences[action.payload.sequence.id] = action.payload.sequence\n      return {...state, ...{[action.payload.instrumentId]: instrumentSequences}}\n    default:\n      return state\n  }\n}\n\nconst cc_statements = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_STATEMENTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.statements)}}\n    case 'LOAD_INSTRUMENT_STATEMENT':\n      var instrumentStatements = state[action.payload.instrumentId]\n      instrumentStatements[action.payload.statement.id] = action.payload.statement\n      return {...state, ...{[action.payload.instrumentId]: instrumentStatements}}\n    default:\n      return state\n  }\n}\n\nconst cc_conditions = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CONDITIONS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.conditions)}}\n    case 'LOAD_INSTRUMENT_CONDITION':\n      var instrumentConditions = state[action.payload.instrumentId]\n      instrumentConditions[action.payload.condition.id] = action.payload.condition\n      return {...state, ...{[action.payload.instrumentId]: instrumentConditions}}\n    default:\n      return state\n  }\n}\n\nconst cc_questions = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTIONS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION':\n      var instrumentQuestions = state[action.payload.instrumentId]\n      instrumentQuestions[action.payload.question.id] = action.payload.question\n      return {...state, ...{[action.payload.instrumentId]: instrumentQuestions}}\n    default:\n      return state\n  }\n}\n\nconst questionItems = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTION_ITEMS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION_ITEM':\n      var questionItems = get(state, action.payload.instrumentId, {})\n      const revisedQuestionItems = {...questionItems, ...{[action.payload.questionItem.id]: action.payload.questionItem}}\n      return {...state, ...{[action.payload.instrumentId]: revisedQuestionItems}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'QuestionItem'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst questionGrids = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTION_GRIDS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION_GRID':\n      var questionGrids = get(state, action.payload.instrumentId, {})\n      const revisedQuestionGrids = {...questionGrids, ...{[action.payload.questionGrid.id]: action.payload.questionGrid}}\n      return {...state, ...{[action.payload.instrumentId]: revisedQuestionGrids}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'QuestionGrid'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst variables = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_VARIABLES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.variables)}}\n    default:\n      return state\n  }\n}\n\nconst codeLists = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CODE_LISTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.codeLists)}}\n    case 'LOAD_INSTRUMENT_CODE_LIST':\n      var codeLists = get(state, action.payload.instrumentId, {})\n      const revisedCodeLists = {...codeLists, ...{[action.payload.codeList.id]: action.payload.codeList}}\n      return {...state, ...{[action.payload.instrumentId]: revisedCodeLists}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'CodeList'){\n        var codeLists = get(state, action.payload.instrumentId, {})\n        delete codeLists[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: codeLists}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainNumerics = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERICS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainNumerics)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERIC':\n      var responseDomainNumerics = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainNumerics, ...{[action.payload.responseDomainNumeric.id]: action.payload.responseDomainNumeric}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainNumeric'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainTexts = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainTexts)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXT':\n      var responseDomainTexts = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainTexts, ...{[action.payload.responseDomainText.id]: action.payload.responseDomainText}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainText'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainDatetimes = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIMES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainDatetimes)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIME':\n      var responseDomainDatetimes = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainDatetimes, ...{[action.payload.responseDomainDatetime.id]: action.payload.responseDomainDatetime}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainDatetime'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst categories = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CATEGORIES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.categories)}}\n    default:\n      return state\n  }\n}\n\nconst topics = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_TOPICS':\n      return {...state, ...serializeArrayToObject(action.payload.topics)}\n    default:\n      return state\n  }\n}\n\nconst statuses = (state = {}, action) => {\n\n  var key;\n\n  switch (action.type) {\n    case 'SAVING':\n      key = action.payload.type + ':' + action.payload.id\n      return {...state, ...{[key]: {saving: true}}}\n    case 'SAVED':\n      key = action.payload.type + ':' + action.payload.id\n      return {...state, ...{[key]: {saved: true}}}\n    case 'ERROR':\n      key = action.payload.type + ':' + action.payload.id\n      return {...state, ...{[key]: {error: true, errorMessage: action.payload.error}}}\n    default:\n      return state\n  }\n}\n\nconst common = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'REDIRECT':\n      return {...state, ...{redirect: action.payload.to}}\n    case 'REDIRECT_CLEAR':\n      return {...state, ...{redirect: undefined}}\n    default:\n      return state\n  }\n}\n\n\nconst appReducer = combineReducers({\n    common,\n    auth,\n    instruments,\n    instrumentStats,\n    cc_sequences,\n    cc_statements,\n    cc_conditions,\n    cc_questions,\n    questionItems,\n    questionGrids,\n    categories,\n    codeLists,\n    responseDomainNumerics,\n    responseDomainTexts,\n    responseDomainDatetimes,\n    variables,\n    statuses,\n    topics\n})\n\nexport default appReducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport reducers from \"./../reducers\";\nimport thunk from \"redux-thunk\"\n\nexport default createStore(reducers, applyMiddleware(thunk));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport Store from './components/Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}