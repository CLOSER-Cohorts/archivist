{"version":3,"sources":["routes.js","AuthRoute.js","actions/index.js","pages/Login.js","components/BreadcrumbBar.js","support/ObjectColour.js","components/Dashboard.js","components/ObjectStatusBar.js","components/FileField.js","components/AdminInstrumentForm.js","components/AdminDatasetForm.js","pages/AdminImport.js","pages/AdminImportView.js","pages/AdminImports.js","components/AdminImportMappingsTable.js","components/AdminImportMappingsForm.js","components/Loader.js","pages/AdminInstrumentImportMappings.js","pages/AdminDatasetImportMappings.js","pages/AdminInstruments.js","pages/AdminDatasets.js","pages/Instruments.js","pages/Datasets.js","pages/DatasetView.js","components/InstrumentHeading.js","pages/InstrumentView.js","pages/InstrumentMap.js","pages/InstrumentBuild.js","components/DeleteObjectButton.js","support/ObjectCheckForInitialValues.js","components/CcConditionForm.js","components/CcQuestionForm.js","components/CcStatementForm.js","components/CcSequenceForm.js","components/CcLoopForm.js","pages/InstrumentConstructBuild.js","components/CodeListForm.js","components/CreateNewBuildObjectButtons.js","pages/InstrumentBuildCodeLists.js","components/QuestionItemForm.js","pages/InstrumentBuildQuestionItems.js","components/QuestionGridForm.js","pages/InstrumentBuildQuestionGrids.js","components/ResponseDomainNumericForm.js","components/ResponseDomainTextForm.js","components/ResponseDomainDatetimeForm.js","pages/InstrumentBuildResponseDomains.js","pages/NoMatch.js","components/RedirectFromState.js","App.js","reducers/index.js","components/Store.js","serviceWorker.js","index.js"],"names":["login","datasets","include","all","admin","import","imports","show","instruments","importMappings","instrument","map","build","constructs","codeLists","new","questionItems","questionGrids","responseDomains","AuthRoute","props","isAuthUser","useSelector","state","auth","type","to","url","routes","api_host","process","api_headers","window","localStorage","getItem","axios","interceptors","response","use","error","status","Promise","reject","removeItem","location","Dataset","request","get","headers","dispatch","then","res","datasetsFetchSuccess","data","catch","err","fetchFailure","message","id","datasetFetchSuccess","AdminInstrument","values","formData","FormData","append","files","post","savingItem","savedItem","console","log","AdminDataset","AdminImportMapping","importsFetchSuccess","AdminImport","importFetchSuccess","Instrument","instrumentsFetchSuccess","instrumentFetchSuccess","instrumentStatsFetchSuccess","instrumentId","updates","Categories","categoriesFetchSuccess","categories","payload","CodeLists","codeListsFetchSuccess","update","codeListId","put","codeListFetchSuccess","saveError","error_sentence","create","redirectTo","instrument_id","delete","objectDeleteSuccess","codeList","CcSequences","ccSequencesFetchSuccess","ccSequenceId","ccSequenceFetchSuccess","onSuccess","object","onDelete","sequences","sequence","CcStatements","ccStatementsFetchSuccess","ccStatementId","ccStatementFetchSuccess","statements","statement","CcLoops","ccLoopsFetchSuccess","ccLoopId","ccLoopFetchSuccess","loops","loop","ResponseUnits","responseUnitsFetchSuccess","responseUnits","CcConditions","ccConditionsFetchSuccess","ccConditionId","ccConditionFetchSuccess","conditions","condition","CcQuestions","ccQuestionsFetchSuccess","ccQuestionId","ccQuestionFetchSuccess","topic","set","topicId","variables","add","variableNames","remove","variableId","questions","question","QuestionItems","questionItemsFetchSuccess","questionItemId","questionItemFetchSuccess","questionItem","QuestionGrids","questionGridsFetchSuccess","questionGridId","questionGridFetchSuccess","questionGrid","ResponseDomainNumerics","responseDomainNumericsFetchSuccess","responseDomainNumericId","responseDomainNumericFetchSuccess","responseDomainType","responseDomainId","responseDomainNumerics","responseDomainNumeric","ResponseDomainTexts","responseDomainTextsFetchSuccess","responseDomainTextId","responseDomainTextFetchSuccess","responseDomainTexts","responseDomainText","ResponseDomainDatetimes","responseDomainDatetimesFetchSuccess","responseDomainDatetimeId","responseDomainDatetimeFetchSuccess","responseDomainDatetimes","responseDomainDatetime","Variables","variablesFetchSuccess","DatasetVariable","datasetId","datasetVariablesFetchSuccess","datasetVariableId","sources","datasetVariableFetchSuccess","source","other","class","x","y","variable","Topics","topicsFetchSuccess","topics","dataset","importObj","stats","objectType","authUserSuccess","authUserFailure","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","useFormField","initialValue","React","useState","value","setValue","onChange","useCallback","e","target","Login","classes","emailField","passwordField","useDispatch","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","onSubmit","preventDefault","email","password","authUser","TextField","required","fullWidth","label","name","autoComplete","autoFocus","Button","color","BreadcrumbBarItem","text","link","isEmpty","root","padding","BreadcrumbBar","useLocation","buildDatasetBreadcrumbs","buildAdminBreadcrumbs","buildInstrumentBreadcrumbs","crumbs","push","params","capturingRegex","found","pathname","match","RegExp","paramsFromPath","subtype","breadcrumbs","buildBreadcrumbs","Paper","Breadcrumbs","separator","fontSize","aria-label","breadcrumb","ObjectColour","Copyright","align","Date","getFullYear","nested","paddingLeft","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","fixedHeight","MainListItems","open","setOpen","ListItem","button","ListItemIcon","ListItemText","primary","onClick","style","Collapse","in","timeout","unmountOnExit","List","disablePadding","Dashboard","charSet","AppBar","clsx","Toolbar","IconButton","edge","noWrap","Drawer","src","alt","Divider","maxHeight","Grid","item","xs","children","Box","pt","ObjectStatus","statuses","key","ObjectStatusBar","isNil","saved","Alert","severity","AlertTitle","errorMessage","FileField","input","table","minWidth","boxShadow","formFields","size","field","AdminInstrumentForm","initialValues","validate","render","handleSubmit","mutators","pop","pristine","submitting","idx","disabled","AdminDatasetForm","useEffect","AdminImportView","importId","logs","rows","Object","filename","created_at","Table","TableHead","TableRow","TableCell","TableBody","row","original_text","matches","outcome","AdminImports","page","setPage","rowsPerPage","setRowsPerPage","sort","reverse","slice","import_type","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","length","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","SelectProps","inputProps","native","AdminImportMappingsTable","file","ButtonGroup","AdminImportMappingsForm","hint","Loader","m","shuffle","AdminInstrumentImportMappings","instrumentImportMappings","dataLoaded","setDataLoaded","AdminDatasetImportMappings","datasetImportMappings","AdminInstruments","prefix","study","AdminDatasets","Instruments","ccs","qvs","Datasets","dvs","dataset_id","DatasetView","datasetVariables","SourcesList","sourceOptions","filter","opt","difference","handleChange","reason","includes","newSources","oldSources","Autocomplete","multiple","options","getOptionLabel","option","filterSelectedOptions","renderInput","placeholder","getOptionSelected","var_type","InstrumentHeading","mode","slug","background","control","ObjectFinder","cc_sequences","cc_statements","cc_conditions","cc_questions","allQuestionItems","allQuestionGrids","toString","question_type","question_id","QuestionItemListItem","literal","rds","ResponseDomains","rd","ResponseDomainCodes","codes","code","StatementListItem","ConditionItem","aria-labelledby","child","SequenceItem","InstrumentView","undefined","find","element","top","Chip","saving","deleteIcon","VariableList","TopicList","textAlign","FormControl","formControl","InputLabel","htmlFor","Select","level","defaultValue","allVariables","variableOptions","newVariables","join","oldVariables","InstrumentMap","InstrumentBuild","instrumentStats","code_lists","response_domain_datetimes","response_domain_numerics","response_domain_texts","question_items","question_grids","instructions","cc_loops","StatCount","ListItemSecondaryAction","dense","DeleteObjectButton","action","confirm","ObjectCheckForInitialValues","initialValuesWithEmptyFields","keys","reduce","acc","Array","isArray","merge","CcConditionForm","ccCondition","path","newObject","node","errors","arrayMutators","reset","formControlProps","MenuItem","CcQuestionForm","ccQuestion","allResponseUnits","response_units","questionOptions","setQuestionOptions","error_key","previous","CcStatementForm","ccStatement","CcSequenceForm","ccSequence","CcLoopForm","ccLoop","start_val","loop_var","TreeNode","expanded","fchildren","trueAndFalse","conditionId","Tree","topSequence","onNodeSelect","treeData","setTreeData","selectedNode","setSelectedNode","searchString","setSearchString","searchFocusIndex","setSearchFocusIndex","searchFoundCount","setSearchFoundCount","getNodeKey","treeIndex","canHaveChildren","toggleExpand","toggleExpandedForAll","reorderConstructs","getFlatDataFromTree","ignoreCollapsed","parent","branch","indexOf","el","orderArray","generateButtons","buttons","addNodeUnderParent","parentKey","expandParent","newNode","stopPropagation","onRequestSearch","newValue","onCancelSearch","divider","startIcon","newTreeData","canNodeHaveChildren","canDrop","nextParent","prevPath","nextPath","canDrag","searchMethod","searchQuery","toLowerCase","searchFocusOffset","searchFinishCallback","generateNodeProps","callback","changeNodeAtPath","updateNode","deleteCallback","removeNodeAtPath","deleteNode","side","right","ConstructForm","NewConstructQuestion","InstrumentConstructBuild","visible","multiline","FormField","CodeListForm","TableContainer","fields","index","freesolo","category_id","cursor","used_by","CreateNewBuildObjectButtons","objectTypes","history","useHistory","ObjectTypeLookup","InstrumentBuildCodeLists","selectedCodeList","CodeListItem","handleCodeListSelection","QuestionItemForm","InstrumentBuildQuestionItems","selectedQuestion","QuestionItem","handleQuestionSelection","QuestionGridForm","cl","cols","order","InstrumentBuildQuestionGrids","setquestionGridId","QuestionGrid","ResponseDomainNumericForm","responseDomain","ResponseDomainTextForm","ResponseDomainDatetimeForm","InstrumentBuildResponseDomains","selectedResponseDomain","ResponseDomainItem","handleResponseDomainSelection","responseDomainForm","NoMatch","RedirectFromState","redirect","common","createMuiTheme","warning","info","success","App","exact","serializeArrayToObject","array","obj","appReducer","combineReducers","setItem","jwt","instrumentSequences","instrumentStatements","instrumentConditions","instrumentLoops","instrumentQuestions","instrumentResponseUnits","responseUnit","revisedQuestionItems","objects","revisedQuestionGrids","revisedCodeLists","revisedResponseDomains","revisedVariables","revisedImportMappings","importMapping","createStore","reducers","applyMiddleware","thunk","Boolean","hostname","ReactDOM","store","Store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3149e141.chunk.js","sourcesContent":["import { include } from 'named-urls'\n\nexport default {\n    login : '/login',\n    datasets: include('/datasets', {\n      all: ''\n    }),\n    admin: include('/admin/', {\n      import: 'import',\n      imports: include('imports/', {\n        all: '',\n        show: ':importId'\n      }),\n      instruments: include('instruments/', {\n        all: '',\n        importMappings: ':instrumentId/imports'\n      }),\n      datasets: include('datasets/', {\n        all: '',\n        importMappings: ':datasetId/imports'\n      }),\n    }),\n    instruments: include('/instruments', {\n      all: '',\n      instrument: include(':instrument_id/', {\n        show: '',\n         map: include('map/', {\n            show: ''\n        }),\n        build: include('build/', {\n            show: '',\n            constructs: include('constructs/', {\n                show: ''\n            }),\n            codeLists: include('code_lists/', {\n              all: '',\n              show: ':codeListId',\n              new: 'new'\n            }),\n            questionItems: include('question_items/', {\n              all: '',\n              show: ':questionItemId',\n              new: 'new'\n            }),\n            questionGrids: include('question_grids/', {\n              all: '',\n              show: ':questionGridId',\n              new: 'new'\n            }),\n            responseDomains: include('response_domains/', {\n              all: '',\n              new: 'new',\n              show: ':responseDomainType/:responseDomainId',\n            })\n        })\n      })\n   })\n}\n","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { reverse as url } from 'named-urls'\n\nimport routes from './routes'\n\nconst AuthRoute = props => {\n\n  const isAuthUser = useSelector(state => state.auth.isAuthUser);\n\n  const { type } = props;\n\n  if (type === \"guest\" && isAuthUser) {\n    return <Redirect to={url(routes.instruments.all)} />\n  }else if (type === \"private\" && !isAuthUser){\n    return <Redirect to={url(routes.login)} />\n  };\n\n  return <Route {...props} />;\n};\n\nexport default AuthRoute;\n","import axios from \"axios\";\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst api_host = process.env.REACT_APP_API_HOST\n\nconst api_headers = () => ({\n          'Authorization': 'Bearer ' + window.localStorage.getItem('jwt'),\n          'Content-Type': 'application/json'\n        })\n\naxios.interceptors.response.use(function (response) {\n    return response;\n}, function (error) {\n    if (401 === error.response.status) {\n      window.localStorage.removeItem('jwt');\n      window.location = '/login'\n    } else {\n        return Promise.reject(error);\n    }\n});\n\n// Auth\nexport const authUser = (email, password) => {\n  const request = axios.post(api_host + '/users/sign_in.json', {\n      \"user\": {\n              \"email\": email,\n              \"password\": password\n      }\n    })\n  return (dispatch) => {\n      return request.then(res => {\n        dispatch(authUserSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(authUserFailure(err.message));\n      });\n  };\n};\n\nexport const Dataset = {\n  all: () => {\n    const request = axios.get(api_host + '/datasets.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(datasetsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  show: (id) => {\n    const request = axios.get(api_host + '/datasets/' + id + '.json?questions=true',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(datasetFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nexport const AdminInstrument = {\n  create: (values) => {\n    let formData = new FormData();\n\n    formData.append(\"files[]\", values.files[0]);\n    const request = axios.post(api_host + '/admin/import/instruments/', formData, {\n        headers: {...api_headers(), ...{'Content-Type': 'multipart/form-data'}}\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'AdminInstrument'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'AdminInstrument'));\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  },\n}\n\nexport const AdminDataset = {\n  create: (values) => {\n    let formData = new FormData();\n\n    formData.append(\"files[]\", values.files[0]);\n    const request = axios.post(api_host + '/admin/import/datasets/', formData, {\n        headers: {...api_headers(), ...{'Content-Type': 'multipart/form-data'}}\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'AdminDataset'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'AdminDataset'));\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  },\n}\n\nexport const AdminImportMapping = {\n  create: (type, id, values) => {\n    let formData = new FormData();\n\n    formData.append(\"files[]\", values.files[0]);\n    const request = axios.post(api_host + '/' + type + '/' + id + '/imports.json', formData, {\n        headers: {...api_headers(), ...{'Content-Type': 'multipart/form-data'}}\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'AdminImportMappings'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'AdminImportMappings'));\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  },\n  all: (type, id) => {\n    const request = axios.get(api_host + '/' + type + '/' + id + '/imports.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(importsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n}\n\nexport const AdminImport = {\n  all: () => {\n    const request = axios.get(api_host + '/imports.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(importsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  show: (id) => {\n    const request = axios.get(api_host + '/imports/' + id + '.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(importFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n}\n\nexport const Instrument = {\n  import: (values) => {\n    const request = axios.post(api_host + '/admin/import/instruments/', { updates: values }, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          console.log('ok')\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  },\n  all: () => {\n    const request = axios.get(api_host + '/instruments.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  show: (id) => {\n    const request = axios.get(api_host + '/instruments/' + id + '.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  stats: (id) => {\n    const request = axios.get(api_host + '/instruments/' + id + '/stats.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentStatsFetchSuccess(id, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  reorderConstructs: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/reorder_ccs.json', { updates: values }, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          console.log('ok')\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  }\n}\n\nexport const Categories = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/categories.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(categoriesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst categoriesFetchSuccess = (instrumentId, categories) => ({\n  type: 'LOAD_INSTRUMENT_CATEGORIES',\n  payload: {\n    instrumentId: instrumentId,\n    categories: categories\n  }\n});\n\nexport const CodeLists = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/code_lists.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(codeListsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, codeListId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/code_lists/' + codeListId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(codeListId, 'CodeList'));\n        return request.then(res => {\n          dispatch(savedItem(codeListId, 'CodeList'));\n          dispatch(codeListFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(codeListId, 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/code_lists.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CodeList'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CodeList'));\n          dispatch(codeListFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, codeListId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/code_lists/' + codeListId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'CodeList', codeListId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(savedItem(codeListId, 'CodeList'));\n          dispatch(saveError(codeListId, 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst codeListsFetchSuccess = (instrumentId, codeLists) => ({\n  type: 'LOAD_INSTRUMENT_CODE_LISTS',\n  payload: {\n    instrumentId: instrumentId,\n    codeLists: codeLists\n  }\n});\n\nconst codeListFetchSuccess = (instrumentId, codeList) => ({\n  type: 'LOAD_INSTRUMENT_CODE_LIST',\n  payload: {\n    instrumentId: instrumentId,\n    codeList: codeList\n  }\n});\n\nexport const CcSequences = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_sequences.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccSequencesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccSequenceId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_sequences/' + ccSequenceId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccSequenceId, 'CcSequence'));\n        return request.then(res => {\n          dispatch(savedItem(ccSequenceId, 'CcSequence'));\n          dispatch(ccSequenceFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccSequenceId, 'CcSequence', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_sequences.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcSequence'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcSequence'));\n          dispatch(ccSequenceFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcSequence', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccSequenceId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_sequences/' + ccSequenceId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccSequenceId, 'CcSequence'));\n        return request.then(res => {\n          dispatch(savedItem(ccSequenceId, 'CcSequence'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcSequence', ccSequenceId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(ccSequenceId, 'CcSequence', err.response.data));\n        });\n    };\n  },\n}\n\nconst ccSequencesFetchSuccess = (instrumentId, sequences) => ({\n  type: 'LOAD_INSTRUMENT_SEQUENCES',\n  payload: {\n    instrumentId: instrumentId,\n    sequences: sequences\n  }\n});\n\nconst ccSequenceFetchSuccess = (instrumentId, sequence) => ({\n  type: 'LOAD_INSTRUMENT_SEQUENCE',\n  payload: {\n    instrumentId: instrumentId,\n    sequence: sequence\n  }\n});\n\nexport const CcStatements = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_statements.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccStatementsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccStatementId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_statements/' + ccStatementId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccStatementId, 'CcStatement'));\n        return request.then(res => {\n          dispatch(savedItem(ccStatementId, 'CcStatement'));\n          dispatch(ccStatementFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccStatementId, 'CcStatement', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_statements.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcStatement'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcStatement'));\n          dispatch(ccStatementFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcStatement', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccStatementId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_statements/' + ccStatementId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccStatementId, 'CcStatement'));\n        return request.then(res => {\n          dispatch(savedItem(ccStatementId, 'CcStatement'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcStatement', ccStatementId));\n          onDelete()\n        })\n        .catch(err => {\n          dispatch(saveError(ccStatementId, 'CcStatement', err.response.data));\n        });\n    };\n  },\n}\n\nconst ccStatementsFetchSuccess = (instrumentId, statements) => ({\n  type: 'LOAD_INSTRUMENT_STATEMENTS',\n  payload: {\n    instrumentId: instrumentId,\n    statements: statements\n  }\n});\n\nconst ccStatementFetchSuccess = (instrumentId, statement) => ({\n  type: 'LOAD_INSTRUMENT_STATEMENT',\n  payload: {\n    instrumentId: instrumentId,\n    statement: statement\n  }\n});\n\nexport const CcLoops = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_loops.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccLoopsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccLoopId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_loops/' + ccLoopId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccLoopId, 'CcLoop'));\n        return request.then(res => {\n          dispatch(savedItem(ccLoopId, 'CcLoop'));\n          dispatch(ccLoopFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccLoopId, 'CcLoop', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_loops.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcLoop'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcLoop'));\n          dispatch(ccLoopFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcLoop', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, ccLoopId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_loops/' + ccLoopId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccLoopId, 'CcLoop'));\n        return request.then(res => {\n          dispatch(savedItem(ccLoopId, 'CcLoop'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcLoop', ccLoopId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(ccLoopId, 'CcLoop', err.response.data.error_sentence));\n        });\n    };\n  },\n}\n\nconst ccLoopsFetchSuccess = (instrumentId, loops) => ({\n  type: 'LOAD_INSTRUMENT_LOOPS',\n  payload: {\n    instrumentId: instrumentId,\n    loops: loops\n  }\n});\n\nconst ccLoopFetchSuccess = (instrumentId, loop) => ({\n  type: 'LOAD_INSTRUMENT_LOOP',\n  payload: {\n    instrumentId: instrumentId,\n    loop: loop\n  }\n});\n\nexport const ResponseUnits = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_units.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseUnitsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseUnitId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_units/' + responseUnitId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseUnitFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseUnitId, 'ResponseUnit', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_units.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseUnitFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseUnit', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseUnitId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_units/' + responseUnitId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseUnit', responseUnitId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(responseUnitId, 'ResponseUnit', err.response.data.error_sentence));\n        });\n    };\n  },\n}\n\nconst responseUnitsFetchSuccess = (instrumentId, responseUnits) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_UNITS',\n  payload: {\n    instrumentId: instrumentId,\n    responseUnits: responseUnits\n  }\n});\n\nconst responseUnitFetchSuccess = (instrumentId, responseUnit) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_UNITS',\n  payload: {\n    instrumentId: instrumentId,\n    responseUnit: responseUnit\n  }\n});\n\nexport const CcConditions = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_conditions.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccConditionsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccConditionId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_conditions/' + ccConditionId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccConditionId, 'CcCondition'));\n        return request.then(res => {\n          dispatch(savedItem(ccConditionId, 'CcCondition'));\n          dispatch(ccConditionFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccConditionId, 'CcCondition', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_conditions.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcCondition'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcCondition'));\n          dispatch(ccConditionFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcCondition', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccConditionId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_conditions/' + ccConditionId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccConditionId, 'CcCondition'));\n        return request.then(res => {\n          dispatch(savedItem(ccConditionId, 'CcCondition'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcCondition', ccConditionId));\n          onDelete()\n        })\n        .catch(err => {\n          dispatch(saveError(ccConditionId, 'CcCondition', err.response.data));\n        });\n    };\n  },\n}\n\nconst ccConditionsFetchSuccess = (instrumentId, conditions) => ({\n  type: 'LOAD_INSTRUMENT_CONDITIONS',\n  payload: {\n    instrumentId: instrumentId,\n    conditions: conditions\n  }\n});\n\nconst ccConditionFetchSuccess = (instrumentId, condition) => ({\n  type: 'LOAD_INSTRUMENT_CONDITION',\n  payload: {\n    instrumentId: instrumentId,\n    condition: condition\n  }\n});\n\nexport const CcQuestions = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_questions.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccQuestionsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccQuestionId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n        return request.then(res => {\n          dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n          dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcQuestion'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcQuestion'));\n          dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcQuestion', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccQuestionId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n        return request.then(res => {\n          dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcQuestion', ccQuestionId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data));\n        });\n    };\n  },\n  topic: {\n    set: (instrumentId, ccQuestionId, topicId) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/set_topic.json',\n      {\n        \"topic_id\": topicId\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data.message));\n          });\n      };\n    }\n  },\n  variables: {\n    add: (instrumentId, ccQuestionId, variableNames) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/add_variables.json',\n      {\n        \"variable_names\": variableNames\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data.message));\n          });\n      };\n    },\n    remove: (instrumentId, ccQuestionId, variableId) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/remove_variable.json',\n      {\n        \"variable_id\": variableId\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.message));\n          });\n      };\n    }\n  }\n}\n\nconst savingItem = (id, type) => ({\n  type: 'SAVING',\n  payload: {\n    id: id,\n    type: type\n  }\n});\n\nconst savedItem = (id, type) => ({\n  type: 'SAVED',\n  payload: {\n    id: id,\n    type: type\n  }\n});\n\nconst ccQuestionsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTIONS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst ccQuestionFetchSuccess = (instrumentId, question) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION',\n  payload: {\n    instrumentId: instrumentId,\n    question: question\n  }\n});\n\nexport const QuestionItems = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/question_items.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionItemsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, questionItemId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/question_items/' + questionItemId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionItemId, 'QuestionItem'));\n        return request.then(res => {\n          dispatch(savedItem(questionItemId, 'QuestionItem'));\n          dispatch(questionItemFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(questionItemId, 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/question_items.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'QuestionItem'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'QuestionItem'));\n          dispatch(questionItemFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, questionItemId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/question_items/' + questionItemId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionItemId, 'QuestionItem'));\n        return request.then(res => {\n          dispatch(savedItem(questionItemId, 'QuestionItem'));\n          dispatch(objectDeleteSuccess(instrumentId,'QuestionItem', questionItemId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(questionItemId, 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst questionItemsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_ITEMS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst questionItemFetchSuccess = (instrumentId, questionItem) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_ITEM',\n  payload: {\n    instrumentId: instrumentId,\n    questionItem: questionItem\n  }\n});\n\nexport const QuestionGrids = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/question_grids.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionGridsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, questionGridId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/question_grids/' + questionGridId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionGridId, 'QuestionGrid'));\n        return request.then(res => {\n          dispatch(savedItem(questionGridId, 'QuestionGrid'));\n          dispatch(questionGridFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(questionGridId, 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/question_grids.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'QuestionGrid'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'QuestionGrid'));\n          dispatch(questionGridFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, questionGridId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/question_grids/' + questionGridId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionGridId, 'QuestionGrid'));\n        return request.then(res => {\n          dispatch(savedItem(questionGridId, 'QuestionGrid'));\n          dispatch(objectDeleteSuccess(instrumentId,'QuestionGrid', questionGridId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(questionGridId, 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst questionGridsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_GRIDS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst questionGridFetchSuccess = (instrumentId, questionGrid) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_GRID',\n  payload: {\n    instrumentId: instrumentId,\n    questionGrid: questionGrid\n  }\n});\n\nexport const ResponseDomainNumerics = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_numerics.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainNumericsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainNumericId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_numerics/' + responseDomainNumericId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n          dispatch(responseDomainNumericFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainNumericId, 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_numerics.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'ResponseDomainNumeric'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'ResponseDomainNumeric'));\n          dispatch(responseDomainNumericFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainNumericId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_numerics/' + responseDomainNumericId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainNumeric', responseDomainNumericId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainNumericId, 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainNumericsFetchSuccess = (instrumentId, responseDomainNumerics) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERICS',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainNumerics: responseDomainNumerics\n  }\n});\n\nconst responseDomainNumericFetchSuccess = (instrumentId, responseDomainNumeric) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERIC',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainNumeric: responseDomainNumeric\n  }\n});\n\nexport const ResponseDomainTexts = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_texts.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainTextsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainTextId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_texts/' + responseDomainTextId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainTextId, 'ResponseDomainText'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainTextId, 'ResponseDomainText'));\n          dispatch(responseDomainTextFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainTextId, 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_texts.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'ResponseDomainText'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'ResponseDomainText'));\n          dispatch(responseDomainTextFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainTextId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_texts/' + responseDomainTextId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainTextId, 'ResponseDomainText'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainTextId, 'ResponseDomainText'));\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainText', responseDomainTextId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainTextId, 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainTextsFetchSuccess = (instrumentId, responseDomainTexts) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXTS',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainTexts: responseDomainTexts\n  }\n});\n\nconst responseDomainTextFetchSuccess = (instrumentId, responseDomainText) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXT',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainText: responseDomainText\n  }\n});\n\nexport const ResponseDomainDatetimes = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainDatetimesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainDatetimeId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes/' + responseDomainDatetimeId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n          dispatch(responseDomainDatetimeFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainDatetimeId, 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'ResponseDomainDatetime'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'ResponseDomainDatetime'));\n          dispatch(responseDomainDatetimeFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainDatetimeId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes/' + responseDomainDatetimeId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainDatetime', responseDomainDatetimeId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainDatetimeId, 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainDatetimesFetchSuccess = (instrumentId, responseDomainDatetimes) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIMES',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainDatetimes: responseDomainDatetimes\n  }\n});\n\nconst responseDomainDatetimeFetchSuccess = (instrumentId, responseDomainDatetime) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIME',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainDatetime: responseDomainDatetime\n  }\n});\n\nexport const Variables = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(variablesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  add: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/add_variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(variablesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst variablesFetchSuccess = (instrumentId, variables) => ({\n  type: 'LOAD_INSTRUMENT_VARIABLES',\n  payload: {\n    instrumentId: instrumentId,\n    variables: variables\n  }\n});\n\nexport const DatasetVariable = {\n  all: (datasetId) => {\n    const request = axios.get(api_host + '/datasets/' + datasetId + '/variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(datasetVariablesFetchSuccess(datasetId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  add_source: (datasetId, datasetVariableId, sources) => {\n    const request = axios.post(api_host + '/datasets/' + datasetId + '/variables/' + datasetVariableId + '/add_sources.json',\n    {\n      sources: {\n        \"id\": sources,\n        \"x\": null,\n        \"y\": null\n      }\n    },\n    {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(datasetVariableId, 'DatasetVariable'));\n        return request.then(res => {\n          dispatch(savedItem(datasetVariableId, 'DatasetVariable'));\n          dispatch(datasetVariableFetchSuccess(datasetId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(datasetVariableId, 'DatasetVariable', err.response.data.message));\n        });\n    };\n  },\n  remove_source: (datasetId, datasetVariableId, source) => {\n    const request = axios.post(api_host + '/datasets/' + datasetId + '/variables/' + datasetVariableId + '/remove_source.json',\n    {\n      other: {\n        id: source.id,\n        class: source.class,\n        x: source.x,\n        y: source.y\n      }\n    },\n    {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(datasetVariableId, 'DatasetVariable'));\n        return request.then(res => {\n          dispatch(savedItem(datasetVariableId, 'DatasetVariable'));\n          dispatch(datasetVariableFetchSuccess(datasetId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(datasetVariableId, 'DatasetVariable', err.message));\n        });\n    };\n  }\n}\n\nconst datasetVariablesFetchSuccess = (datasetId, variables) => ({\n  type: 'LOAD_DATASET_VARIABLES',\n  payload: {\n    datasetId: datasetId,\n    variables: variables\n  }\n});\n\nconst datasetVariableFetchSuccess = (datasetId, variable) => ({\n  type: 'LOAD_DATASET_VARIABLE',\n  payload: {\n    datasetId: datasetId,\n    variable: variable\n  }\n});\n\nexport const Topics = {\n  all: () => {\n    const request = axios.get(api_host + '/topics/flattened_nest.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(topicsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst topicsFetchSuccess = (topics) => ({\n  type: 'LOAD_TOPICS',\n  payload: {\n    topics: topics\n  }\n});\n\nconst datasetsFetchSuccess = datasets => ({\n  type: 'LOAD_DATASETS',\n  payload: {\n    datasets: datasets\n  }\n});\n\nconst datasetFetchSuccess = datasets => ({\n  type: 'LOAD_DATASET',\n  payload: {\n    dataset: datasets\n  }\n});\n\nconst importsFetchSuccess = imports => ({\n  type: 'LOAD_ADMIN_IMPORTS',\n  payload: {\n    imports: imports\n  }\n});\n\nconst importFetchSuccess = importObj => ({\n  type: 'LOAD_ADMIN_IMPORT',\n  payload: {\n    import: importObj\n  }\n});\n\nconst instrumentsFetchSuccess = instruments => ({\n  type: 'LOAD_INSTRUMENTS',\n  payload: {\n    instruments: instruments\n  }\n});\n\nconst instrumentFetchSuccess = instruments => ({\n  type: 'LOAD_INSTRUMENT',\n  payload: {\n    instrument: instruments\n  }\n});\n\nconst instrumentStatsFetchSuccess = (instrumentId, stats) => ({\n  type: 'LOAD_INSTRUMENT_STATS',\n  payload: {\n    instrumentId: instrumentId,\n    stats: stats\n  }\n});\n\nconst objectDeleteSuccess = (instrumentId, objectType, id) => ({\n  type: 'DELETE_INSTRUMENT_OBJECT_TYPE',\n  payload: {\n    instrumentId: instrumentId,\n    id: id,\n    objectType: objectType\n  }\n});\n\nconst fetchFailure = error => ({\n  type: 'FETCH_FAILURE',\n  payload: {\n    error\n  }\n});\n\nconst saveError = (id, type, error) => ({\n  type: 'ERROR',\n  payload: {\n    id: id,\n    type: type,\n    error: error\n  }\n});\n\nconst authUserSuccess = auth => ({\n  type: 'LOGIN',\n  payload: {\n    ...auth\n  }\n});\n\nconst authUserFailure = error => ({\n  type: 'LOGIN_FAILURE',\n  payload: {\n    error\n  }\n});\n\nconst redirectTo = (url) => ({\n  type: 'REDIRECT',\n  payload: {\n    to: url\n  }\n})\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { authUser } from '../actions'\nimport { useDispatch } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst useFormField = (initialValue: string = \"\") => {\n  const [value, setValue] = React.useState(initialValue);\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value),\n    []\n  );\n  return { value, onChange };\n};\n\nexport default function Login() {\n  const classes = useStyles();\n\n  const emailField = useFormField();\n  const passwordField = useFormField();\n\n  const dispatch = useDispatch()\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    dispatch(authUser(emailField.value, passwordField.value));\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            {...emailField}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            {...passwordField}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { isEmpty, get } from 'lodash'\nimport routes from '../routes'\nimport { reverse as url } from 'named-urls'\nimport { useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst BreadcrumbBarItem = (props) => {\n  const {text, link} = props\n\n  if(isEmpty(link)){\n    return (\n      <Typography color=\"textPrimary\">{text}</Typography>\n    )\n  }else{\n    return (\n      <Link color=\"inherit\" to={link}>\n        {text}\n      </Link>\n    )\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    'margin-bottom': '10px',\n    padding: '15px'\n  }\n}));\n\nconst BreadcrumbBar = (props) => {\n  const {instrumentId} = props\n\n  const location = useLocation();\n\n  const buildBreadcrumbs = () => {\n    var found = location.pathname.match(new RegExp(`^\\\\/(?<topLevel>instruments|datasets|admin)`));\n    var topLevel = get(get(found, 'groups',{}),'topLevel','instruments')\n    switch (topLevel) {\n      case 'datasets':\n        return buildDatasetBreadcrumbs()\n        break\n      case 'admin':\n        return buildAdminBreadcrumbs()\n        break\n      default:\n        return buildInstrumentBreadcrumbs()\n        break\n    }\n  }\n\n  const buildDatasetBreadcrumbs = () => {\n    var crumbs = [{text: 'Datasets', link: url(routes.datasets.all)}]\n    return crumbs\n  }\n\n  const buildAdminBreadcrumbs = () => {\n    var crumbs = [{text: 'Admin', link: url(routes.admin.instruments)}]\n    return crumbs\n  }\n\n  const buildInstrumentBreadcrumbs = () => {\n    const paramsFromPath = () => {\n      const capturingRegex = `/instruments\\\\/${instrumentId}\\\\/(?<type>build|map)\\/?(?<subtype>question_grids|question_items|response_domains|code_lists|constructs)?\\/?`;\n      const found = location.pathname.match(new RegExp(capturingRegex));\n      return get(found, 'groups',{})\n    }\n\n    var crumbs = [{text: 'Instruments', link: url(routes.instruments.all)}]\n\n    if(instrumentId){\n      crumbs.push(\n        {\n          text: instrumentId,\n          link: url(routes.instruments.instrument.show, { instrument_id: instrumentId })\n        }\n      )\n      const params = paramsFromPath();\n      if(params){\n        switch (params.type) {\n          case 'map':\n            crumbs.push(\n                {\n                  text: 'Map',\n                  link: url(routes.instruments.instrument.map.show, { instrument_id: instrumentId })\n                }\n              )\n            break\n          case 'build':\n            crumbs.push(\n                {\n                  text: 'Build',\n                  link: url(routes.instruments.instrument.build.show, { instrument_id: instrumentId })\n                }\n              )\n            if(params.subtype){\n\n              if(params.subtype === 'question_items'){\n                  crumbs.push(\n                      {\n                        text: 'Question Items',\n                        link: url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'question_grids'){\n                  crumbs.push(\n                      {\n                        text: 'Question Grids',\n                        link: url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'code_lists'){\n                  crumbs.push(\n                      {\n                        text: 'CodeLists',\n                        link: url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'response_domains'){\n                  crumbs.push(\n                      {\n                        text: 'Response Domains',\n                        link: url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'constructs'){\n                  crumbs.push(\n                      {\n                        text: 'Constructs',\n                        link: url(routes.instruments.instrument.build.constructs.show, { instrument_id: instrumentId })\n                      }\n                    )\n              }\n\n            }\n        }\n      }\n    }\n    return crumbs\n  }\n\n  const breadcrumbs = buildBreadcrumbs()\n\n  const classes = useStyles()\n\n  return (\n      <Paper className={classes.root}>\n        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n          {breadcrumbs.map((breadcrumb) => {\n            return <BreadcrumbBarItem text={breadcrumb.text} link={breadcrumb.link} />\n          })}\n        </Breadcrumbs>\n      </Paper>\n  )\n}\n\nexport default BreadcrumbBar\n","export const ObjectColour = (type) => {\n   switch (type){\n      case 'statement':\n         return '652d90' // Purple;\n      case 'loop':\n         return '37b34a' // Green;\n      case 'question':\n         return '00adee' // Pale Blue;\n      case 'sequence':\n         return 'faaf40' // Orange;\n      case 'condition':\n         return 'f1003a' // Red;\n      default:\n         return 'd3d3d3' // Light Grey\n   }\n}\n\n//652d90 Purple\n// eb008b Pink\n// faaf40 Orange\n// f1003a Red\n// 37b34a Green\n// 00adee Pale Blue\n// 2e008b Dark Purple\n// 1f801e Dark Green\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport LabelIcon from '@material-ui/icons/Label';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport Helmet from \"react-helmet\";\nimport { useDispatch } from 'react-redux'\nimport BreadcrumbBar from './BreadcrumbBar'\nimport { ObjectColour } from '../support/ObjectColour'\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\n        Archivist\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst MainListItems = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n  <div>\n    <ListItem button>\n        <ListItemIcon>\n          <Link to={url(routes.instruments.all)}>\n            <QuestionAnswerIcon />\n          </Link>\n        </ListItemIcon>\n      <Link to={url(routes.instruments.all)}>\n        <ListItemText primary=\"Instruments\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <StorageIcon />\n      </ListItemIcon>\n      <Link to={url(routes.datasets.all)}>\n        <ListItemText primary=\"Datasets\" />\n      </Link>\n    </ListItem>\n     <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <SupervisedUserCircleIcon style={{ color: '37b34a' }}/>\n        </ListItemIcon>\n        <ListItemText primary=\"Admin\" />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem button className={classes.nested}>\n            <Link to={url(routes.admin.instruments.all)}>\n              <ListItemText primary=\"Instruments\" />\n            </Link>\n          </ListItem>\n          <ListItem button className={classes.nested}>\n            <Link to={url(routes.admin.datasets.all)}>\n              <ListItemText primary=\"Datasets\" />\n            </Link>\n          </ListItem>\n          <ListItem button className={classes.nested}>\n            <Link to={url(routes.admin.import)}>\n              <ListItemText primary=\"Import\" />\n            </Link>\n          </ListItem>\n          <ListItem button className={classes.nested}>\n            <Link to={url(routes.admin.imports.all)}>\n              <ListItemText primary=\"DDI Imports\" />\n            </Link>\n          </ListItem>\n        </List>\n      </Collapse>\n  </div>\n  )\n}\n\nexport const Dashboard = (props)  => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const dispatch = useDispatch();\n  const { instrumentId } = props;\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Archivist</title>\n      </Helmet>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            {props.title}\n          </Typography>\n          <IconButton color=\"inherit\">\n            <ExitToAppIcon onClick={()=>{ dispatch({type:'LOGOUT'}) }}/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <img src=\"/logo.svg\" alt=\"BigCo Inc. logo\" style={{width: \"51%\"}}/>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <MainListItems />\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth={false} maxHeight={false} className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <BreadcrumbBar instrumentId={instrumentId} />\n              <Paper className={classes.paper}>\n                {props.children}\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { isEmpty, isNil, get } from 'lodash'\n\nexport const ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nexport const ObjectStatusBar = (props) => {\n  const {id, type} = props\n  const status = ObjectStatus(id, type)\n\n  if(!isEmpty(status) && !isNil(status.error)){\n    return (\n      <div>\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          {status.errorMessage}\n        </Alert>\n      </div>\n    )\n  }else if(status && status.saved){\n    return (\n      <div>\n        <Alert severity=\"success\">\n          <AlertTitle>{ (id === 'new') ? 'Created' : 'Saved' }</AlertTitle>\n        </Alert>\n      </div>\n    )\n  }else{\n    return ''\n  }\n}\n","import React from 'react';\nimport { Field } from \"react-final-form\";\n\nexport const FileField = ({ name, ...props }) => (\n  <Field name={name}>\n    {({ input: { value, onChange, ...input } }) => (\n      <input\n        {...input}\n        type=\"file\"\n        onChange={({ target }) => onChange(target.files)} // instead of the default target.value\n        {...props}\n      />\n    )}\n  </Field>\n);\n","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux'\nimport { AdminInstrument } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { FileField } from '../components/FileField'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('statement')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <FileField name=\"files\" />\n    ),\n  }\n];\n\nexport const AdminInstrumentForm = (props) => {\n  const {} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n\n  const onSubmit = (values) => {\n      dispatch(AdminInstrument.create(values))\n  }\n\n  const status = ObjectStatus('new', 'AdminInstrument')\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <h2>Upload DDI Instrument Files</h2>\n      <ObjectStatusBar type={'AdminInstrument'} id={'new'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={{files: []}}\n        validate={(values) => validate(values, status)}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  Only DDI-L 3.2 Instrument files are accepted.\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Import Instrument\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux'\nimport { AdminDataset } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { FileField } from '../components/FileField'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('statement')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <FileField name=\"files\" />\n    ),\n  }\n];\n\nexport const AdminDatasetForm = (props) => {\n  const {} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n\n  const onSubmit = (values) => {\n      dispatch(AdminDataset.create(values))\n  }\n\n  const status = ObjectStatus('new', 'AdminDataset')\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <h2>Upload DDI Dataset Files</h2>\n      <ObjectStatusBar type={'AdminDataset'} id={'new'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={{files: []}}\n        validate={(values) => validate(values, status)}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  Only DDI-L 3.2 Dataset files are accepted.\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Import Dataset\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dashboard } from '../components/Dashboard'\nimport { AdminInstrumentForm } from '../components/AdminInstrumentForm'\nimport { AdminDatasetForm } from '../components/AdminDatasetForm'\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst AdminImport = () => {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Import'}>\n        <AdminInstrumentForm />\n        <AdminDatasetForm />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminImport;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AdminImport } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { get } from 'lodash'\n\nconst AdminImportView = (props) => {\n\n  const dispatch = useDispatch()\n  const importId = get(props, \"match.params.importId\", \"\")\n  const imports = useSelector(state => state.imports);\n  const importObj = get(imports, importId, { logs: [] })\n  const logs = get(importObj, 'logs', [])\n  const rows: RowsProp = Object.values(logs);\n\n  useEffect(() => {\n    dispatch(AdminImport.show(importId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'DDI Imports'}>\n        <ul>\n          <li>Filename : {importObj.filename}</li>\n          <li>State : {importObj.state}</li>\n          <li>Created At : {importObj.created_at}</li>\n        </ul>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Input</TableCell>\n              <TableCell>Matches</TableCell>\n              <TableCell>Outcome</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.original_text}</TableCell>\n                <TableCell>{row.matches}</TableCell>\n                <TableCell>{row.outcome}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminImportView;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AdminImport } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst AdminImports = () => {\n\n  const dispatch = useDispatch()\n  const imports = useSelector(state => state.imports);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(imports).sort().reverse();\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n    dispatch(AdminImport.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'DDI Imports'}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>File</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>State</TableCell>\n              <TableCell>Created At</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.filename}</TableCell>\n                <TableCell>{row.import_type}</TableCell>\n                <TableCell>{row.state}</TableCell>\n                <TableCell>{row.created_at}</TableCell>\n                <TableCell>\n                  <Button variant=\"outlined\">\n                      <Link to={url(routes.admin.imports.show, { importId: row.id })}>\n                        View Log\n                      </Link>\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminImports;\n","import React from 'react';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nexport const AdminImportMappingsTable = ({values}) => {\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = values;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>File</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>State</TableCell>\n              <TableCell>Created At</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.file}</TableCell>\n                <TableCell>{row.type}</TableCell>\n                <TableCell>{row.state}</TableCell>\n                <TableCell>{row.created_at}</TableCell>\n                <TableCell>\n                  <ButtonGroup variant=\"outlined\">\n                    <Button>\n                      View Log\n                    </Button>\n                  </ButtonGroup>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n  );\n}\n","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux'\nimport { AdminDataset } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { FileField } from '../components/FileField'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('statement')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <FileField name=\"files\" />\n    ),\n  }\n];\n\nexport const AdminImportMappingsForm = ({type, hint, onSubmit=()=>{}}) => {\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus('new', 'AdminImportMapping')\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <h2>Import Mappings</h2>\n      <ObjectStatusBar type={'AdminImportMapping'} id={'new'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={{files: []}}\n        validate={(values) => validate(values, status)}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  {hint}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Import {type}\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport { Box } from '@material-ui/core'\nimport { shuffle } from \"lodash\";\nimport { ObjectColour } from '../support/ObjectColour'\n\nexport const Loader = () => {\n  return (\n    <Box style={{ height: 200, 'margin-top': 50 }} m=\"auto\"><BounceLoader color={`#${ObjectColour(shuffle(['sequence', 'condition', 'question', 'statement','loop'])[0])}`}/></Box>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dashboard } from '../components/Dashboard'\nimport { AdminImportMappingsTable } from '../components/AdminImportMappingsTable'\nimport { AdminImportMappingsForm } from '../components/AdminImportMappingsForm'\nimport { Loader } from '../components/Loader'\nimport { AdminImportMapping } from '../actions'\nimport { get } from 'lodash';\n\nconst AdminInstrumentImportMappings = (props) => {\n  const dispatch = useDispatch()\n  const type = \"Instrument\"\n  const hint = \"You can import multiple Q-V and T-Q mapping files. Only TXT files are accepted.\"\n  const instrumentId = get(props, \"match.params.instrumentId\", \"\")\n\n  const onSubmit = (values) => {\n      dispatch(AdminImportMapping.create('instruments', instrumentId, values))\n  }\n  const values = Object.values(useSelector(state => state.instrumentImportMappings));\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n  useEffect(() => {\n    Promise.all([\n      dispatch(AdminImportMapping.all('instruments',instrumentId)),\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Instruments Import Mappings'}>\n        {!dataLoaded\n        ? <Loader />\n        : (\n          <>\n            <AdminImportMappingsForm type={type} hint={hint} onSubmit={onSubmit} />\n            <AdminImportMappingsTable values={values} />\n          </>\n        )}\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminInstrumentImportMappings;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dashboard } from '../components/Dashboard'\nimport { AdminImportMappingsTable } from '../components/AdminImportMappingsTable'\nimport { AdminImportMappingsForm } from '../components/AdminImportMappingsForm'\nimport { Loader } from '../components/Loader'\nimport { AdminImportMapping } from '../actions'\nimport { get } from 'lodash';\n\nconst AdminDatasetImportMappings = (props) => {\n  const dispatch = useDispatch()\n  const type = \"Dataset\"\n  const hint = \"You can import multiple T-V and DV mapping files. Only TXT files are accepted.\"\n  const datasetId = get(props, \"match.params.datasetId\", \"\")\n\n  const onSubmit = (values) => {\n      dispatch(AdminImportMapping.create('datasets', datasetId, values))\n  }\n  const values = Object.values(useSelector(state => state.datasetImportMappings));\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n  useEffect(() => {\n    Promise.all([\n      dispatch(AdminImportMapping.all('datasets',datasetId)),\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Datasets Import Mappings'}>\n        {!dataLoaded\n        ? <Loader />\n        : (\n          <>\n            <AdminImportMappingsForm type={type} hint={hint} onSubmit={onSubmit} />\n            <AdminImportMappingsTable values={values} />\n          </>\n        )}\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminDatasetImportMappings;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst AdminInstruments = () => {\n\n  const dispatch = useDispatch()\n  const instruments = useSelector(state => state.instruments);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(instruments);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n     dispatch(Instrument.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Admin Instruments'}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Prefix</TableCell>\n              <TableCell>Study</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.prefix}</TableCell>\n                <TableCell>{row.study}</TableCell>\n                <TableCell>\n                  <ButtonGroup variant=\"outlined\">\n                    <Button>\n                      Edit\n                    </Button>\n                    <Button>\n                      Copy\n                    </Button>\n                    <Button>\n                      <Link to={url(routes.admin.instruments.importMappings, { instrumentId: row.id })}>\n                        Import Mappings\n                      </Link>\n                    </Button>\n                    <Button>\n                      QV\n                    </Button>\n                    <Button>\n                      Topics\n                    </Button>\n                    <Button>\n                      <Link to={url(routes.admin.instruments.importMappings, { instrumentId: row.id })}>\n                        View Imports\n                      </Link>\n                    </Button>\n                    <Button>\n                      Clear Cache\n                    </Button>\n                    <Button>\n                      Delete\n                    </Button>\n                  </ButtonGroup>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminInstruments;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dataset } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst AdminDatasets = () => {\n\n  const dispatch = useDispatch()\n  const datasets = useSelector(state => state.datasets);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(datasets);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n     dispatch(Dataset.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Admin Datasets'}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Study</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.study}</TableCell>\n                <TableCell>\n                <ButtonGroup variant=\"outlined\">\n                  <Button>\n                    Edit\n                  </Button>\n                  <Button>\n                    <Link to={url(routes.admin.datasets.importMappings, { datasetId: row.id })}>\n                      Import Mappings\n                    </Link>\n                  </Button>\n                  <Button>\n                    DV\n                  </Button>\n                  <Button>\n                    Topics\n                  </Button>\n                  <Button>\n                    <Link to={url(routes.admin.datasets.importMappings, { datasetId: row.id })}>\n                      View Imports\n                    </Link>\n                  </Button>\n                  <Button>\n                    Delete\n                  </Button>\n                 </ButtonGroup>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminDatasets;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst Instruments = () => {\n\n  const dispatch = useDispatch()\n  const instruments = useSelector(state => state.instruments);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(instruments);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n     dispatch(Instrument.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Instruments'}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Prefix</TableCell>\n              <TableCell>Control Constructs</TableCell>\n              <TableCell>Q-V Mappings</TableCell>\n              <TableCell>Study</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.prefix}</TableCell>\n                <TableCell>{row.ccs}</TableCell>\n                <TableCell>{row.qvs}</TableCell>\n                <TableCell>{row.study}</TableCell>\n                <TableCell>\n                  <Button variant=\"outlined\">\n                    <Link to={url(routes.instruments.instrument.show, { instrument_id: row.prefix })}>View</Link>\n                  </Button>\n                  <Button variant=\"outlined\">\n                    <Link to={url(routes.instruments.instrument.build.show, { instrument_id: row.prefix })}>Build</Link>\n                  </Button>\n                  <Button variant=\"outlined\">\n                    <Link to={url(routes.instruments.instrument.map.show, { instrument_id: row.prefix })}>Map</Link>\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default Instruments;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dataset } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { Loader } from '../components/Loader'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst Datasets = () => {\n\n  const dispatch = useDispatch()\n  const datasets = useSelector(state => state.datasets);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(datasets);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(Dataset.all())\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Datasets'}>\n      {!dataLoaded\n        ? <Loader />\n        : (\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ID</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Variables</TableCell>\n                <TableCell>Q-V Mappings</TableCell>\n                <TableCell>DV Mappings</TableCell>\n                <TableCell>Study</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell>{row.id}</TableCell>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>{row.variables}</TableCell>\n                  <TableCell>{row.qvs}</TableCell>\n                  <TableCell>{row.dvs}</TableCell>\n                  <TableCell>{row.study}</TableCell>\n                  <TableCell>\n                    <Button variant=\"outlined\">\n                      <Link to={url('/datasets/:dataset_id', { dataset_id: row.id })}>View</Link>\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n           <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true,\n                  }}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        )}\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default Datasets;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dataset, DatasetVariable } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { Loader } from '../components/Loader'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { get, isEmpty } from 'lodash'\n\nconst DatasetView = (props) => {\n\n  const dispatch = useDispatch()\n  const datasetId = get(props, \"match.params.dataset_id\", \"\")\n\n  const dataset = useSelector(state => get(state.datasets, datasetId));\n  const variables = useSelector(state => get(state.datasetVariables, datasetId,{}));\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(variables);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(Dataset.show(datasetId)),\n      dispatch(DatasetVariable.all(datasetId))\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const SourcesList = (props) => {\n    const { sources, datasetId, variable } = props\n    let { sourceOptions } = props\n    sourceOptions = sourceOptions.filter(opt => get(opt.topic, 'id') == get(variable.topic, 'id'))\n    const variableId = variable.id\n    const dispatch = useDispatch()\n\n    const handleAddSource = (newSources) => {\n      dispatch(DatasetVariable.add_source(datasetId, variableId, newSources));\n    }\n\n    const handleRemoveSource = (oldSources) => {\n      oldSources.map((source)=>{\n        dispatch(DatasetVariable.remove_source(datasetId, variableId, source));\n      })\n    }\n\n    var difference = []\n\n    const handleChange = (event, value, reason) => {\n      switch (reason) {\n        case 'select-option':\n          difference = value.filter(x => !sources.includes(x));\n          if(!isEmpty(difference)){\n            return handleAddSource(difference.map((source) => { return source.label }))\n          };\n          break;\n        case 'remove-option':\n          difference = sources.filter(x => !value.includes(x));\n          if(!isEmpty(difference)){\n            return handleRemoveSource(difference)\n          };\n          break;\n        default:\n          return null;\n      }\n    }\n\n    if(isEmpty(sources)){\n      return (\n        <div>\n           <Autocomplete\n            multiple\n            id=\"tags-outlined\"\n            options={Object.values(sourceOptions)}\n            getOptionLabel={(option) => option.label}\n            onChange={handleChange}\n            value={[]}\n            filterSelectedOptions\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"outlined\"\n                label=\"Sources\"\n                placeholder=\"Add source\"\n              />\n            )}\n          />\n        </div>\n      )\n    }else{\n      return (\n        <div>\n           <Autocomplete\n            multiple\n            id=\"tags-outlined\"\n            options={Object.values(sourceOptions)}\n            getOptionLabel={(option) => option.label}\n            onChange={handleChange}\n            value={sources}\n            getOptionSelected= {(option, value) => (\n              option.id === value.id\n            )}\n            filterSelectedOptions\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"outlined\"\n                label=\"Sources\"\n                placeholder=\"Add source\"\n              />\n            )}\n          />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Datasets'}>\n      {!dataLoaded\n        ? <Loader />\n        : (\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ID</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Label</TableCell>\n                <TableCell>Type</TableCell>\n                <TableCell>Used by</TableCell>\n                <TableCell>Sources</TableCell>\n                <TableCell>Topic</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell>{row.id}</TableCell>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>{row.label}</TableCell>\n                  <TableCell>{row.var_type}</TableCell>\n                  <TableCell></TableCell>\n                  <TableCell><SourcesList sources={row.sources} sourceOptions={get(dataset,'questions',[])} datasetId={datasetId} variable={row} /></TableCell>\n                  <TableCell>{get(row.topic, 'name')}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n           <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true,\n                  }}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        )}\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default DatasetView;\n","import React from 'react';\nimport { get } from \"lodash\";\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport Button from '@material-ui/core/Button';\n\nexport const InstrumentHeading = ({instrument, mode='view'}) => {\n  return (\n    <h1>\n    {get(instrument, 'label')}\n      { instrument && (\n        <>\n        { mode !== 'view' && (\n          <Button variant=\"outlined\">\n            <Link to={url(routes.instruments.instrument.show, { instrument_id: instrument.slug })}>View</Link>\n          </Button>\n        )}\n        { mode !== 'build' && (\n          <Button variant=\"outlined\">\n            <Link to={url(routes.instruments.instrument.build.show, { instrument_id: instrument.slug })}>Build</Link>\n          </Button>\n        )}\n        { mode !== 'map' && (\n          <Button variant=\"outlined\">\n            <Link to={url(routes.instruments.instrument.map.show, { instrument_id: instrument.slug })}>Map</Link>\n          </Button>\n        )}\n        </>\n      )}\n    </h1>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, Variables, Topics } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { InstrumentHeading } from '../components/InstrumentHeading'\nimport { get, isEmpty, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { Box } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n  }\n\n  return item\n\n}\n\nconst QuestionItemListItem = (props) => {\n  const {type, id, instrumentId} = props\n  const item = ObjectFinder(instrumentId, type, id)\n  const classes = useStyles();\n  console.log(item)\n  return (\n    <div>\n      {item.question.literal}\n      {(item.question.rds) && (\n        <ResponseDomains rds={item.question.rds} />\n      )}\n    </div>\n  )\n}\n\nconst ResponseDomains = ({ rds }) => {\n\n  return rds.map((rd) => {\n    console.log(rd)\n    switch (rd.type) {\n      case 'ResponseDomainCode':\n        return(<ul><ResponseDomainCodes codes={rd.codes} /></ul>)\n      case 'ResponseDomainText':\n        return(<ul><li>{rd.label}</li></ul>)\n      case 'ResponseDomainNumeric':\n        return(<ul><li>{rd.label} {rd.params} {rd.subtype}</li></ul>)\n      case 'ResponseDomainDatetime':\n        return(<ul><li>{rd.label} {rd.params} {rd.subtype}</li></ul>)\n      default:\n        console.log(rd)\n        return '';\n    }\n  })\n}\n\nconst ResponseDomainCodes = ({ codes }) => {\n  return codes.map((code) => {\n      return(<li>{code.label}</li>)\n    })\n}\n\nconst QuestionGridListItem = (props) => {\n\n  return (\n    <div>This is a Question Grid</div>\n  )\n}\n\nconst StatementListItem = (props) => {\n  const {type, id, instrumentId} = props\n  const item = ObjectFinder(instrumentId, type, id)\n  const classes = useStyles();\n\n  return (\n    <div>{item.literal}</div>\n  )\n}\n\nconst ConditionItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'literal', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n              <ListItem button className={classes.nested}>\n                {(function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />;\n                    case 'CcQuestion':\n                      return <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    case 'CcCondition':\n                      return <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    default:\n                      console.log(child)\n                      return null;\n                  }\n                })()}\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst SequenceItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'label', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n                (function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />\n                          </ListItem>)\n                    case 'CcQuestion':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    case 'CcStatement':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <StatementListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    case 'CcCondition':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} children={get(child,'children',[])} />\n                          </ListItem>)\n                    default:\n                      return null;\n                  }\n                })()\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst InstrumentView = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n\n  useEffect(() => {\n    dispatch(Instrument.show(instrumentId));\n    dispatch(CcSequences.all(instrumentId));\n    dispatch(CcStatements.all(instrumentId));\n    dispatch(CcConditions.all(instrumentId));\n    dispatch(CcQuestions.all(instrumentId));\n    dispatch(QuestionItems.all(instrumentId));\n    dispatch(QuestionGrids.all(instrumentId));\n    dispatch(Variables.all(instrumentId));\n    dispatch(Topics.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sequence = (isEmpty(cc_sequences)) ? undefined : Object.values(cc_sequences).find(element => element.top == true)\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'View'} instrumentId={instrumentId}>\n      <InstrumentHeading instrument={instrument} mode={'view'} />\n      {isNil(sequence)\n        ? <Box m=\"auto\"><BounceLoader color={'#009de6'}/></Box>\n        : <SequenceItem instrumentId={instrumentId} type={'CcSequence'} id={sequence.children[0].id} title={sequence.children[0].label} children={sequence.children[0].children}/>\n      }\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentView;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, Variables, Topics } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { get, isEmpty, isNil } from \"lodash\";\nimport { InstrumentHeading } from '../components/InstrumentHeading'\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { Box } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n  }\n\n  return item\n\n}\n\nconst QuestionItemListItem = (props) => {\n  const {type, id, instrumentId} = props\n  const item = ObjectFinder(instrumentId, type, id)\n  const classes = useStyles();\n\n  const title = (isEmpty(item.question)) ? item.label : item.question.literal\n\n  const topic = get(item, 'topic', {id: null})\n  const topicId = get(topic, 'id', null)\n\n  const status = ObjectStatus(item.id, 'CcQuestion')\n\n  return (\n      <ListItem>\n      <Paper className={classes.control}>\n      <Grid container spacing={3}>\n          { !isEmpty(status) && !isNil(status.error) && (\n            <div className={classes.root}>\n              <Alert severity=\"error\">\n                <AlertTitle>Error</AlertTitle>\n                {status.errorMessage}\n              </Alert>\n            </div>\n          )}\n          <Grid item xs={9}>\n            <ListItemText primary={title} />\n          </Grid>\n          <Grid item xs={3}>\n            <Chip label={item.label} color=\"primary\"></Chip>\n            { !isEmpty(status) && !isNil(status.saving) && (\n              <Chip label=\"Saving\" color=\"secondary\">              <SyncLoader/></Chip>\n            )}\n            { !isEmpty(status) && !isNil(status.saved) && (\n              <Chip label=\"Saved\" color=\"success\" deleteIcon={<DoneIcon />}></Chip>\n            )}\n          </Grid>\n          <Grid item xs={6}>\n            <VariableList variables={item.variables} instrumentId={instrumentId} ccQuestionId={item.id} />\n          </Grid>\n          <Grid item xs={6}>\n            <TopicList topicId={topicId} instrumentId={instrumentId} ccQuestionId={item.id} />\n          </Grid>\n        </Grid>\n      </Paper>\n      </ListItem>\n  )\n}\n\nconst TopicList = (props) => {\n  const {topicId, instrumentId, ccQuestionId} = props\n\n  const dispatch = useDispatch()\n\n  const topics = useSelector(state => state.topics);\n\n  const classes = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\n  const handleChange = (event, value, reason) => {\n    dispatch(CcQuestions.topic.set(instrumentId, ccQuestionId, event.target.value));\n  }\n\n  if(isEmpty(topics)){\n    return 'Fetching topics'\n  }else if(isNil(topicId)){\n    return (\n          <div>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"grouped-native-select\">Topic</InputLabel>\n              <Select native id=\"grouped-native-select\" onChange={handleChange}>\n                <option aria-label=\"None\" value=\"\" />\n                {Object.values(topics).map((topic) => (\n                  <option key={topic.id} value={topic.id}>{(topic.level === 1) ? topic.name : '--' + topic.name }</option>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n    )\n  }else{\n    return (\n          <div>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"grouped-native-select\">Topic</InputLabel>\n              <Select native defaultValue={topicId} id=\"grouped-native-select\" onChange={handleChange}>\n                <option aria-label=\"None\" value=\"\" />\n                {Object.values(topics).map((topic) => (\n                  <option key={topic.id} value={topic.id}>{(topic.level === 1) ? topic.name : '--' + topic.name }</option>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n    )\n  }\n}\n\nconst VariableList = (props) => {\n  const {variables, instrumentId, ccQuestionId} = props\n\n  const dispatch = useDispatch()\n\n  const allVariables = useSelector(state => state.variables);\n  const variableOptions = get(allVariables, instrumentId, {})\n\n  const handleAddVariable = (newVariables) => {\n    dispatch(CcQuestions.variables.add(instrumentId, ccQuestionId, newVariables));\n  }\n\n  const handleRemoveVariable = (oldVariables) => {\n    dispatch(CcQuestions.variables.remove(instrumentId, ccQuestionId, oldVariables));\n  }\n\n  var difference = []\n\n  const handleChange = (event, value, reason) => {\n    switch (reason) {\n      case 'select-option':\n        difference = value.filter(x => !variables.includes(x));\n        if(!isEmpty(difference)){\n          return handleAddVariable(difference.map((variable) => { return variable.name }).join(','))\n        };\n        break;\n      case 'remove-option':\n        difference = variables.filter(x => !value.includes(x));\n        if(!isEmpty(difference)){\n          return handleRemoveVariable(difference.map((variable) => { return variable.id }).join(','))\n        };\n        break;\n      default:\n        return null;\n    }\n  }\n\n  if(isEmpty(variables)){\n    return (\n      <div>\n         <Autocomplete\n          multiple\n          id=\"tags-outlined\"\n          options={Object.values(variableOptions)}\n          getOptionLabel={(option) => option.name}\n          onChange={handleChange}\n          value={[]}\n          filterSelectedOptions\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Variables\"\n              placeholder=\"Add variable\"\n            />\n          )}\n        />\n      </div>\n    )\n  }else{\n    return (\n      <div>\n         <Autocomplete\n          multiple\n          id=\"tags-outlined\"\n          options={Object.values(variableOptions)}\n          getOptionLabel={(option) => option.name}\n          onChange={handleChange}\n          value={variables}\n          getOptionSelected= {(option, value) => (\n            option.id === value.id\n          )}\n          filterSelectedOptions\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Variables\"\n              placeholder=\"Add variable\"\n            />\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nconst QuestionGridListItem = (props) => {\n\n  return (\n    <div>This is a Question Grid</div>\n  )\n}\n\nconst ConditionItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'literal', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n              <ListItem button className={classes.nested}>\n                {(function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />;\n                    case 'CcQuestion':\n                      return <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    case 'CcCondition':\n                      return <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    default:\n                      console.log(child)\n                      return null;\n                  }\n                })()}\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst SequenceItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'label', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n                (function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />\n                          </ListItem>)\n                    case 'CcQuestion':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    case 'CcCondition':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    default:\n                      return null;\n                  }\n                })()\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst InstrumentMap = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n\n  useEffect(() => {\n    dispatch(Instrument.show(instrumentId));\n    dispatch(CcSequences.all(instrumentId));\n    dispatch(CcStatements.all(instrumentId));\n    dispatch(CcConditions.all(instrumentId));\n    dispatch(CcQuestions.all(instrumentId));\n    dispatch(QuestionItems.all(instrumentId));\n    dispatch(QuestionGrids.all(instrumentId));\n    dispatch(Variables.all(instrumentId));\n    dispatch(Topics.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sequence = (isEmpty(cc_sequences)) ? undefined : Object.values(cc_sequences).find(element => element.top == true)\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Maps'} instrumentId={instrumentId}>\n        <InstrumentHeading instrument={instrument} mode={'map'} />\n      {isNil(sequence)\n        ? <Box m=\"auto\"><BounceLoader color={'#009de6'}/></Box>\n        : <SequenceItem instrumentId={instrumentId} type={'CcSequence'} id={sequence.children[0].id} title={sequence.children[0].label} children={sequence.children[0].children}/>\n      }\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentMap;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { InstrumentHeading } from '../components/InstrumentHeading'\nimport { get } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuild = (props) => {\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const stats = useSelector(state => get(state.instrumentStats, instrumentId, {}));\n\n  const instrumentStats = get(stats, 'stats', {})\n  const {\n    categories=0, code_lists=0, response_domain_datetimes=0,\n    response_domain_numerics=0, response_domain_texts=0,\n    question_items=0, question_grids=0, instructions=0,\n    cc_conditions=0, cc_loops=0, cc_questions=0, cc_sequences=0,\n    cc_statements=0\n  } = instrumentStats\n\n  useEffect(() => {\n    dispatch(Instrument.show(instrumentId));\n    dispatch(Instrument.stats(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const StatCount = (props) => {\n    const {label, value} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label}/>\n        <ListItemSecondaryAction>\n          <Chip label={value} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <InstrumentHeading instrument={instrument} mode={'build'}/>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })}>Code Lists</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Categories\" value={categories} />\n                  <StatCount label=\"Code Lists\" value={code_lists} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })}>ResponseDomains</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Datetime Answers\" value={response_domain_datetimes} />\n                  <StatCount label=\"Numberic Answers\" value={response_domain_numerics} />\n                  <StatCount label=\"Text Answers\" value={response_domain_texts} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })}>Questions</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Question Items\" value={question_items} />\n                  <StatCount label=\"Question Grids\" value={question_grids} />\n                  <StatCount label=\"Instructions\" value={instructions} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.constructs.show, { instrument_id: instrumentId })}>Constructs</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Conditions\" value={cc_conditions} />\n                  <StatCount label=\"Loops\" value={cc_loops} />\n                  <StatCount label=\"Questions\" value={cc_questions} />\n                  <StatCount label=\"Sequences\" value={cc_sequences} />\n                  <StatCount label=\"Statements\" value={cc_statements} />\n              </List>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuild;\n","import React from 'react'\nimport {isNil} from 'lodash'\nimport { useDispatch } from 'react-redux'\n\nimport {\n  Grid,\n  Button\n} from '@material-ui/core';\n\nexport const DeleteObjectButton = (props) => {\n  const {instrumentId, id, action, onDelete= () => { console.log('No delete callback provided') }} = props;\n\n  const dispatch=useDispatch()\n\n  const handleDelete = () => {\n    if( !isNil(id) && window.confirm('Are you sure you want to delete this?')){\n      dispatch(action.delete(instrumentId, id, onDelete))\n    }\n  }\n\n  if(isNil(id)){\n    return ''\n  }\n\n  return (\n    <Grid item style={{ marginTop: 16 }}>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={()=>{handleDelete()}}\n      >\n        Delete\n      </Button>\n    </Grid>\n  )\n}\n","import { merge, isObject } from 'lodash';\n\nexport const ObjectCheckForInitialValues = (initialValues, values) => {\n    // For every field initially provided, we check whether it value has been removed\n    // and set it explicitly to an empty string\n    if (!initialValues) return values;\n    const initialValuesWithEmptyFields = Object.keys(initialValues).reduce(\n        (acc, key) => {\n            if (values[key] instanceof Date || Array.isArray(values[key])) {\n                acc[key] = values[key];\n            } else if (\n                typeof values[key] === 'object' &&\n                values[key] !== null\n            ) {\n                acc[key] = ObjectCheckForInitialValues(initialValues[key], values[key]);\n            } else {\n                acc[key] =\n                    typeof values[key] === 'undefined' ? null : values[key];\n            }\n            return acc;\n        },\n        {}\n    );\n\n    // Finally, we merge back the values to not miss any which wasn't initially provided\n    return merge(initialValuesWithEmptyFields, values);\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcConditions } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('condition')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Logic\"\n        name=\"logic\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n];\n\nexport const CcConditionForm = (props) => {\n  const {ccCondition, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccCondition.id || 'new', 'CcCondition')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccCondition, values)\n\n    if(isNil(ccCondition.id)){\n      dispatch(CcConditions.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcConditions.update(instrumentId, ccCondition.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccCondition.id || 'new'} type={'CcCondition'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccCondition}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcConditions} onDelete={()=> { onDelete({ path }) }}/>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcQuestions } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { OnChange } from 'react-final-form-listeners'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('question')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((error_key)=>{\n      var key = (['response_unit', 'question'].includes(error_key)) ? `${error_key}_id` : error_key\n      if(isNil(values[key]) || values[key] == ''){\n        return errors[key] = status.errors[error_key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"question_type\"\n          label=\"Type\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='QuestionItem'>Item</MenuItem>\n          <MenuItem value='QuestionGrid'>Grid</MenuItem>\n        </Select>\n      )\n  }\n];\n\nexport const CcQuestionForm = (props) => {\n  const {ccQuestion, instrumentId, onChange, path, onDelete} = props;\n\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  const allResponseUnits = useSelector(state => state.response_units);\n  const responseUnits = get(allResponseUnits, instrumentId, {})\n\n  const [questionOptions, setQuestionOptions] = useState((ccQuestion.question_type === 'QuestionGrid') ? questionGrids : questionItems);\n\n  const changeQuestionOptions = (question_type) => {\n    setQuestionOptions((question_type === 'QuestionGrid') ? questionGrids : questionItems)\n  }\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccQuestion.id || 'new', 'CcQuestion')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccQuestion, values)\n\n    if(isNil(ccQuestion.id)){\n      dispatch(CcQuestions.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcQuestions.update(instrumentId, ccQuestion.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccQuestion.id || 'new'} type={'CcQuestion'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccQuestion}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <OnChange name=\"question_type\">\n                  {(value, previous) => {\n                    changeQuestionOptions(value)\n                    values.question_id = null\n                  }}\n                </OnChange>\n                <Grid item xs=\"12\" key=\"question\">\n                  <Select\n                    name=\"question_id\"\n                    label=\"Question\"\n                    formControlProps={{ margin: 'none' }}\n                  >\n                    <MenuItem></MenuItem>\n                    {Object.values(questionOptions).map((item, idx) => (\n                      <MenuItem value={item.id}>{item.label}</MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n                <Grid item xs=\"12\" key=\"response_unit_id\">\n                  <Select\n                    name=\"response_unit_id\"\n                    label=\"Interviewee\"\n                    formControlProps={{ margin: 'none' }}\n                  >\n                    <MenuItem></MenuItem>\n                    {Object.values(responseUnits).map((item, idx) => (\n                      <MenuItem value={item.id}>{item.label}</MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcQuestions} onDelete={()=> { onDelete({ path }) }} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcStatements } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('statement')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={false}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={false}\n      />\n    ),\n  },\n];\n\nexport const CcStatementForm = (props) => {\n  const {ccStatement, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccStatement.id || 'new', 'CcStatement')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccStatement, values)\n\n    if(isNil(ccStatement.id)){\n      dispatch(CcStatements.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcStatements.update(instrumentId, ccStatement.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccStatement.id || 'new'} type={'CcStatement'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccStatement}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcStatements} onDelete={()=> { onDelete({ path }) }} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcSequences } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('sequence')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n];\n\nexport const CcSequenceForm = (props) => {\n  const {ccSequence, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccSequence.id || 'new', 'CcSequence')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccSequence, values)\n\n    if(isNil(ccSequence.id)){\n      dispatch(CcSequences.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcSequences.update(instrumentId, ccSequence.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccSequence.id || 'new'} type={'CcSequence'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccSequence}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcSequences} onDelete={()=> { onDelete({ path }) }} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcLoops } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('loop')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n   if (!values.start_val) {\n     errors.start_val = 'Required';\n   }\n   if (!values.loop_var) {\n     errors.loop_var = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Variable\"\n        name=\"loop_var\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Start Value\"\n        name=\"start_val\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"End Value\"\n        name=\"end_val\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Loop While\"\n        name=\"loop_while\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nexport const CcLoopForm = (props) => {\n  const {ccLoop, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccLoop.id || 'new', 'CcLoop')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccLoop, values)\n\n    if(isNil(ccLoop.id)){\n      dispatch(CcLoops.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcLoops.update(instrumentId, ccLoop.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccLoop.id || 'new'} type={'CcLoop'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccLoop}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcLoops} onDelete={()=> { onDelete({ path }) }}/>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcLoops, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, ResponseUnits } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { CcConditionForm } from '../components/CcConditionForm'\nimport { CcQuestionForm } from '../components/CcQuestionForm'\nimport { CcStatementForm } from '../components/CcStatementForm'\nimport { CcSequenceForm } from '../components/CcSequenceForm'\nimport { CcLoopForm } from '../components/CcLoopForm'\nimport { Loader } from '../components/Loader'\nimport { ObjectColour } from '../support/ObjectColour'\nimport { get, isEmpty, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\nimport SearchBar from \"material-ui-search-bar\";\n\nimport {\n  Button,\n  ButtonGroup,\n  Divider\n} from '@material-ui/core';\n\nimport {\n  Alert,\n  AlertTitle\n} from '@material-ui/lab';\n\nimport SortableTree, { addNodeUnderParent, removeNodeAtPath, getFlatDataFromTree, changeNodeAtPath, toggleExpandedForAll } from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css'; // This only needs to be imported once in your app\n\nconst TreeNode = (instrumentId, type, id, expanded=false) => {\n  var item = ObjectFinder(instrumentId, type, id)\n  var children;\n\n  if(item.type === \"condition\"){\n    children = get(item, 'children',[])\n    var fchildren = get(item, 'fchildren',[])\n\n    var trueAndFalse = [\n      { title: `True`, expanded: expanded, conditionId: item.id, type: 'conditionTrue', children: children.map(child => TreeNode(instrumentId, child.type, child.id)) },\n      { title: `False`, expanded: expanded, conditionId: item.id, type: 'conditionFalse', children: fchildren.map(child => TreeNode(instrumentId, child.type, child.id)) },\n    ]\n    return {...item, ...{ title: `${item.label}`, expanded: expanded, type: item.type, children: trueAndFalse } }\n  }else{\n    children = get(item, 'children',[])\n\n    return {...item, ...{ title: `${item.label}`, expanded: expanded, type: item.type, children: children.map(child => TreeNode(instrumentId, child.type, child.id)) } }\n  }\n}\n\nconst TreeNodeFormatter = (instrumentId, item) => {\n  return {...item, ...{ title: `${item.label}`, expanded: true, type: item.type } }\n}\n\nconst Tree = (props) => {\n  const { topSequence, instrumentId, dispatch, onNodeSelect } = props\n  const [treeData, setTreeData] = useState([TreeNode(instrumentId, 'CcSequence', topSequence.id, true)]);\n  const [selectedNode, setSelectedNode] = useState({});\n//  const [expanded, setExpanded] = useState(true);\n  const classes = useStyles();\n\n  const [searchString, setSearchString] = useState();\n  const [searchFocusIndex, setSearchFocusIndex] = useState();\n  const [searchFoundCount, setSearchFoundCount] = useState();\n\n  // Case insensitive search of `node.title`\n  const customSearchMethod = ({ node, searchQuery }) =>\n    searchQuery &&\n    node.title.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1;\n\n  const selectPrevMatch = () =>\n      setSearchFocusIndex(\n        searchFocusIndex !== null\n          ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\n          : searchFoundCount - 1\n      );\n\n  const selectNextMatch = () =>\n    setSearchFocusIndex(\n        searchFocusIndex !== null\n          ? (searchFocusIndex + 1) % searchFoundCount\n          : 0,\n    );\n\n  const getNodeKey = ({ treeIndex }) => treeIndex;\n\n  const updateNode = ({ node, path }) => {\n    var data = changeNodeAtPath({\n        treeData: treeData,\n        path,\n        getNodeKey,\n        newNode: TreeNodeFormatter(instrumentId, node)\n      })\n      setTreeData(data)\n      reorderConstructs(data)\n  }\n\n  const deleteNode = ({ path }) => {\n    onNodeSelect({})\n    setTreeData(removeNodeAtPath({\n                    treeData: treeData,\n                    path,\n                    getNodeKey,\n    }));\n  }\n\n  const canHaveChildren = (node) => {\n    return (node.type === 'sequence' || node.type === 'loop' || node.type === 'conditionTrue' || node.type === 'conditionFalse')\n  }\n\n  const canDrop = ({ node, nextParent, prevPath, nextPath }) => {\n    if (canHaveChildren(nextParent)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const toggleExpand = (expanded) => {\n    setTreeData(toggleExpandedForAll({\n                    treeData: treeData,\n                    expanded: expanded\n    }));\n  }\n\n  const orderArray = (data) => {\n    return getFlatDataFromTree({\n      treeData: data,\n      getNodeKey: ({ node }) => { return { id: node.id, type: node.type, children: node.children.map(child => `type ${child.type} id ${child.id}` ) } }, // This ensures your \"id\" properties are exported in the path\n      ignoreCollapsed: false, // Makes sure you traverse every node in the tree, not just the visible ones\n    }).map(({ node, path }) => {\n      if(['conditionTrue', 'conditionFalse'].includes(node.type)){\n        return null\n      }\n      let parent = path[path.length - 2]\n      let branch = (parent !== undefined && parent.type === 'conditionFalse') ? 1 : 0\n      if(parent !== undefined && ['conditionTrue', 'conditionFalse'].includes(parent.type)){\n        parent = path[path.length - 3]\n      }\n      return {\n        id: node.id,\n        type: node.type,\n        position: (parent !== undefined) ? parent.children.indexOf(`type ${node.type} id ${node.id}`) + 1 : node.position,\n        branch: branch,\n        // // The last entry in the path is this node's key\n        // // The second to last entry (accessed here) is the parent node's key\n        parent: (parent !== undefined) ? { id: parent.id, type: parent.type } : {},\n    }}).filter(el => el != null);\n  }\n\n  const reorderConstructs = (data) => {\n    dispatch(Instrument.reorderConstructs(instrumentId, orderArray(data)));\n  }\n\n  const generateButtons = (node, path) => {\n      var buttons = []\n      if(canHaveChildren(node)){\n        buttons.push(\n              <button\n              onClick={(event) => {\n                  setTreeData(addNodeUnderParent({\n                    treeData: treeData,\n                    parentKey: path[path.length - 1],\n                    expandParent: true,\n                    getNodeKey,\n                    newNode: {\n                      title: `Click to select construct type`,\n                      children: []\n                    }\n                  }).treeData)\n                  event.stopPropagation()\n                  setSelectedNode({node: { type: undefined }})\n              }}\n            >\n              <AddIcon />\n            </button>\n        )\n      }\n      return buttons;\n  }\n\n  return (\n    <div style={{ height: 10000 }}>\n\n    <SearchBar\n      placeholder=\"Search (press return to perform search)\"\n      onRequestSearch={(newValue) =>\n              setSearchString(newValue)\n            }\n      onCancelSearch={() => {\n              setSearchString()\n            }}\n    />\n\n    {searchFoundCount === 0 && !isNil(searchString) && (\n      <Alert severity=\"error\">\n        <AlertTitle>Error</AlertTitle>\n        No results found.\n      </Alert>\n    )}\n\n    {searchFoundCount > 0 && !isNil(searchString) && (\n      <>\n        <span>\n          &nbsp;\n          {searchFoundCount > 0 ? searchFocusIndex + 1 : 0}\n          &nbsp;of&nbsp;\n          {searchFoundCount || 0} matches\n        </span>\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n          <Button onClick={selectPrevMatch}>&lt; Prev</Button>\n          <Button onClick={selectNextMatch}>&gt; Next</Button>\n        </ButtonGroup>\n      </>\n    )}\n\n      <Divider className={classes.divider}/>\n\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button onClick={()=>{toggleExpand(true)}} startIcon={<ExpandMoreIcon />}>Expand All</Button>\n        <Button onClick={()=>{toggleExpand(false)}} startIcon={<ExpandLessIcon />}>Collapse All</Button>\n      </ButtonGroup>\n\n      <SortableTree\n        treeData={treeData}\n        onChange={newTreeData => { setTreeData(newTreeData); reorderConstructs(newTreeData) } }\n        canNodeHaveChildren={node => canHaveChildren(node)}\n        canDrop={canDrop}\n        canDrag={({node}) =>{\n          return !['conditionTrue', 'conditionFalse'].includes(node.type)\n        }}\n        searchMethod={customSearchMethod}\n        searchQuery={searchString}\n        searchFocusOffset={searchFocusIndex}\n        searchFinishCallback={(matches) => {\n          setSearchFoundCount(matches.length)\n          setSearchFocusIndex(matches.length > 0 ? searchFocusIndex % matches.length : 0)\n        }}\n        generateNodeProps={({ node, path }) => {\n          const boxShadow = (node === selectedNode || node.type == 'sequence' ) ? `0px 0px 15px 3px  #${ObjectColour(node.type)}` : ''\n\n          return (\n            {\n              style: {\n                boxShadow: boxShadow,\n              },\n              onClick: () => {\n                onNodeSelect({ node: node, path: path,  callback: ({ node, path }) => { updateNode({ node, path }) }, deleteCallback: ({ path }) => { deleteNode({ path }) } });\n                setSelectedNode(node);\n              },\n              buttons: generateButtons(node, path),\n              className: `${node.type}:${node.id}`\n            }\n          )\n        }}\n      />\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  main: {\n    'min-height': '1200px'\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n    right: '5px'\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  paper:{\n    boxShadow :`5px 5px 10px 5px  #${ObjectColour('default')}`\n  },\n  statement:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('statement')}`,\n    'margin-bottom': '10px'\n  },\n  sequence:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('sequence')}`,\n    'margin-bottom': '10px'\n  },\n  question:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('question')}`,\n    'margin-bottom': '10px'\n  },\n  loop:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('loop')}`,\n    'margin-bottom': '10px'\n  },\n  condition:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('condition')}`,\n    'margin-bottom': '10px'\n  },\n  divider:{\n    margin: '25px'\n  }\n}));\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const loops = useSelector(state => state.cc_loops);\n  const cc_loops = get(loops, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcLoop'){\n    item = get(cc_loops, id.toString(), {})\n    item.type = 'loop'\n  }\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n    item.type = 'sequence'\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n    item.type = 'statement'\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n    item.type = 'condition'\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n    item.type = 'question'\n  }\n\n  return item\n\n}\n\nconst ConstructForm = (props) => {\n  const {object, instrumentId, onNodeSelect} = props;\n  const { node={}, path, callback=(node)=>{ console.log('No onChange callback provided')}, deleteCallback=(node)=>{ console.log('No onDelete callback provided')} } = object;\n\n  switch (node.type) {\n    case 'question':\n      return <CcQuestionForm ccQuestion={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'statement':\n      return <CcStatementForm ccStatement={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'sequence':\n      return <CcSequenceForm ccSequence={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'condition':\n      return <CcConditionForm ccCondition={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'loop':\n      return <CcLoopForm ccLoop={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case undefined:\n      return <NewConstructQuestion onNodeSelect={onNodeSelect} object={object}/>\n    default:\n      return ''\n  }\n\n}\n\nconst NewConstructQuestion = (props) => {\n  const {object, onNodeSelect} = props;\n\n  const classes = useStyles();\n\n  return (\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <h3>Select construct type</h3>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.question}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'question' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Question\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.condition}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'condition' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Condition\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.loop}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'loop' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Loop\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.sequence}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'sequence' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Sequence\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.statement}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'statement' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Statement\n                  </Button>\n          </Paper>\n  )\n\n}\n\nconst InstrumentConstructBuild = (props) => {\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, null)\n\n  const [selectedNode, setSelectedNode] = useState({});\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(Instrument.show(instrumentId)),\n      dispatch(CcSequences.all(instrumentId)),\n      dispatch(CcStatements.all(instrumentId)),\n      dispatch(CcConditions.all(instrumentId)),\n      dispatch(CcLoops.all(instrumentId)),\n      dispatch(CcQuestions.all(instrumentId)),\n      dispatch(QuestionItems.all(instrumentId)),\n      dispatch(QuestionGrids.all(instrumentId)),\n      dispatch(ResponseUnits.all(instrumentId))\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sequence = (isEmpty(cc_sequences) || isNil(cc_sequences)) ? undefined : Object.values(cc_sequences).find(element => element.top == true)\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Build'} instrumentId={instrumentId}>\n        <h1>{get(instrument, 'label')}</h1>\n      {!dataLoaded\n        ? <Loader />\n        : (\n          <Grid container spacing={3} className={classes.main}>\n            <Grid item xs={(isEmpty(selectedNode)) ? 12 : 12 }>\n              <Tree topSequence={sequence.children[0]} instrumentId={instrumentId} onNodeSelect={setSelectedNode} dispatch={dispatch} />\n            </Grid>\n            {!isEmpty(selectedNode) && (\n              <Grid item xs={4} className={classes.side}>\n                <ConstructForm object={selectedNode} instrumentId={instrumentId} onNodeSelect={setSelectedNode} />\n              </Grid>\n            )}\n          </Grid>\n        )\n      }\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentConstructBuild;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CodeLists } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport {\n  TextField,\n  Checkboxes,\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <Checkboxes\n        name=\"rd\"\n        formControlProps={{ margin: 'none' }}\n        data={{ label: 'Response Domain', value: true }}\n      />\n    ),\n  },\n  {\n    size: 12,\n    visible: (values) => {\n      return get(values, 'rd', false)\n    },\n    field: <TextField name=\"min_responses\" multiline label=\"Min Responses\" margin=\"none\" />,\n  },\n  {\n    size: 12,\n    visible: (values) => {\n      return get(values, 'rd', false)\n    },\n    field: <TextField name=\"max_responses\" multiline label=\"Max Responses\" margin=\"none\" />,\n  }\n];\n\nconst FormField = (props) => {\n  const {item, values} = props\n\n  if(item.visible !== undefined && !item.visible(values) ){\n    return ''\n  }\n\n  if(item.type && item.type === 'select'){\n    return item.field()\n  }else{\n    return item.field\n  }\n}\n\nexport const CodeListForm = (props) => {\n  const {codeList, instrumentId} = props;\n\n  const categories = useSelector(state => get(state.categories, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n      values = ObjectCheckForInitialValues(codeList, values)\n\n    if(isNil(codeList.id)){\n      dispatch(CodeLists.create(instrumentId, values))\n    }else{\n      dispatch(CodeLists.update(instrumentId, codeList.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={codeList.id || 'new'} type={'CodeList'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={codeList}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    <FormField item={item} values={values} />\n                  </Grid>\n                ))}\n                <h3>Codes</h3>\n                  <AddCircleOutlineIcon onClick={() => push('codes', {})}/>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>ID</TableCell>\n                        <TableCell size=\"small\">Value</TableCell>\n                        <TableCell>Label</TableCell>\n                        <TableCell>Actions</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                            <FieldArray name=\"codes\">\n                              {({ fields }) =>\n                                fields.map((name, index) => (\n                                  <TableRow key={name}>\n                                    <TableCell>\n                                      {fields.value[index].id}\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      <TextField name={`${name}.value`} multiline label=\"Value\" margin=\"none\" />\n                                    </TableCell>\n                                    <TableCell>\n                                     <Autocomplete\n                                      freesolo=\"true\"\n                                      options={Object.values(categories)}\n                                      getOptionLabel={(option) => option.label}\n                                      onChange={(event, value, reason)=>{\n                                        if(isNil(value)){\n                                          fields.update(index, {...fields.value[index], ...{category_id: null, label: null} })\n                                        }else{\n                                          fields.update(index, {...fields.value[index], ...{category_id: value.id, label: value.label} })\n                                        }\n                                      } }\n                                      value={{id: fields.value[index].category_id, label:fields.value[index].label}}\n                                      getOptionSelected= {(option, value) => (\n                                        option.id === value.id\n                                      )}\n                                      renderInput={(params) => (\n                                        <TextField name={`${name}.label`}\n                                          {...params}\n                                          variant=\"outlined\"\n                                          label=\"Label\"\n                                          placeholder=\"label\"\n                                        />\n                                      )}\n                                    />\n                                    </TableCell>\n                                    <TableCell>\n                                      <span\n                                        onClick={() => fields.remove(index)}\n                                        style={{ cursor: 'pointer' }}\n                                      >\n                                        <DeleteIcon />\n                                      </span>\n                                    </TableCell>\n                                  </TableRow>\n                                ))\n                              }\n                            </FieldArray>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CodeLists} />\n              </Grid>\n              <Grid item style={{ marginTop: 16 }}>\n                <h3>Used By</h3>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>ID</TableCell>\n                        <TableCell size=\"small\">Question Type</TableCell>\n                        <TableCell>Label</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                              {codeList.used_by.map((question) => (\n                                  <TableRow key={question.id}>\n                                    <TableCell>\n                                      <Button variant=\"outlined\">\n                                        <Link to={url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: question.id })}>{question.id}</Link>\n                                      </Button>\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      {question.type}\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      {question.label}\n                                    </TableCell>\n                                  </TableRow>\n                                ))\n                              }\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { useHistory } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst ObjectTypeLookup = (objectType, instrumentId) => {\n    switch(objectType) {\n      case('ResponseDomainNumeric'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Numeric'\n        }\n      case('ResponseDomainText'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Text'\n        }\n      case('ResponseDomainDatetime'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Datetime'\n        }\n      case('CodeList'):\n        return {\n          path: url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: 'new' }),\n          text: 'New CodeList'\n        }\n      case('QuestionItem'):\n        return {\n          path: url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: 'new' }),\n          text: 'Question Item'\n        }\n      case('QuestionGrid'):\n        return {\n          path: url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: 'new' }),\n          text: 'Question Grid'\n        }\n      default:\n        return {\n          path: '/',\n          text: 'Not found'\n        }\n  }\n}\n\nexport const CreateNewBuildObjectButtons  = (props) => {\n  const { objectTypes=[], instrumentId, callback=()=>{}} = props;\n\n  const history = useHistory();\n\n  const createNew = (path) => {\n    history.push(path);\n    callback('new')\n  }\n\n  const buttons = objectTypes.map( objectType => ObjectTypeLookup(objectType, instrumentId) )\n\n  return (\n    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n     {buttons.map((button) => {\n        return <Button onClick={()=> { createNew(button.path)} }startIcon={<AddIcon />}>{button.text}</Button>\n      })}\n    </ButtonGroup>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CodeLists, Categories } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { CodeListForm } from '../components/CodeListForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildCodeLists = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const codeListId = get(props, \"match.params.codeListId\", null);\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n  const selectedCodeList = get(codeLists, codeListId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(CodeLists.all(instrumentId));\n    dispatch(Categories.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const CodeListItem = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleCodeListSelection(id)}}/>\n        <ListItemSecondaryAction>\n          <Chip label={value} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  const handleCodeListSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: id })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Code Lists</h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['CodeList']} />\n              <List dense={true}>\n                {Object.values(codeLists).map((codeList) => {\n                  return (\n                    <CodeListItem label={codeList.label} value={codeList.used_by.length} id={codeList.id} />\n                  )\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              {!isNil(selectedCodeList) && (\n                <CodeListForm codeList={selectedCodeList} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildCodeLists;\n","import React, { useEffect } from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionItems, ResponseDomainNumerics, ResponseDomainTexts, ResponseDomainDatetimes } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  Table,\n  TableContainer,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport {\n  Autocomplete\n} from '@material-ui/lab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Instruction\"\n        name=\"instruction\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nexport const QuestionItemForm = (props) => {\n  const {questionItem, instrumentId} = props;\n\n  const categories = useSelector(state => get(state.categories, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const responseDomainNumerics = useSelector(state => get(state.responseDomainNumerics, instrumentId, {}));\n  const responseDomainTexts = useSelector(state => get(state.responseDomainTexts, instrumentId, {}));\n  const responseDomainDatetimes = useSelector(state => get(state.responseDomainDatetimes, instrumentId, {}));\n\n  const responseDomains = [...Object.values(responseDomainNumerics), ...Object.values(responseDomainTexts), ...Object.values(responseDomainDatetimes)]\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(questionItem, values)\n\n    if(isNil(questionItem.id)){\n      dispatch(QuestionItems.create(instrumentId, values))\n    }else{\n      dispatch(QuestionItems.update(instrumentId, questionItem.id, values))\n    }\n  }\n\n  useEffect(() => {\n    dispatch(ResponseDomainNumerics.all(instrumentId));\n    dispatch(ResponseDomainTexts.all(instrumentId));\n    dispatch(ResponseDomainDatetimes.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={questionItem.id || 'new'} type={'QuestionItem'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={questionItem}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.field}\n                  </Grid>\n                ))}\n                <h3>Response Domains</h3>\n                <AddCircleOutlineIcon onClick={() => push('rds', {})}/>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Type and Label</TableCell>\n                          <TableCell>Actions</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <FieldArray name=\"rds\">\n                          {({ fields }) =>\n                            fields.map((name, index) => (\n                              <TableRow key={name}>\n                                <TableCell>\n                                 <Autocomplete\n                                  freesolo=\"true\"\n                                  options={Object.values(responseDomains)}\n                                  getOptionLabel={(option) => `${option.type} - ${option.label}`}\n                                  onChange={(event, value, reason)=>{\n                                    if(isNil(value)){\n                                      fields.update(index, {...fields.value[index], ...{type: null, id: null, label: null} })\n                                    }else{\n                                      fields.update(index, {...fields.value[index], ...{type: value.type, id: value.id, label: value.label} })\n                                    }\n                                  } }\n                                  value={{type: fields.value[index].type, id: fields.value[index].id, label:fields.value[index].label}}\n                                  getOptionSelected= {(option, value) => (\n                                    option.type === value.type && option.id === value.id\n                                  )}\n                                  renderInput={(params) => (\n                                    <TextField name={`${name}.type - ${name}.label`}\n                                      {...params}\n                                      variant=\"outlined\"\n                                      label=\"Label\"\n                                      placeholder=\"label\"\n                                    />\n                                  )}\n                                />\n                                </TableCell>\n                                <TableCell>\n                                  <span\n                                    onClick={() => fields.remove(index)}\n                                    style={{ cursor: 'pointer' }}\n                                  >\n                                    <DeleteIcon />\n                                  </span>\n                                </TableCell>\n                              </TableRow>\n                            ))\n                          }\n                        </FieldArray>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={QuestionItems} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionItems } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { QuestionItemForm } from '../components/QuestionItemForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildQuestionItems = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const questionItemId = get(props, \"match.params.questionItemId\", null);\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const questionItems = useSelector(state => get(state.questionItems, instrumentId, {}));\n  const selectedQuestion = get(questionItems, questionItemId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(QuestionItems.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const QuestionItem = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleQuestionSelection(id)}}/>\n      </ListItem>\n    )\n  }\n\n  const handleQuestionSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: id })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Question Items <Link to={url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })}>Question Grids</Link></h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['QuestionItem', 'QuestionGrid']} />\n              <List dense={true}>\n                {Object.values(questionItems).map((questionItem) => {\n                  return <QuestionItem label={questionItem.label} id={questionItem.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              {!isNil(selectedQuestion) && (\n                <QuestionItemForm questionItem={selectedQuestion} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildQuestionItems;\n","import React, { useEffect } from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionGrids, ResponseDomainNumerics, ResponseDomainTexts, ResponseDomainDatetimes } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { OnChange } from 'react-final-form-listeners'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem,\n  Table,\n  TableContainer,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport {\n  Autocomplete\n} from '@material-ui/lab';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Instruction\"\n        name=\"instruction\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    type: 'select',\n    size: 12,\n    field: (options) => (\n      <Select\n        name=\"horizontal_code_list_id\"\n        label=\"Horizontal Code List (X)\"\n        formControlProps={{ margin: 'none' }}\n      >\n        <MenuItem></MenuItem>\n        {options.map((item, idx) => (\n          <MenuItem value={item.id}>{item.label}</MenuItem>\n        ))}\n      </Select>\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"vertical_code_list_id\"\n          label=\"Vertical Code List (Y)\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          {options.map((item, idx) => (\n            <MenuItem value={item.id}>{item.label}</MenuItem>\n          ))}\n        </Select>\n      )\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"corner_label\"\n          label=\"Corner Label\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='H'>Horizontal</MenuItem>\n          <MenuItem value='V'>Vertical</MenuItem>\n        </Select>\n      )\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Roster Label\"\n        name=\"roster_label\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Roster Row Number\"\n        name=\"roster_rows\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nexport const QuestionGridForm = (props) => {\n  const {questionGrid, instrumentId} = props;\n\n  var codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  // Only show response domains in the list of codeLists\n  codeLists = Object.values(codeLists).filter((cl) => { return cl.rd === false})\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(questionGrid, values)\n\n    if(isNil(questionGrid.id)){\n      dispatch(QuestionGrids.create(instrumentId, values))\n    }else{\n      dispatch(QuestionGrids.update(instrumentId, questionGrid.id, values))\n    }\n  }\n\n  const responseDomainNumerics = useSelector(state => get(state.responseDomainNumerics, instrumentId, {}));\n  const responseDomainTexts = useSelector(state => get(state.responseDomainTexts, instrumentId, {}));\n  const responseDomainDatetimes = useSelector(state => get(state.responseDomainDatetimes, instrumentId, {}));\n\n  const responseDomains = [...Object.values(responseDomainNumerics), ...Object.values(responseDomainTexts), ...Object.values(responseDomainDatetimes)]\n\n  useEffect(() => {\n    dispatch(ResponseDomainNumerics.all(instrumentId));\n    dispatch(ResponseDomainTexts.all(instrumentId));\n    dispatch(ResponseDomainDatetimes.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={questionGrid.id || 'new'} type={'QuestionGrid'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={questionGrid}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <OnChange name=\"horizontal_code_list_id\">\n                  {(value, previous) => {\n                    const codeList = codeLists.find(el => el.id === value)\n                    if(codeList){\n                      values.cols = codeList.codes.map((code) => {\n                        return {\n                          label: code.label,\n                          value: code.value,\n                          order: code.order\n                        }\n                      })\n                    }\n                  }}\n                </OnChange>\n                <h3>Response Domains</h3>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Column</TableCell>\n                          <TableCell>Type and Label</TableCell>\n                          <TableCell>Actions</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <FieldArray name=\"cols\">\n                          {({ fields }) =>\n                            fields.map((name, index) => (\n                              <TableRow key={name}>\n                                <TableCell>{fields.value[index].label}</TableCell>\n                                <TableCell>\n                                 <Autocomplete\n                                  freesolo=\"true\"\n                                  options={Object.values(responseDomains)}\n                                  getOptionLabel={(option) => (option.type === '') ? `` :`${option.label} - ${option.type}`}\n                                  onChange={(event, value, reason)=>{\n                                    var rd;\n                                    if(isNil(value)){\n                                      rd = {...fields.value[index].rd, ...{type: '', id: null, label: ''} }\n                                    }else{\n                                      rd = {...fields.value[index].rd, ...{type: value.type, id: value.id, label: value.label} }\n                                    }\n                                    fields.update(index, {...fields.value[index], ...{rd: rd} })\n                                  } }\n                                  value={(fields.value[index].rd) ? {type: fields.value[index].rd.type, id: fields.value[index].rd.id, label:fields.value[index].rd.label} : {type: '', id: null, label: ''}}\n                                  getOptionSelected= {(option, value) => (\n                                    option.type === value.type && option.id === value.id\n                                  )}\n                                  renderInput={(params) => (\n                                    <TextField name={`${name}.type - ${name}.label`}\n                                      {...params}\n                                      variant=\"outlined\"\n                                      label=\"Label\"\n                                      placeholder=\"label\"\n                                    />\n                                  )}\n                                />\n                                </TableCell>\n                                <TableCell>\n                                  <span\n                                    onClick={() => fields.update(index, {...fields.value[index], ...{rd: {type: '', id: null, label: ''} } }) }\n                                    style={{ cursor: 'pointer' }}\n                                  >\n                                    <DeleteIcon />\n                                  </span>\n                                </TableCell>\n                              </TableRow>\n                            ))\n                          }\n                        </FieldArray>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={QuestionGrids} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionGrids, CodeLists } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { QuestionGridForm } from '../components/QuestionGridForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildQuestionGrids = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const [questionGridId, setquestionGridId] = React.useState(get(props, \"match.params.questionGridId\", null));\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const questionGrids = useSelector(state => get(state.questionGrids, instrumentId, {}));\n  const selectedQuestion = get(questionGrids, questionGridId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(QuestionGrids.all(instrumentId));\n    dispatch(CodeLists.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const QuestionGrid = (props) => {\n    const {label, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleQuestionSelection(id)}}/>\n      </ListItem>\n    )\n  }\n\n  const handleQuestionSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: id })\n    history.push(path);\n    setquestionGridId(id)\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Question Grids <Link to={url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })}>Question Items</Link></h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['QuestionItem', 'QuestionGrid']} callback={setquestionGridId} />\n              <List dense={true}>\n                {Object.values(questionGrids).map((questionGrid) => {\n                  return <QuestionGrid label={questionGrid.label} id={questionGrid.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              {!isNil(selectedQuestion) && (\n                <QuestionGridForm questionGrid={selectedQuestion} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildQuestionGrids;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainNumerics } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n   if (!values.subtype) {\n     errors.subtype = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"subtype\"\n          label=\"Type\"\n          formControlProps={{ margin: 'none' }}\n          required={true}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='Integer'>Integer</MenuItem>\n          <MenuItem value='Float'>Float</MenuItem>\n        </Select>\n      )\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Min\"\n        name=\"min\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Max\"\n        name=\"max\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nexport const ResponseDomainNumericForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(responseDomain, values)\n\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainNumerics.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainNumerics.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainNumerics} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainTexts } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Max Length\"\n        name=\"maxlen\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nexport const ResponseDomainTextForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(responseDomain, values)\n\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainTexts.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainTexts.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainTexts} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainDatetimes } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n   if (!values.subtype) {\n     errors.subtype = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    type: 'select',\n    size: 12,\n    field: (options) => (\n      <Select\n        name=\"subtype\"\n        label=\"Type\"\n        formControlProps={{ margin: 'none' }}\n        required={true}\n      >\n        <MenuItem value=\"Date\">Date</MenuItem>\n        <MenuItem value=\"Time\">Time</MenuItem>\n        <MenuItem value=\"Duration\">Duration</MenuItem>\n      </Select>\n    ),\n  },\n  {\n    size: 12,\n    visible: (values) => {\n      return get(values, 'subtype', '') === 'Duration'\n    },\n    field: (\n      <TextField\n        label=\"Format\"\n        name=\"format\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nconst FormField = (props) => {\n  const {item, values} = props\n\n  if(item.visible !== undefined && !item.visible(values) ){\n    return ''\n  }\n\n  if(item.type && item.type === 'select'){\n    return item.field()\n  }else{\n    return item.field\n  }\n}\n\nexport const ResponseDomainDatetimeForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(responseDomain, values)\n\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainDatetimes.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainDatetimes.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    <FormField item={item} values={values} />\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainDatetimes} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainNumerics, ResponseDomainTexts, ResponseDomainDatetimes } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { ResponseDomainNumericForm } from '../components/ResponseDomainNumericForm'\nimport { ResponseDomainTextForm } from '../components/ResponseDomainTextForm'\nimport { ResponseDomainDatetimeForm } from '../components/ResponseDomainDatetimeForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildResponseDomains = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const responseDomainId = get(props, \"match.params.responseDomainId\", null)\n  const responseDomainType = get(props, \"match.params.responseDomainType\", null)\n\n  const responseDomainNumerics = useSelector(state => get(state.responseDomainNumerics, instrumentId, {}));\n  const responseDomainTexts = useSelector(state => get(state.responseDomainTexts, instrumentId, {}));\n  const responseDomainDatetimes = useSelector(state => get(state.responseDomainDatetimes, instrumentId, {}));\n\n  const responseDomains = [...Object.values(responseDomainNumerics), ...Object.values(responseDomainTexts), ...Object.values(responseDomainDatetimes)]\n\n  const selectedResponseDomain = responseDomains.find(responseDomain => responseDomain.id == responseDomainId && responseDomain.type == responseDomainType) || {};\n\n  useEffect(() => {\n    dispatch(ResponseDomainNumerics.all(instrumentId));\n    dispatch(ResponseDomainTexts.all(instrumentId));\n    dispatch(ResponseDomainDatetimes.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const ResponseDomainItem = (props) => {\n    const {label, type, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleResponseDomainSelection(type,id)}}/>\n        <ListItemSecondaryAction>\n          <Chip label={type} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  const handleResponseDomainSelection = (type, id) => {\n    const path = url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: type, responseDomainId: id })\n    history.push(path);\n  }\n\n  const responseDomainForm = () => {\n    switch(responseDomainType) {\n      case('ResponseDomainNumeric'):\n          return <ResponseDomainNumericForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      case('ResponseDomainText'):\n          return <ResponseDomainTextForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      case('ResponseDomainDatetime'):\n          return <ResponseDomainDatetimeForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      default:\n        return ''\n    }\n  }\n\n  const createNew = (type) => {\n    const path = url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: type, responseDomainId: 'new' })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Response Domains</h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['ResponseDomainText', 'ResponseDomainNumeric', 'ResponseDomainDatetime']} />\n              <List dense={true}>\n                {Object.values(responseDomains).map((responseDomain) => {\n                  return <ResponseDomainItem label={responseDomain.label} type={responseDomain.type} id={responseDomain.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              { responseDomainForm() }\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildResponseDomains;\n","const NoMatch = () => {\n\n  return (\n    'NoMatch'\n  )\n}\n\nexport default NoMatch;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport { get } from 'lodash'\n\nconst RedirectFromState = () => {\n  const redirect = useSelector(state => get(state.common, 'redirect'));\n  const dispatch = useDispatch()\n\n  if(redirect){\n    return (\n      <Redirect to={redirect} />\n    )\n  }else{\n    return ''\n  }\n}\n\nexport default RedirectFromState;\n","import React from 'react';\nimport { Switch, BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\n\nimport routes from './routes'\nimport AuthRoute from './AuthRoute'\nimport Login from './pages/Login';\nimport AdminImport from './pages/AdminImport';\nimport AdminImportView from './pages/AdminImportView';\nimport AdminImports from './pages/AdminImports';\nimport AdminInstrumentImportMappings from './pages/AdminInstrumentImportMappings';\nimport AdminDatasetImportMappings from './pages/AdminDatasetImportMappings';\nimport AdminInstruments from './pages/AdminInstruments';\nimport AdminDatasets from './pages/AdminDatasets';\nimport Instruments from './pages/Instruments';\nimport Datasets from './pages/Datasets';\nimport DatasetView from './pages/DatasetView';\nimport InstrumentView from './pages/InstrumentView';\nimport InstrumentMap from './pages/InstrumentMap';\nimport InstrumentBuild from './pages/InstrumentBuild';\nimport InstrumentConstructBuild from './pages/InstrumentConstructBuild';\nimport InstrumentBuildCodeLists from './pages/InstrumentBuildCodeLists';\nimport InstrumentBuildQuestionItems from './pages/InstrumentBuildQuestionItems';\nimport InstrumentBuildQuestionGrids from './pages/InstrumentBuildQuestionGrids';\nimport InstrumentBuildResponseDomains from './pages/InstrumentBuildResponseDomains';\nimport NoMatch from './pages/NoMatch';\nimport RedirectFromState from './components/RedirectFromState';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#009de6',\n    },\n    secondary: {\n      main: '#652d90',\n    },\n    admin: {\n      main: '#37b34a',\n    },\n    error: {\n      main: '#eb008b',\n    },\n    warning: {\n      main: '#eb008b',\n    },\n    info: {\n      main: '#faaf40',\n    },\n    success: {\n      main: '#37b34a',\n    },\n  }\n});\n\nconst App = () => {\n\n  console.log(routes)\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Router>\n       <div>\n          <RedirectFromState />\n          <Switch>\n            <AuthRoute type=\"guest\" exact path={routes.login} component={Login} />\n            <Route\n              exact\n              path=\"/\"\n              render={() => {return ( <Redirect to={routes.instruments.all} />)}}\n            />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.map.show} component={InstrumentMap} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.show} component={InstrumentBuild} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.show} component={InstrumentView} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.all} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.show} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.new} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.all} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.show} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.new} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.all} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.show} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.new} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.all} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.show} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.new} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.constructs.show} component={InstrumentConstructBuild} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.all} component={Instruments} />\n            <AuthRoute type=\"private\" exact path={routes.datasets.all} component={Datasets} />\n            <AuthRoute type=\"private\" exact path={'/datasets/:dataset_id'} component={DatasetView} />\n            <AuthRoute type=\"private\" exact path={routes.admin.datasets.all} component={AdminDatasets} />\n            <AuthRoute type=\"private\" exact path={routes.admin.import} component={AdminImport} />\n            <AuthRoute type=\"private\" exact path={routes.admin.imports.all} component={AdminImports} />\n            <AuthRoute type=\"private\" exact path={routes.admin.imports.show} component={AdminImportView} />\n            <AuthRoute type=\"private\" exact path={routes.admin.instruments.all} component={AdminInstruments} />\n            <AuthRoute type=\"private\" exact path={routes.admin.instruments.importMappings} component={AdminInstrumentImportMappings} />\n            <AuthRoute type=\"private\" exact path={routes.admin.datasets.importMappings} component={AdminDatasetImportMappings} />\n            <AuthRoute type=\"guest\" component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    </MuiThemeProvider>\n  )\n}\n\nexport default App\n","import { combineReducers } from \"redux\";\nimport { get } from 'lodash'\n\nconst serializeSearchesArrayToObject = (array) =>\n  array.reduce((obj, item) => {\n    obj[item.prefix] = item\n   return obj\n  }, {})\n\nconst serializeArrayToObject = (array) =>\n  array.reduce((obj, item) => {\n    obj[item.id] = item\n   return obj\n  }, {})\n\nconst auth = (state = { isAuthUser: !!window.localStorage.getItem(\"jwt\") }, action) => {\n\n  switch (action.type) {\n\n    case 'LOGIN':\n      window.localStorage.setItem('jwt', action.payload.jwt);\n      return { isAuthUser: true }\n    case 'LOGOUT':\n      window.localStorage.removeItem('jwt');\n      return { isAuthUser: false }\n    default:\n      return state\n  }\n}\n\nconst instruments = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENTS':\n      return serializeSearchesArrayToObject(action.payload.instruments)\n    case 'LOAD_INSTRUMENT':\n      return {...state, ...{[action.payload.instrument.prefix]: action.payload.instrument}}\n    default:\n      return state\n  }\n}\n\nconst imports = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_ADMIN_IMPORTS':\n      return serializeArrayToObject(action.payload.imports)\n    case 'LOAD_ADMIN_IMPORT':\n      return {...state, ...{[action.payload.import.id]: action.payload.import}}\n    default:\n      return state\n  }\n}\n\nconst datasets = (state = [], action) => {\n  switch (action.type) {\n    case 'LOAD_DATASETS':\n      return serializeArrayToObject(action.payload.datasets)\n    case 'LOAD_DATASET':\n      return {...state, ...{[action.payload.dataset.id]: action.payload.dataset}}\n    default:\n      return state\n  }\n}\n\nconst instrumentStats = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_STATS':\n      return {...state, ...{[action.payload.instrumentId]: action.payload.stats}}\n    default:\n      return state\n  }\n}\n\nconst cc_sequences = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_SEQUENCES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.sequences)}}\n    case 'LOAD_INSTRUMENT_SEQUENCE':\n      var instrumentSequences = state[action.payload.instrumentId]\n      instrumentSequences[action.payload.sequence.id] = action.payload.sequence\n      return {...state, ...{[action.payload.instrumentId]: instrumentSequences}}\n    default:\n      return state\n  }\n}\n\nconst cc_statements = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_STATEMENTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.statements)}}\n    case 'LOAD_INSTRUMENT_STATEMENT':\n      var instrumentStatements = state[action.payload.instrumentId]\n      instrumentStatements[action.payload.statement.id] = action.payload.statement\n      return {...state, ...{[action.payload.instrumentId]: instrumentStatements}}\n    default:\n      return state\n  }\n}\n\nconst cc_conditions = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CONDITIONS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.conditions)}}\n    case 'LOAD_INSTRUMENT_CONDITION':\n      var instrumentConditions = state[action.payload.instrumentId]\n      instrumentConditions[action.payload.condition.id] = action.payload.condition\n      return {...state, ...{[action.payload.instrumentId]: instrumentConditions}}\n    default:\n      return state\n  }\n}\n\n\nconst cc_loops = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_LOOPS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.loops)}}\n    case 'LOAD_INSTRUMENT_LOOP':\n      var instrumentLoops = state[action.payload.instrumentId]\n      instrumentLoops[action.payload.loop.id] = action.payload.loop\n      return {...state, ...{[action.payload.instrumentId]: instrumentLoops}}\n    default:\n      return state\n  }\n}\n\nconst response_units = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_UNITS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseUnits)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_UNIT':\n      var instrumentResponseUnits = state[action.payload.instrumentId]\n      instrumentResponseUnits[action.payload.responseUnit.id] = action.payload.responseUnit\n      return {...state, ...{[action.payload.instrumentId]: instrumentResponseUnits}}\n    default:\n      return state\n  }\n}\n\nconst cc_questions = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTIONS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION':\n      var instrumentQuestions = state[action.payload.instrumentId]\n      instrumentQuestions[action.payload.question.id] = action.payload.question\n      return {...state, ...{[action.payload.instrumentId]: instrumentQuestions}}\n    default:\n      return state\n  }\n}\n\nconst questionItems = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTION_ITEMS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION_ITEM':\n      var questionItems = get(state, action.payload.instrumentId, {})\n      const revisedQuestionItems = {...questionItems, ...{[action.payload.questionItem.id]: action.payload.questionItem}}\n      return {...state, ...{[action.payload.instrumentId]: revisedQuestionItems}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'QuestionItem'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst questionGrids = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTION_GRIDS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION_GRID':\n      var questionGrids = get(state, action.payload.instrumentId, {})\n      const revisedQuestionGrids = {...questionGrids, ...{[action.payload.questionGrid.id]: action.payload.questionGrid}}\n      return {...state, ...{[action.payload.instrumentId]: revisedQuestionGrids}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'QuestionGrid'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst variables = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_VARIABLES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.variables)}}\n    default:\n      return state\n  }\n}\n\nconst datasetVariables = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_DATASET_VARIABLES':\n      return {...state, ...{[action.payload.datasetId]: serializeArrayToObject(action.payload.variables)}}\n    case 'LOAD_DATASET_VARIABLE':\n      var variables = get(state, action.payload.datasetId, {})\n      const revisedVariables = {...variables, ...{[action.payload.variable.id]: action.payload.variable}}\n      return {...state, ...{[action.payload.datasetId]: revisedVariables}}\n    default:\n      return state\n  }\n}\n\nconst datasetImportMappings = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_DATASET_IMPORT_MAPPINGS':\n      return {...state, ...{[action.payload.id]: serializeArrayToObject(action.payload.importMappings)}}\n    case 'LOAD_DATASET_IMPORT_MAPPING':\n      var importMappings = get(state, action.payload.id, {})\n      const revisedImportMappings = {...importMappings, ...{[action.payload.importMapping.id]: action.payload.importMapping}}\n      return {...state, ...{[action.payload.datasetId]: revisedImportMappings}}\n    default:\n      return state\n  }\n}\n\nconst instrumentImportMappings = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_IMPORT_MAPPINGS':\n      return {...state, ...{[action.payload.id]: serializeArrayToObject(action.payload.importMappings)}}\n    case 'LOAD_INSTRUMENT_IMPORT_MAPPING':\n      var importMappings = get(state, action.payload.id, {})\n      const revisedImportMappings = {...importMappings, ...{[action.payload.importMapping.id]: action.payload.importMapping}}\n      return {...state, ...{[action.payload.datasetId]: revisedImportMappings}}\n    default:\n      return state\n  }\n}\n\nconst codeLists = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CODE_LISTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.codeLists)}}\n    case 'LOAD_INSTRUMENT_CODE_LIST':\n      var codeLists = get(state, action.payload.instrumentId, {})\n      const revisedCodeLists = {...codeLists, ...{[action.payload.codeList.id]: action.payload.codeList}}\n      return {...state, ...{[action.payload.instrumentId]: revisedCodeLists}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'CodeList'){\n        var codeLists = get(state, action.payload.instrumentId, {})\n        delete codeLists[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: codeLists}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainNumerics = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERICS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainNumerics)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERIC':\n      var responseDomainNumerics = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainNumerics, ...{[action.payload.responseDomainNumeric.id]: action.payload.responseDomainNumeric}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainNumeric'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainTexts = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainTexts)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXT':\n      var responseDomainTexts = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainTexts, ...{[action.payload.responseDomainText.id]: action.payload.responseDomainText}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainText'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainDatetimes = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIMES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainDatetimes)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIME':\n      var responseDomainDatetimes = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainDatetimes, ...{[action.payload.responseDomainDatetime.id]: action.payload.responseDomainDatetime}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainDatetime'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst categories = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CATEGORIES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.categories)}}\n    default:\n      return state\n  }\n}\n\nconst topics = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_TOPICS':\n      return {...state, ...serializeArrayToObject(action.payload.topics)}\n    default:\n      return state\n  }\n}\n\nconst statuses = (state = {}, action) => {\n\n  var key;\n\n  switch (action.type) {\n    case 'SAVING':\n      key = action.payload.type + ':' + action.payload.id\n      return {...state, ...{[key]: {saving: true}}}\n    case 'SAVED':\n      key = action.payload.type + ':' + action.payload.id\n      return {...state, ...{[key]: {saved: true}}}\n    case 'ERROR':\n      key = action.payload.type + ':' + action.payload.id\n      if(typeof action.payload.error === 'object' && action.payload.error !== null){\n        return {...state, ...{[key]: {error: true, errors: action.payload.error, errorMessage: ''}}}\n      }else{\n        return {...state, ...{[key]: {error: true, errorMessage: action.payload.error}}}\n      }\n    default:\n      return state\n  }\n}\n\nconst common = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'REDIRECT':\n      return {...state, ...{redirect: action.payload.to}}\n    case 'REDIRECT_CLEAR':\n      return {...state, ...{redirect: undefined}}\n    default:\n      return state\n  }\n}\n\n\nconst appReducer = combineReducers({\n    common,\n    auth,\n    datasets,\n    instruments,\n    imports,\n    instrumentStats,\n    cc_sequences,\n    cc_statements,\n    cc_conditions,\n    cc_loops,\n    cc_questions,\n    response_units,\n    questionItems,\n    questionGrids,\n    categories,\n    codeLists,\n    responseDomainNumerics,\n    responseDomainTexts,\n    responseDomainDatetimes,\n    datasetVariables,\n    variables,\n    statuses,\n    topics,\n    datasetImportMappings,\n    instrumentImportMappings,\n})\n\nexport default appReducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport reducers from \"./../reducers\";\nimport thunk from \"redux-thunk\"\n\nexport default createStore(reducers, applyMiddleware(thunk));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport Store from './components/Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}