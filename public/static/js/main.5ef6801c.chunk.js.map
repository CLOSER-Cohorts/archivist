{"version":3,"sources":["routes.js","AuthRoute.js","actions/index.js","pages/Login.js","components/BreadcrumbBar.js","support/ObjectColour.js","components/Dashboard.js","components/ObjectStatusBar.js","components/FileField.js","components/AdminInstrumentForm.js","components/AdminDatasetForm.js","pages/AdminImport.js","pages/AdminImportView.js","pages/AdminImports.js","components/AdminImportMappingsTable.js","components/AdminImportMappingsForm.js","components/Loader.js","pages/AdminInstrumentImportMappings.js","pages/AdminDatasetImportMappings.js","components/DataTable.js","pages/AdminInstruments.js","pages/AdminDatasets.js","pages/Instruments.js","pages/Datasets.js","pages/DatasetView.js","components/InstrumentHeading.js","support/HumanizeObjectType.js","pages/InstrumentView.js","support/ObjectCheckForInitialValues.js","components/InstrumentForm.js","pages/InstrumentNew.js","pages/InstrumentEdit.js","pages/InstrumentMap.js","pages/InstrumentBuild.js","pages/InstrumentCcConditions.js","pages/InstrumentCcLoops.js","pages/InstrumentCcQuestions.js","pages/InstrumentCcSequences.js","pages/InstrumentCcStatements.js","components/MoveConstructSelect.js","components/DeleteObjectButton.js","components/CcConditionForm.js","components/CcQuestionForm.js","components/CcStatementForm.js","components/CcSequenceForm.js","components/CcLoopForm.js","pages/InstrumentConstructBuild.js","components/CodeListForm.js","components/CreateNewBuildObjectButtons.js","pages/InstrumentBuildCodeLists.js","components/QuestionItemForm.js","pages/InstrumentBuildQuestionItems.js","components/QuestionGridForm.js","pages/InstrumentBuildQuestionGrids.js","components/ResponseDomainNumericForm.js","components/ResponseDomainTextForm.js","components/ResponseDomainDatetimeForm.js","pages/InstrumentBuildResponseDomains.js","pages/NoMatch.js","components/RedirectFromState.js","App.js","reducers/index.js","components/Store.js","serviceWorker.js","index.js"],"names":["login","datasets","include","all","admin","import","imports","show","instruments","importMappings","new","instrument","edit","map","build","ccConditions","ccLoops","ccQuestions","ccSequences","ccStatements","constructs","codeLists","questionItems","questionGrids","responseDomains","AuthRoute","props","isAuthUser","useSelector","state","auth","type","to","url","routes","api_host","process","api_headers","window","localStorage","getItem","axios","interceptors","response","use","error","status","Promise","reject","removeItem","location","InstrumentTree","instrumentId","flatTree","dispatch","payload","Dataset","request","get","headers","then","res","datasetsFetchSuccess","data","catch","err","fetchFailure","message","id","datasetFetchSuccess","AdminInstrument","values","formData","FormData","append","files","post","savingItem","savedItem","console","log","AdminDataset","AdminImportMapping","imp","file","importsFetchSuccess","AdminImport","importFetchSuccess","Instrument","put","instrumentFetchSuccess","saveError","error_sentence","redirectTo","instrument_id","prefix","instrumentsFetchSuccess","instrumentStatsFetchSuccess","updates","Categories","categoriesFetchSuccess","categories","CodeLists","codeListsFetchSuccess","update","codeListId","codeListFetchSuccess","create","delete","objectDeleteSuccess","codeList","CcSequences","ccSequencesFetchSuccess","ccSequenceId","ccSequenceFetchSuccess","onSuccess","object","onDelete","sequences","sequence","CcStatements","ccStatementsFetchSuccess","ccStatementId","ccStatementFetchSuccess","statements","statement","CcLoops","ccLoopsFetchSuccess","ccLoopId","ccLoopFetchSuccess","loops","loop","ResponseUnits","responseUnitsFetchSuccess","responseUnits","CcConditions","ccConditionsFetchSuccess","ccConditionId","ccConditionFetchSuccess","conditions","condition","CcQuestions","ccQuestionsFetchSuccess","ccQuestionId","ccQuestionFetchSuccess","topic","set","topicId","variables","add","variableNames","remove","variableId","questions","question","QuestionItems","questionItemsFetchSuccess","questionItemId","questionItemFetchSuccess","questionItem","QuestionGrids","questionGridsFetchSuccess","questionGridId","questionGridFetchSuccess","questionGrid","ResponseDomainNumerics","responseDomainNumericsFetchSuccess","responseDomainNumericId","responseDomainNumericFetchSuccess","responseDomainType","responseDomainId","responseDomainNumerics","responseDomainNumeric","ResponseDomainCodes","responseDomainCodesFetchSuccess","responseDomainCodes","ResponseDomainTexts","responseDomainTextsFetchSuccess","responseDomainTextId","responseDomainTextFetchSuccess","responseDomainTexts","responseDomainText","ResponseDomainDatetimes","responseDomainDatetimesFetchSuccess","responseDomainDatetimeId","responseDomainDatetimeFetchSuccess","responseDomainDatetimes","responseDomainDatetime","Variables","variablesFetchSuccess","DatasetVariable","datasetId","datasetVariablesFetchSuccess","datasetVariableId","sources","datasetVariableFetchSuccess","source","other","class","x","y","variable","Topics","topicsFetchSuccess","topics","dataset","importObj","stats","objectType","authUserSuccess","authUserFailure","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","useFormField","initialValue","React","useState","value","setValue","onChange","useCallback","e","target","Login","classes","emailField","passwordField","useDispatch","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","onSubmit","preventDefault","email","password","authUser","TextField","required","fullWidth","label","name","autoComplete","autoFocus","Button","color","BreadcrumbBarItem","text","link","isEmpty","root","padding","BreadcrumbBar","useLocation","buildDatasetBreadcrumbs","buildAdminBreadcrumbs","buildInstrumentBreadcrumbs","crumbs","push","params","capturingRegex","found","pathname","match","RegExp","paramsFromPath","subtype","breadcrumbs","buildBreadcrumbs","Paper","Breadcrumbs","separator","fontSize","aria-label","breadcrumb","ObjectColour","Copyright","align","Date","getFullYear","nested","paddingLeft","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","fixedHeight","MainListItems","open","setOpen","ListItem","button","ListItemIcon","ListItemText","primary","onClick","style","Collapse","in","timeout","unmountOnExit","List","disablePadding","Dashboard","charSet","AppBar","clsx","Toolbar","IconButton","edge","noWrap","Drawer","src","alt","Divider","maxHeight","Grid","item","xs","children","Box","pt","ObjectStatus","statuses","key","ObjectStatusBar","isNil","saved","Alert","severity","AlertTitle","errorMessage","FileField","input","multiple","table","minWidth","boxShadow","formFields","size","field","AdminInstrumentForm","initialValues","validate","errors","render","handleSubmit","mutators","pop","pristine","submitting","idx","disabled","AdminDatasetForm","useEffect","AdminImportView","importId","logs","rows","Object","filename","created_at","Table","TableHead","TableRow","TableCell","TableBody","row","original_text","matches","outcome","AdminImports","page","setPage","rowsPerPage","setRowsPerPage","sort","reverse","slice","import_type","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","length","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","SelectProps","inputProps","native","AdminImportMappingsTable","ButtonGroup","AdminImportMappingsForm","hint","types","Array","from","JSON","stringify","Loader","m","shuffle","AdminInstrumentImportMappings","instrumentImportMappings","dataLoaded","setDataLoaded","AdminDatasetImportMappings","datasetImportMappings","DataTable","actions","fetch","stateKey","searchKey","rowRenderer","parentStateKey","search","setSearch","filteredValues","setFilteredValues","filter","toLowerCase","includes","placeholder","newValue","onRequestSearch","onCancelSearch","header","cell","AdminInstruments","study","AdminDatasets","Instruments","ccs","qvs","Datasets","dataset_id","dvs","DatasetView","datasetVariables","SourcesList","sourceOptions","opt","difference","handleChange","reason","newSources","oldSources","Autocomplete","options","getOptionLabel","option","filterSelectedOptions","renderInput","getOptionSelected","var_type","InstrumentHeading","mode","slug","HumanizeObjectType","control","ObjectFinder","cc_sequences","cc_statements","cc_conditions","cc_questions","allQuestionItems","allQuestionGrids","toString","question_type","question_id","constructLabelClasses","CcCondition","background","CcStatement","CcQuestion","ConstructLabel","Chip","QuestionItemListItem","literal","rds","ResponseDomains","responseDomainClasses","listStyleType","rd","codes","maxlen","code","StatementListItem","ConditionItem","handleClick","aria-labelledby","logic","child","StyledListItem","SequenceItem","withStyles","borderRadius","border","textTransform","InstrumentView","undefined","find","element","top","ObjectCheckForInitialValues","initialValuesWithEmptyFields","keys","reduce","acc","isArray","merge","InstrumentForm","path","reset","InstrumentNew","InstrumentEdit","resolvedTopic","resolvedTopicId","saving","deleteIcon","VariableList","TopicList","textAlign","FormControl","formControl","InputLabel","htmlFor","Select","level","defaultValue","allVariables","variableOptions","newVariables","join","oldVariables","InstrumentMap","InstrumentBuild","instrumentStats","code_lists","response_domain_datetimes","response_domain_numerics","response_domain_texts","question_items","question_grids","instructions","cc_loops","StatCount","ListItemSecondaryAction","dense","InstrumentCcConditions","InstrumentCcLoops","start_val","end_val","loop_while","InstrumentCcQuestions","base_label","response_unit_label","InstrumentCcSequences","InstrumentCcStatements","DeleteObjectButton","action","confirm","CcConditionForm","ccCondition","newObject","node","arrayMutators","formControlProps","MenuItem","CcQuestionForm","ccQuestion","allResponseUnits","response_units","questionOptions","setQuestionOptions","error_key","previous","rdOptions","intervieweeOptions","CcStatementForm","ccStatement","CcSequenceForm","ccSequence","CcLoopForm","ccLoop","loop_var","TreeNode","expanded","fchildren","trueAndFalse","conditionId","Tree","topSequence","onNodeSelect","treeData","setTreeData","selectedNode","setSelectedNode","searchString","setSearchString","searchFocusIndex","setSearchFocusIndex","searchFoundCount","setSearchFoundCount","getNodeKey","treeIndex","canHaveChildren","toggleExpand","toggleExpandedForAll","getFlatDataFromTree","ignoreCollapsed","el","reorderConstructs","parent","branch","indexOf","orderArray","generateButtons","buttons","addNodeUnderParent","parentKey","expandParent","newNode","stopPropagation","divider","startIcon","newTreeData","canNodeHaveChildren","canDrop","nextParent","prevPath","nextPath","canDrag","searchMethod","searchQuery","searchFocusOffset","searchFinishCallback","generateNodeProps","callback","changeNodeAtPath","updateNode","deleteCallback","removeNodeAtPath","deleteNode","side","right","ConstructForm","NewConstructQuestion","InstrumentConstructBuild","visible","multiline","FormField","CodeListForm","TableContainer","fields","index","freesolo","category_id","cursor","used_by","CreateNewBuildObjectButtons","objectTypes","history","useHistory","ObjectTypeLookup","InstrumentBuildCodeLists","selectedCodeList","CodeListItem","handleCodeListSelection","QuestionItemForm","InstrumentBuildQuestionItems","selectedQuestion","QuestionItem","handleQuestionSelection","QuestionGridForm","cl","cols","order","InstrumentBuildQuestionGrids","setquestionGridId","QuestionGrid","ResponseDomainNumericForm","responseDomain","ResponseDomainTextForm","ResponseDomainDatetimeForm","InstrumentBuildResponseDomains","selectedResponseDomain","ResponseDomainItem","handleResponseDomainSelection","responseDomainForm","NoMatch","RedirectFromState","redirect","common","createMuiTheme","MuiButtonBase","disableRipple","warning","info","success","App","exact","serializeArrayToObject","array","obj","appReducer","combineReducers","setItem","jwt","instrumentTrees","instrumentSequences","instrumentStatements","instrumentConditions","instrumentLoops","instrumentQuestions","instrumentResponseUnits","responseUnit","revisedQuestionItems","objects","revisedQuestionGrids","revisedCodeLists","revisedResponseDomains","revisedVariables","revisedImportMappings","importMapping","createStore","reducers","applyMiddleware","thunk","Boolean","hostname","ReactDOM","store","Store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ef6801c.chunk.js","sourcesContent":["import { include } from 'named-urls'\n\nexport default {\n    login : '/login',\n    datasets: include('/datasets', {\n      all: ''\n    }),\n    admin: include('/admin/', {\n      import: 'import',\n      imports: include('imports/', {\n        all: '',\n        show: ':importId'\n      }),\n      instruments: include('instruments/', {\n        all: '',\n        importMappings: ':instrumentId/imports'\n      }),\n      datasets: include('datasets/', {\n        all: '',\n        importMappings: ':datasetId/imports'\n      }),\n    }),\n    instruments: include('/instruments', {\n      all: '',\n      new: 'new',\n      instrument: include(':instrument_id/', {\n        show: '',\n        edit: 'edit',\n         map: include('map/', {\n            show: ''\n        }),\n        build: include('build/', {\n            show: '',\n            ccConditions: 'ccConditions',\n            ccLoops: 'ccLoops',\n            ccQuestions: 'ccQuestions',\n            ccSequences: 'ccSequences',\n            ccStatements: 'ccStatements',\n            constructs: include('constructs/', {\n                show: ''\n            }),\n            codeLists: include('code_lists/', {\n              all: '',\n              show: ':codeListId',\n              new: 'new'\n            }),\n            questionItems: include('question_items/', {\n              all: '',\n              show: ':questionItemId',\n              new: 'new'\n            }),\n            questionGrids: include('question_grids/', {\n              all: '',\n              show: ':questionGridId',\n              new: 'new'\n            }),\n            responseDomains: include('response_domains/', {\n              all: '',\n              new: 'new',\n              show: ':responseDomainType/:responseDomainId',\n            })\n        })\n      })\n   })\n}\n","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { reverse as url } from 'named-urls'\n\nimport routes from './routes'\n\nconst AuthRoute = props => {\n\n  const isAuthUser = useSelector(state => state.auth.isAuthUser);\n\n  const { type } = props;\n\n  if (type === \"guest\" && isAuthUser) {\n    return <Redirect to={url(routes.instruments.all)} />\n  }else if (type === \"private\" && !isAuthUser){\n    return <Redirect to={url(routes.login)} />\n  };\n\n  return <Route {...props} />;\n};\n\nexport default AuthRoute;\n","import axios from \"axios\";\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst api_host = process.env.REACT_APP_API_HOST\n\nconst api_headers = () => ({\n          'Authorization': 'Bearer ' + window.localStorage.getItem('jwt'),\n          'Content-Type': 'application/json'\n        })\n\naxios.interceptors.response.use(function (response) {\n    return response;\n}, function (error) {\n    if (401 === error.response.status) {\n      window.localStorage.removeItem('jwt');\n      window.location = '/login'\n    } else {\n        return Promise.reject(error);\n    }\n});\n\n// Auth\nexport const authUser = (email, password) => {\n  const request = axios.post(api_host + '/users/sign_in.json', {\n      \"user\": {\n              \"email\": email,\n              \"password\": password\n      }\n    })\n  return (dispatch) => {\n      return request.then(res => {\n        dispatch(authUserSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(authUserFailure(err.message));\n      });\n  };\n};\n\nexport const InstrumentTree = {\n  create: (instrumentId, flatTree) => {\n    return (dispatch) => {\n        dispatch({type: 'LOAD_INSTRUMENT_TREE', payload: { instrumentId: instrumentId, flatTree: flatTree }});\n    };\n  }\n}\n\nexport const Dataset = {\n  all: () => {\n    const request = axios.get(api_host + '/datasets.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(datasetsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  show: (id) => {\n    const request = axios.get(api_host + '/datasets/' + id + '.json?questions=true',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(datasetFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nexport const AdminInstrument = {\n  create: (values) => {\n    let formData = new FormData();\n\n    formData.append(\"files[]\", values.files[0]);\n    const request = axios.post(api_host + '/admin/import/instruments/', formData, {\n        headers: {...api_headers(), ...{'Content-Type': 'multipart/form-data'}}\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'AdminInstrument'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'AdminInstrument'));\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  },\n}\n\nexport const AdminDataset = {\n  create: (values) => {\n    let formData = new FormData();\n\n    formData.append(\"files[]\", values.files[0]);\n    const request = axios.post(api_host + '/admin/import/datasets/', formData, {\n        headers: {...api_headers(), ...{'Content-Type': 'multipart/form-data'}}\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'AdminDataset'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'AdminDataset'));\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  },\n}\n\nexport const AdminImportMapping = {\n  create: (type, id, values) => {\n    let formData = new FormData();\n\n    values.imports.map((imp) => {\n      formData.append('imports[0][file]', imp.file)\n    })\n    const request = axios.post(api_host + '/' + type + '/' + id + '/imports.json', formData, {\n        headers: {...api_headers(), ...{'Content-Type': 'multipart/form-data'}}\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'AdminImportMappings'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'AdminImportMappings'));\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  },\n  all: (type, id) => {\n    const request = axios.get(api_host + '/' + type + '/' + id + '/imports.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(importsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n}\n\nexport const AdminImport = {\n  all: () => {\n    const request = axios.get(api_host + '/imports.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(importsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  show: (id) => {\n    const request = axios.get(api_host + '/imports/' + id + '.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(importFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n}\n\nexport const Instrument = {\n  update: (instrumentId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(instrumentId, 'Instrument'));\n        return request.then(res => {\n          dispatch(savedItem(instrumentId, 'Instrument'));\n          dispatch(instrumentFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(instrumentId, 'Instrument', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (values) => {\n    const request = axios.post(api_host + '/instruments.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'Instrument'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'Instrument'));\n          dispatch(instrumentFetchSuccess(res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.show, { instrument_id: res.data.prefix })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'Instrument', err.response.data.error_sentence));\n        });\n    };\n  },\n  import: (values) => {\n    const request = axios.post(api_host + '/admin/import/instruments/', { updates: values }, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          console.log('ok')\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  },\n  all: () => {\n    const request = axios.get(api_host + '/instruments.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  show: (id) => {\n    const request = axios.get(api_host + '/instruments/' + id + '.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  stats: (id) => {\n    const request = axios.get(api_host + '/instruments/' + id + '/stats.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentStatsFetchSuccess(id, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  reorderConstructs: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/reorder_ccs.json', { updates: values }, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          console.log('ok')\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  }\n}\n\nexport const Categories = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/categories.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(categoriesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst categoriesFetchSuccess = (instrumentId, categories) => ({\n  type: 'LOAD_INSTRUMENT_CATEGORIES',\n  payload: {\n    instrumentId: instrumentId,\n    categories: categories\n  }\n});\n\nexport const CodeLists = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/code_lists.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(codeListsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, codeListId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/code_lists/' + codeListId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(codeListId, 'CodeList'));\n        return request.then(res => {\n          dispatch(savedItem(codeListId, 'CodeList'));\n          dispatch(codeListFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(codeListId, 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/code_lists.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CodeList'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CodeList'));\n          dispatch(codeListFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, codeListId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/code_lists/' + codeListId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'CodeList', codeListId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(savedItem(codeListId, 'CodeList'));\n          dispatch(saveError(codeListId, 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst codeListsFetchSuccess = (instrumentId, codeLists) => ({\n  type: 'LOAD_INSTRUMENT_CODE_LISTS',\n  payload: {\n    instrumentId: instrumentId,\n    codeLists: codeLists\n  }\n});\n\nconst codeListFetchSuccess = (instrumentId, codeList) => ({\n  type: 'LOAD_INSTRUMENT_CODE_LIST',\n  payload: {\n    instrumentId: instrumentId,\n    codeList: codeList\n  }\n});\n\nexport const CcSequences = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_sequences.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccSequencesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccSequenceId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_sequences/' + ccSequenceId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccSequenceId, 'CcSequence'));\n        return request.then(res => {\n          dispatch(savedItem(ccSequenceId, 'CcSequence'));\n          dispatch(ccSequenceFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccSequenceId, 'CcSequence', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_sequences.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcSequence'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcSequence'));\n          dispatch(ccSequenceFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcSequence', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccSequenceId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_sequences/' + ccSequenceId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccSequenceId, 'CcSequence'));\n        return request.then(res => {\n          dispatch(savedItem(ccSequenceId, 'CcSequence'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcSequence', ccSequenceId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(ccSequenceId, 'CcSequence', err.response.data));\n        });\n    };\n  },\n}\n\nconst ccSequencesFetchSuccess = (instrumentId, sequences) => ({\n  type: 'LOAD_INSTRUMENT_SEQUENCES',\n  payload: {\n    instrumentId: instrumentId,\n    sequences: sequences\n  }\n});\n\nconst ccSequenceFetchSuccess = (instrumentId, sequence) => ({\n  type: 'LOAD_INSTRUMENT_SEQUENCE',\n  payload: {\n    instrumentId: instrumentId,\n    sequence: sequence\n  }\n});\n\nexport const CcStatements = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_statements.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccStatementsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccStatementId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_statements/' + ccStatementId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccStatementId, 'CcStatement'));\n        return request.then(res => {\n          dispatch(savedItem(ccStatementId, 'CcStatement'));\n          dispatch(ccStatementFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccStatementId, 'CcStatement', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_statements.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcStatement'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcStatement'));\n          dispatch(ccStatementFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcStatement', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccStatementId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_statements/' + ccStatementId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccStatementId, 'CcStatement'));\n        return request.then(res => {\n          dispatch(savedItem(ccStatementId, 'CcStatement'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcStatement', ccStatementId));\n          onDelete()\n        })\n        .catch(err => {\n          dispatch(saveError(ccStatementId, 'CcStatement', err.response.data));\n        });\n    };\n  },\n}\n\nconst ccStatementsFetchSuccess = (instrumentId, statements) => ({\n  type: 'LOAD_INSTRUMENT_STATEMENTS',\n  payload: {\n    instrumentId: instrumentId,\n    statements: statements\n  }\n});\n\nconst ccStatementFetchSuccess = (instrumentId, statement) => ({\n  type: 'LOAD_INSTRUMENT_STATEMENT',\n  payload: {\n    instrumentId: instrumentId,\n    statement: statement\n  }\n});\n\nexport const CcLoops = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_loops.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccLoopsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccLoopId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_loops/' + ccLoopId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccLoopId, 'CcLoop'));\n        return request.then(res => {\n          dispatch(savedItem(ccLoopId, 'CcLoop'));\n          dispatch(ccLoopFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccLoopId, 'CcLoop', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_loops.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcLoop'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcLoop'));\n          dispatch(ccLoopFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcLoop', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, ccLoopId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_loops/' + ccLoopId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccLoopId, 'CcLoop'));\n        return request.then(res => {\n          dispatch(savedItem(ccLoopId, 'CcLoop'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcLoop', ccLoopId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(ccLoopId, 'CcLoop', err.response.data.error_sentence));\n        });\n    };\n  },\n}\n\nconst ccLoopsFetchSuccess = (instrumentId, loops) => ({\n  type: 'LOAD_INSTRUMENT_LOOPS',\n  payload: {\n    instrumentId: instrumentId,\n    loops: loops\n  }\n});\n\nconst ccLoopFetchSuccess = (instrumentId, loop) => ({\n  type: 'LOAD_INSTRUMENT_LOOP',\n  payload: {\n    instrumentId: instrumentId,\n    loop: loop\n  }\n});\n\nexport const ResponseUnits = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_units.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseUnitsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseUnitId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_units/' + responseUnitId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseUnitFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseUnitId, 'ResponseUnit', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_units.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseUnitFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseUnit', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseUnitId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_units/' + responseUnitId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseUnit', responseUnitId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(responseUnitId, 'ResponseUnit', err.response.data.error_sentence));\n        });\n    };\n  },\n}\n\nconst responseUnitsFetchSuccess = (instrumentId, responseUnits) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_UNITS',\n  payload: {\n    instrumentId: instrumentId,\n    responseUnits: responseUnits\n  }\n});\n\nconst responseUnitFetchSuccess = (instrumentId, responseUnit) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_UNITS',\n  payload: {\n    instrumentId: instrumentId,\n    responseUnit: responseUnit\n  }\n});\n\nexport const CcConditions = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_conditions.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccConditionsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccConditionId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_conditions/' + ccConditionId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccConditionId, 'CcCondition'));\n        return request.then(res => {\n          dispatch(savedItem(ccConditionId, 'CcCondition'));\n          dispatch(ccConditionFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccConditionId, 'CcCondition', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_conditions.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcCondition'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcCondition'));\n          dispatch(ccConditionFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcCondition', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccConditionId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_conditions/' + ccConditionId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccConditionId, 'CcCondition'));\n        return request.then(res => {\n          dispatch(savedItem(ccConditionId, 'CcCondition'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcCondition', ccConditionId));\n          onDelete()\n        })\n        .catch(err => {\n          dispatch(saveError(ccConditionId, 'CcCondition', err.response.data));\n        });\n    };\n  },\n}\n\nconst ccConditionsFetchSuccess = (instrumentId, conditions) => ({\n  type: 'LOAD_INSTRUMENT_CONDITIONS',\n  payload: {\n    instrumentId: instrumentId,\n    conditions: conditions\n  }\n});\n\nconst ccConditionFetchSuccess = (instrumentId, condition) => ({\n  type: 'LOAD_INSTRUMENT_CONDITION',\n  payload: {\n    instrumentId: instrumentId,\n    condition: condition\n  }\n});\n\nexport const CcQuestions = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_questions.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccQuestionsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccQuestionId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n        return request.then(res => {\n          dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n          dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcQuestion'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcQuestion'));\n          dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcQuestion', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccQuestionId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n        return request.then(res => {\n          dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcQuestion', ccQuestionId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data));\n        });\n    };\n  },\n  topic: {\n    set: (instrumentId, ccQuestionId, topicId) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/set_topic.json',\n      {\n        \"topic_id\": topicId\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data.message));\n          });\n      };\n    }\n  },\n  variables: {\n    add: (instrumentId, ccQuestionId, variableNames) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/add_variables.json',\n      {\n        \"variable_names\": variableNames\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data.message));\n          });\n      };\n    },\n    remove: (instrumentId, ccQuestionId, variableId) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/remove_variable.json',\n      {\n        \"variable_id\": variableId\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.message));\n          });\n      };\n    }\n  }\n}\n\nconst savingItem = (id, type) => ({\n  type: 'SAVING',\n  payload: {\n    id: id,\n    type: type\n  }\n});\n\nconst savedItem = (id, type) => ({\n  type: 'SAVED',\n  payload: {\n    id: id,\n    type: type\n  }\n});\n\nconst ccQuestionsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTIONS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst ccQuestionFetchSuccess = (instrumentId, question) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION',\n  payload: {\n    instrumentId: instrumentId,\n    question: question\n  }\n});\n\nexport const QuestionItems = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/question_items.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionItemsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, questionItemId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/question_items/' + questionItemId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionItemId, 'QuestionItem'));\n        return request.then(res => {\n          dispatch(savedItem(questionItemId, 'QuestionItem'));\n          dispatch(questionItemFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(questionItemId, 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/question_items.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'QuestionItem'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'QuestionItem'));\n          dispatch(questionItemFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, questionItemId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/question_items/' + questionItemId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionItemId, 'QuestionItem'));\n        return request.then(res => {\n          dispatch(savedItem(questionItemId, 'QuestionItem'));\n          dispatch(objectDeleteSuccess(instrumentId,'QuestionItem', questionItemId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(questionItemId, 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst questionItemsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_ITEMS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst questionItemFetchSuccess = (instrumentId, questionItem) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_ITEM',\n  payload: {\n    instrumentId: instrumentId,\n    questionItem: questionItem\n  }\n});\n\nexport const QuestionGrids = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/question_grids.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionGridsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, questionGridId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/question_grids/' + questionGridId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionGridId, 'QuestionGrid'));\n        return request.then(res => {\n          dispatch(savedItem(questionGridId, 'QuestionGrid'));\n          dispatch(questionGridFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(questionGridId, 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/question_grids.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'QuestionGrid'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'QuestionGrid'));\n          dispatch(questionGridFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, questionGridId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/question_grids/' + questionGridId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionGridId, 'QuestionGrid'));\n        return request.then(res => {\n          dispatch(savedItem(questionGridId, 'QuestionGrid'));\n          dispatch(objectDeleteSuccess(instrumentId,'QuestionGrid', questionGridId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(questionGridId, 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst questionGridsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_GRIDS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst questionGridFetchSuccess = (instrumentId, questionGrid) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_GRID',\n  payload: {\n    instrumentId: instrumentId,\n    questionGrid: questionGrid\n  }\n});\n\nexport const ResponseDomainNumerics = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_numerics.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainNumericsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainNumericId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_numerics/' + responseDomainNumericId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n          dispatch(responseDomainNumericFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainNumericId, 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_numerics.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'ResponseDomainNumeric'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'ResponseDomainNumeric'));\n          dispatch(responseDomainNumericFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainNumericId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_numerics/' + responseDomainNumericId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainNumeric', responseDomainNumericId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainNumericId, 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainNumericsFetchSuccess = (instrumentId, responseDomainNumerics) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERICS',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainNumerics: responseDomainNumerics\n  }\n});\n\nconst responseDomainNumericFetchSuccess = (instrumentId, responseDomainNumeric) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERIC',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainNumeric: responseDomainNumeric\n  }\n});\n\nexport const ResponseDomainCodes = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_codes.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainCodesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst responseDomainCodesFetchSuccess = (instrumentId, responseDomainCodes) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_CODES',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainCodes: responseDomainCodes\n  }\n});\n\nexport const ResponseDomainTexts = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_texts.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainTextsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainTextId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_texts/' + responseDomainTextId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainTextId, 'ResponseDomainText'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainTextId, 'ResponseDomainText'));\n          dispatch(responseDomainTextFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainTextId, 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_texts.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'ResponseDomainText'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'ResponseDomainText'));\n          dispatch(responseDomainTextFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainTextId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_texts/' + responseDomainTextId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainTextId, 'ResponseDomainText'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainTextId, 'ResponseDomainText'));\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainText', responseDomainTextId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainTextId, 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainTextsFetchSuccess = (instrumentId, responseDomainTexts) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXTS',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainTexts: responseDomainTexts\n  }\n});\n\nconst responseDomainTextFetchSuccess = (instrumentId, responseDomainText) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXT',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainText: responseDomainText\n  }\n});\n\nexport const ResponseDomainDatetimes = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainDatetimesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainDatetimeId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes/' + responseDomainDatetimeId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n          dispatch(responseDomainDatetimeFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainDatetimeId, 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'ResponseDomainDatetime'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'ResponseDomainDatetime'));\n          dispatch(responseDomainDatetimeFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainDatetimeId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes/' + responseDomainDatetimeId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainDatetime', responseDomainDatetimeId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainDatetimeId, 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainDatetimesFetchSuccess = (instrumentId, responseDomainDatetimes) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIMES',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainDatetimes: responseDomainDatetimes\n  }\n});\n\nconst responseDomainDatetimeFetchSuccess = (instrumentId, responseDomainDatetime) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIME',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainDatetime: responseDomainDatetime\n  }\n});\n\nexport const Variables = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(variablesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  add: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/add_variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(variablesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst variablesFetchSuccess = (instrumentId, variables) => ({\n  type: 'LOAD_INSTRUMENT_VARIABLES',\n  payload: {\n    instrumentId: instrumentId,\n    variables: variables\n  }\n});\n\nexport const DatasetVariable = {\n  all: (datasetId) => {\n    const request = axios.get(api_host + '/datasets/' + datasetId + '/variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(datasetVariablesFetchSuccess(datasetId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  add_source: (datasetId, datasetVariableId, sources) => {\n    const request = axios.post(api_host + '/datasets/' + datasetId + '/variables/' + datasetVariableId + '/add_sources.json',\n    {\n      sources: {\n        \"id\": sources,\n        \"x\": null,\n        \"y\": null\n      }\n    },\n    {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(datasetVariableId, 'DatasetVariable'));\n        return request.then(res => {\n          dispatch(savedItem(datasetVariableId, 'DatasetVariable'));\n          dispatch(datasetVariableFetchSuccess(datasetId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(datasetVariableId, 'DatasetVariable', err.response.data.message));\n        });\n    };\n  },\n  remove_source: (datasetId, datasetVariableId, source) => {\n    const request = axios.post(api_host + '/datasets/' + datasetId + '/variables/' + datasetVariableId + '/remove_source.json',\n    {\n      other: {\n        id: source.id,\n        class: source.class,\n        x: source.x,\n        y: source.y\n      }\n    },\n    {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(datasetVariableId, 'DatasetVariable'));\n        return request.then(res => {\n          dispatch(savedItem(datasetVariableId, 'DatasetVariable'));\n          dispatch(datasetVariableFetchSuccess(datasetId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(datasetVariableId, 'DatasetVariable', err.message));\n        });\n    };\n  }\n}\n\nconst datasetVariablesFetchSuccess = (datasetId, variables) => ({\n  type: 'LOAD_DATASET_VARIABLES',\n  payload: {\n    datasetId: datasetId,\n    variables: variables\n  }\n});\n\nconst datasetVariableFetchSuccess = (datasetId, variable) => ({\n  type: 'LOAD_DATASET_VARIABLE',\n  payload: {\n    datasetId: datasetId,\n    variable: variable\n  }\n});\n\nexport const Topics = {\n  all: () => {\n    const request = axios.get(api_host + '/topics/flattened_nest.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(topicsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst topicsFetchSuccess = (topics) => ({\n  type: 'LOAD_TOPICS',\n  payload: {\n    topics: topics\n  }\n});\n\nconst datasetsFetchSuccess = datasets => ({\n  type: 'LOAD_DATASETS',\n  payload: {\n    datasets: datasets\n  }\n});\n\nconst datasetFetchSuccess = datasets => ({\n  type: 'LOAD_DATASET',\n  payload: {\n    dataset: datasets\n  }\n});\n\nconst importsFetchSuccess = imports => ({\n  type: 'LOAD_ADMIN_IMPORTS',\n  payload: {\n    imports: imports\n  }\n});\n\nconst importFetchSuccess = importObj => ({\n  type: 'LOAD_ADMIN_IMPORT',\n  payload: {\n    import: importObj\n  }\n});\n\nconst instrumentsFetchSuccess = instruments => ({\n  type: 'LOAD_INSTRUMENTS',\n  payload: {\n    instruments: instruments\n  }\n});\n\nconst instrumentFetchSuccess = instruments => ({\n  type: 'LOAD_INSTRUMENT',\n  payload: {\n    instrument: instruments\n  }\n});\n\nconst instrumentStatsFetchSuccess = (instrumentId, stats) => ({\n  type: 'LOAD_INSTRUMENT_STATS',\n  payload: {\n    instrumentId: instrumentId,\n    stats: stats\n  }\n});\n\nconst objectDeleteSuccess = (instrumentId, objectType, id) => ({\n  type: 'DELETE_INSTRUMENT_OBJECT_TYPE',\n  payload: {\n    instrumentId: instrumentId,\n    id: id,\n    objectType: objectType\n  }\n});\n\nconst fetchFailure = error => ({\n  type: 'FETCH_FAILURE',\n  payload: {\n    error\n  }\n});\n\nconst saveError = (id, type, error) => ({\n  type: 'ERROR',\n  payload: {\n    id: id,\n    type: type,\n    error: error\n  }\n});\n\nconst authUserSuccess = auth => ({\n  type: 'LOGIN',\n  payload: {\n    ...auth\n  }\n});\n\nconst authUserFailure = error => ({\n  type: 'LOGIN_FAILURE',\n  payload: {\n    error\n  }\n});\n\nconst redirectTo = (url) => ({\n  type: 'REDIRECT',\n  payload: {\n    to: url\n  }\n})\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { authUser } from '../actions'\nimport { useDispatch } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst useFormField = (initialValue: string = \"\") => {\n  const [value, setValue] = React.useState(initialValue);\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value),\n    []\n  );\n  return { value, onChange };\n};\n\nexport default function Login() {\n  const classes = useStyles();\n\n  const emailField = useFormField();\n  const passwordField = useFormField();\n\n  const dispatch = useDispatch()\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    dispatch(authUser(emailField.value, passwordField.value));\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            {...emailField}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            {...passwordField}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { isEmpty, get } from 'lodash'\nimport routes from '../routes'\nimport { reverse as url } from 'named-urls'\nimport { useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst BreadcrumbBarItem = (props) => {\n  const {text, link} = props\n\n  if(isEmpty(link)){\n    return (\n      <Typography color=\"textPrimary\">{text}</Typography>\n    )\n  }else{\n    return (\n      <Link color=\"inherit\" to={link}>\n        {text}\n      </Link>\n    )\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    'margin-bottom': '10px',\n    padding: '15px'\n  }\n}));\n\nconst BreadcrumbBar = (props) => {\n  const {instrumentId} = props\n\n  const location = useLocation();\n\n  const buildBreadcrumbs = () => {\n    var found = location.pathname.match(new RegExp(`^\\\\/(?<topLevel>instruments|datasets|admin)`));\n    var topLevel = get(get(found, 'groups',{}),'topLevel','instruments')\n    switch (topLevel) {\n      case 'datasets':\n        return buildDatasetBreadcrumbs()\n        break\n      case 'admin':\n        return buildAdminBreadcrumbs()\n        break\n      default:\n        return buildInstrumentBreadcrumbs()\n        break\n    }\n  }\n\n  const buildDatasetBreadcrumbs = () => {\n    var crumbs = [{text: 'Datasets', link: url(routes.datasets.all)}]\n    return crumbs\n  }\n\n  const buildAdminBreadcrumbs = () => {\n    var crumbs = [{text: 'Admin', link: url(routes.admin.instruments)}]\n    return crumbs\n  }\n\n  const buildInstrumentBreadcrumbs = () => {\n    const paramsFromPath = () => {\n      const capturingRegex = `/instruments\\\\/${instrumentId}\\\\/(?<type>build|map)\\/?(?<subtype>question_grids|question_items|response_domains|code_lists|constructs)?\\/?`;\n      const found = location.pathname.match(new RegExp(capturingRegex));\n      return get(found, 'groups',{})\n    }\n\n    var crumbs = [{text: 'Instruments', link: url(routes.instruments.all)}]\n\n    if(instrumentId){\n      crumbs.push(\n        {\n          text: instrumentId,\n          link: url(routes.instruments.instrument.show, { instrument_id: instrumentId })\n        }\n      )\n      const params = paramsFromPath();\n      if(params){\n        switch (params.type) {\n          case 'map':\n            crumbs.push(\n                {\n                  text: 'Map',\n                  link: url(routes.instruments.instrument.map.show, { instrument_id: instrumentId })\n                }\n              )\n            break\n          case 'build':\n            crumbs.push(\n                {\n                  text: 'Build',\n                  link: url(routes.instruments.instrument.build.show, { instrument_id: instrumentId })\n                }\n              )\n            if(params.subtype){\n\n              if(params.subtype === 'question_items'){\n                  crumbs.push(\n                      {\n                        text: 'Question Items',\n                        link: url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'question_grids'){\n                  crumbs.push(\n                      {\n                        text: 'Question Grids',\n                        link: url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'code_lists'){\n                  crumbs.push(\n                      {\n                        text: 'CodeLists',\n                        link: url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'response_domains'){\n                  crumbs.push(\n                      {\n                        text: 'Response Domains',\n                        link: url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'constructs'){\n                  crumbs.push(\n                      {\n                        text: 'Constructs',\n                        link: url(routes.instruments.instrument.build.constructs.show, { instrument_id: instrumentId })\n                      }\n                    )\n              }\n\n            }\n        }\n      }\n    }\n    return crumbs\n  }\n\n  const breadcrumbs = buildBreadcrumbs()\n\n  const classes = useStyles()\n\n  return (\n      <Paper className={classes.root}>\n        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n          {breadcrumbs.map((breadcrumb) => {\n            return <BreadcrumbBarItem text={breadcrumb.text} link={breadcrumb.link} />\n          })}\n        </Breadcrumbs>\n      </Paper>\n  )\n}\n\nexport default BreadcrumbBar\n","export const ObjectColour = (type) => {\n   switch (type){\n      case 'statement':\n      case 'CcSequence':\n         return '652d90' // Purple;\n      case 'loop':\n      case 'CcLoop':\n         return '37b34a' // Green;\n      case 'question':\n      case 'CcQuestion':\n         return '00adee' // Pale Blue;\n      case 'sequence':\n      case 'CcSequence':\n         return 'faaf40' // Orange;\n      case 'condition':\n      case 'CcCondition':\n         return 'f1003a' // Red;\n      default:\n         return 'd3d3d3' // Light Grey\n   }\n}\n\n//652d90 Purple\n// eb008b Pink\n// faaf40 Orange\n// f1003a Red\n// 37b34a Green\n// 00adee Pale Blue\n// 2e008b Dark Purple\n// 1f801e Dark Green\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport LabelIcon from '@material-ui/icons/Label';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport Helmet from \"react-helmet\";\nimport { useDispatch } from 'react-redux'\nimport BreadcrumbBar from './BreadcrumbBar'\nimport { ObjectColour } from '../support/ObjectColour'\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\n        Archivist\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst MainListItems = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n  <div>\n    <ListItem button>\n        <ListItemIcon>\n          <Link to={url(routes.instruments.all)}>\n            <QuestionAnswerIcon />\n          </Link>\n        </ListItemIcon>\n      <Link to={url(routes.instruments.all)}>\n        <ListItemText primary=\"Instruments\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <StorageIcon />\n      </ListItemIcon>\n      <Link to={url(routes.datasets.all)}>\n        <ListItemText primary=\"Datasets\" />\n      </Link>\n    </ListItem>\n     <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <SupervisedUserCircleIcon style={{ color: '37b34a' }}/>\n        </ListItemIcon>\n        <ListItemText primary=\"Admin\" />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem button className={classes.nested}>\n            <Link to={url(routes.admin.instruments.all)}>\n              <ListItemText primary=\"Instruments\" />\n            </Link>\n          </ListItem>\n          <ListItem button className={classes.nested}>\n            <Link to={url(routes.admin.datasets.all)}>\n              <ListItemText primary=\"Datasets\" />\n            </Link>\n          </ListItem>\n          <ListItem button className={classes.nested}>\n            <Link to={url(routes.admin.import)}>\n              <ListItemText primary=\"Import\" />\n            </Link>\n          </ListItem>\n          <ListItem button className={classes.nested}>\n            <Link to={url(routes.admin.imports.all)}>\n              <ListItemText primary=\"DDI Imports\" />\n            </Link>\n          </ListItem>\n        </List>\n      </Collapse>\n  </div>\n  )\n}\n\nexport const Dashboard = (props)  => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const dispatch = useDispatch();\n  const { instrumentId } = props;\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Archivist</title>\n      </Helmet>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            {props.title}\n          </Typography>\n          <IconButton color=\"inherit\">\n            <ExitToAppIcon onClick={()=>{ dispatch({type:'LOGOUT'}) }}/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <img src=\"/logo.svg\" alt=\"BigCo Inc. logo\" style={{width: \"51%\"}}/>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <MainListItems />\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth={false} maxHeight={false} className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <BreadcrumbBar instrumentId={instrumentId} />\n              <Paper className={classes.paper}>\n                {props.children}\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { isEmpty, isNil, get } from 'lodash'\n\nexport const ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nexport const ObjectStatusBar = (props) => {\n  const {id, type} = props\n  const status = ObjectStatus(id, type)\n\n  if(!isEmpty(status) && !isNil(status.error)){\n    return (\n      <div>\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          {status.errorMessage}\n        </Alert>\n      </div>\n    )\n  }else if(status && status.saved){\n    return (\n      <div>\n        <Alert severity=\"success\">\n          <AlertTitle>{ (id === 'new') ? 'Created' : 'Saved' }</AlertTitle>\n        </Alert>\n      </div>\n    )\n  }else{\n    return ''\n  }\n}\n","import React from 'react';\nimport { Field } from \"react-final-form\";\n\nexport const FileField = ({ name, ...props }) => (\n  <Field name={name}>\n    {({ input: { value, onChange, ...input } }) => (\n      <input\n        {...input}\n        type=\"file\"\n        multiple\n        onChange={({ target }) => onChange(target.files)} // instead of the default target.value\n        {...props}\n      />\n    )}\n  </Field>\n);\n","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux'\nimport { AdminInstrument } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { FileField } from '../components/FileField'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\nimport { isEmpty } from 'lodash'\n\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('statement')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if (!values.files || isEmpty(values.files)) {\n    errors.files = 'Required';\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <FileField name=\"files\" />\n    ),\n  }\n];\n\nexport const AdminInstrumentForm = (props) => {\n  const {} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n\n  const onSubmit = (values) => {\n      dispatch(AdminInstrument.create(values))\n  }\n\n  const status = ObjectStatus('new', 'AdminInstrument')\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <h2>Upload DDI Instrument Files</h2>\n      <ObjectStatusBar type={'AdminInstrument'} id={'new'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={{files: []}}\n        validate={(values) => validate(values, status)}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  Only DDI-L 3.2 Instrument files are accepted.\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Import Instrument\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux'\nimport { AdminDataset } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { FileField } from '../components/FileField'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\nimport { isEmpty } from 'lodash'\n\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('statement')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if (!values.files || isEmpty(values.files)) {\n    errors.files = 'Required';\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <FileField name=\"files\" />\n    ),\n  }\n];\n\nexport const AdminDatasetForm = (props) => {\n  const {} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n\n  const onSubmit = (values) => {\n      dispatch(AdminDataset.create(values))\n  }\n\n  const status = ObjectStatus('new', 'AdminDataset')\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <h2>Upload DDI Dataset Files</h2>\n      <ObjectStatusBar type={'AdminDataset'} id={'new'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={{files: []}}\n        validate={(values) => validate(values, status)}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  Only DDI-L 3.2 Dataset files are accepted.\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Import Dataset\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dashboard } from '../components/Dashboard'\nimport { AdminInstrumentForm } from '../components/AdminInstrumentForm'\nimport { AdminDatasetForm } from '../components/AdminDatasetForm'\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst AdminImport = () => {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Import'}>\n        <AdminInstrumentForm />\n        <AdminDatasetForm />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminImport;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AdminImport } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { get } from 'lodash'\n\nconst AdminImportView = (props) => {\n\n  const dispatch = useDispatch()\n  const importId = get(props, \"match.params.importId\", \"\")\n  const imports = useSelector(state => state.imports);\n  const importObj = get(imports, importId, { logs: [] })\n  const logs = get(importObj, 'logs', [])\n  const rows: RowsProp = Object.values(logs);\n\n  useEffect(() => {\n    dispatch(AdminImport.show(importId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'DDI Imports'}>\n        <ul>\n          <li>Filename : {importObj.filename}</li>\n          <li>State : {importObj.state}</li>\n          <li>Created At : {importObj.created_at}</li>\n        </ul>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Input</TableCell>\n              <TableCell>Matches</TableCell>\n              <TableCell>Outcome</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.original_text}</TableCell>\n                <TableCell>{row.matches}</TableCell>\n                <TableCell>{row.outcome}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminImportView;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AdminImport } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst AdminImports = () => {\n\n  const dispatch = useDispatch()\n  const imports = useSelector(state => state.imports);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(imports).sort().reverse();\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n    dispatch(AdminImport.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'DDI Imports'}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>File</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>State</TableCell>\n              <TableCell>Created At</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.filename}</TableCell>\n                <TableCell>{row.import_type}</TableCell>\n                <TableCell>{row.state}</TableCell>\n                <TableCell>{row.created_at}</TableCell>\n                <TableCell>\n                  <Button variant=\"outlined\">\n                      <Link to={url(routes.admin.imports.show, { importId: row.id })}>\n                        View Log\n                      </Link>\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminImports;\n","import React from 'react';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nexport const AdminImportMappingsTable = ({values}) => {\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = values;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>File</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>State</TableCell>\n              <TableCell>Created At</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.file}</TableCell>\n                <TableCell>{row.type}</TableCell>\n                <TableCell>{row.state}</TableCell>\n                <TableCell>{row.created_at}</TableCell>\n                <TableCell>\n                  <ButtonGroup variant=\"outlined\">\n                    <Button>\n                      View Log\n                    </Button>\n                  </ButtonGroup>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n  );\n}\n","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux'\nimport { AdminDataset } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { FileField } from '../components/FileField'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('statement')}`\n  }\n});\n\nconst validate = (values, status) => {\n  const errors = {};\n\n  // if(values.files.length != Object.values(values.types).length){\n  //   errors.files = 'You need to select the type of file you are importing.'\n  // }\n\n  // console.log(errors)\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <FileField name=\"files\" />\n    ),\n  }\n];\n\nexport const AdminImportMappingsForm = ({type, hint, onSubmit=()=>{}}) => {\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus('new', 'AdminImportMapping')\n\n// values.files.length == 0 || values.files.length !== Object.values(values.types).length\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <h2>Import Mappings</h2>\n      <ObjectStatusBar type={'AdminImportMapping'} id={'new'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={{files: [], types: {}}}\n        validate={(values) => validate(values, status)}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                {Array.from(values.files).map((file) => {\n                  return (\n                    <div>\n                      {file.name}\n                      <select onChange={(e) => { values.types[file.name] = e.target.value; }} required>\n                          <option></option>\n                          <option value=\"topicv\" class=\"ng-binding\">T-V Mapping</option>\n                          <option value=\"dv\" class=\"ng-binding\">DV Mapping</option>\n                      </select>\n                    </div>\n                  )\n                })}\n                <pre>{JSON.stringify(values, 0, 2)}</pre>\n                <Grid item style={{ marginTop: 16 }}>\n                  {hint}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={false}\n                  >\n                    Import {type}\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport { Box } from '@material-ui/core'\nimport { shuffle } from \"lodash\";\nimport { ObjectColour } from '../support/ObjectColour'\n\nexport const Loader = () => {\n  return (\n    <Box style={{ height: 200, 'marginTop': 50 }} m=\"auto\"><BounceLoader color={`#${ObjectColour(shuffle(['sequence', 'condition', 'question', 'statement','loop'])[0])}`}/></Box>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dashboard } from '../components/Dashboard'\nimport { AdminImportMappingsTable } from '../components/AdminImportMappingsTable'\nimport { AdminImportMappingsForm } from '../components/AdminImportMappingsForm'\nimport { Loader } from '../components/Loader'\nimport { AdminImportMapping } from '../actions'\nimport { get } from 'lodash';\n\nconst AdminInstrumentImportMappings = (props) => {\n  const dispatch = useDispatch()\n  const type = \"Instrument\"\n  const hint = \"You can import multiple Q-V and T-Q mapping files. Only TXT files are accepted.\"\n  const instrumentId = get(props, \"match.params.instrumentId\", \"\")\n\n  const onSubmit = (values) => {\n      dispatch(AdminImportMapping.create('instruments', instrumentId, values))\n  }\n  const values = Object.values(useSelector(state => state.instrumentImportMappings));\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n  useEffect(() => {\n    Promise.all([\n      dispatch(AdminImportMapping.all('instruments',instrumentId)),\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Instruments Import Mappings'}>\n        {!dataLoaded\n        ? <Loader />\n        : (\n          <>\n            <AdminImportMappingsForm type={type} hint={hint} onSubmit={onSubmit} />\n            <AdminImportMappingsTable values={values} />\n          </>\n        )}\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminInstrumentImportMappings;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dashboard } from '../components/Dashboard'\nimport { AdminImportMappingsTable } from '../components/AdminImportMappingsTable'\nimport { AdminImportMappingsForm } from '../components/AdminImportMappingsForm'\nimport { Loader } from '../components/Loader'\nimport { AdminImportMapping } from '../actions'\nimport { get } from 'lodash';\n\nconst AdminDatasetImportMappings = (props) => {\n  const dispatch = useDispatch()\n  const type = \"Dataset\"\n  const hint = \"You can import multiple T-V and DV mapping files. Only TXT files are accepted.\"\n  const datasetId = get(props, \"match.params.datasetId\", \"\")\n\n  const onSubmit = (values) => {\n      dispatch(AdminImportMapping.create('datasets', datasetId, {\n          imports: Array.from(values.files).map((file) => {\n            console.log(file)\n            console.log({ file: file, type: values.types[file.name]})\n            return { file: file, type: values.types[file.name]}\n          })\n        }\n      ))\n  }\n  const values = Object.values(useSelector(state => state.datasetImportMappings));\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n  useEffect(() => {\n    Promise.all([\n      dispatch(AdminImportMapping.all('datasets',datasetId)),\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Datasets Import Mappings'}>\n        {!dataLoaded\n        ? <Loader />\n        : (\n          <>\n            <AdminImportMappingsForm type={type} hint={hint} onSubmit={onSubmit} />\n            <AdminImportMappingsTable values={values} />\n          </>\n        )}\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminDatasetImportMappings;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Divider from '@material-ui/core/Divider';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport SearchBar from \"material-ui-search-bar\";\nimport { Loader } from '../components/Loader'\nimport { get, isEmpty } from 'lodash'\n\nexport const DataTable = (props) => {\n\n  const { actions=()=>{}, fetch=[], stateKey='instruments', searchKey='prefix', headers=[], rowRenderer=()=>{}, parentStateKey } = props;\n  let values = useSelector(state => state[stateKey]);\n  if(parentStateKey){\n    values = get(values, parentStateKey, {})\n  }\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n  const [search, setSearch] = useState(\"\");\n  const [filteredValues, setFilteredValues] = useState([]);\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    setFilteredValues(\n      Object.values(values).filter((value) =>\n        value[searchKey] && value[searchKey].toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  }, [search, values]);\n\n  const rows: RowsProp = filteredValues;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n    Promise.all(fetch).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <>\n        {!dataLoaded\n        ? <Loader />\n        : (\n          <>\n            <SearchBar\n              placeholder=\"Search (press return to perform search)\"\n              onChange={(newValue) =>\n                      setSearch(newValue)\n                    }\n              onRequestSearch={(newValue) =>\n                      setSearch(newValue)\n                    }\n              onCancelSearch={() => {\n                      setSearch('')\n                    }}\n            />\n            <Divider style={{ margin: 16 }} variant=\"middle\" />\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  {headers.map((header)=>(\n                    <TableCell>{header}</TableCell>\n                  ))}\n                  { !isEmpty(actions({})) && (\n                    <TableCell>Actions</TableCell>\n                  )}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                  <TableRow key={row.id}>\n                    {rowRenderer(row).map((cell)=>(\n                      <TableCell>{cell}</TableCell>\n                    ))}\n                    <TableCell>\n                      {actions(row)}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n             <TableFooter>\n                <TableRow>\n                  <TablePagination\n                    rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                    colSpan={3}\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                    SelectProps={{\n                      inputProps: { 'aria-label': 'rows per page' },\n                      native: true,\n                    }}\n                  />\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </>\n        )}\n  </>\n  );\n}\n\nexport default DataTable;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { DataTable } from '../components/DataTable'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nconst AdminInstruments = () => {\n\n  const dispatch = useDispatch()\n\n  const actions = (row) => {\n    return (\n      <>\n        <ButtonGroup variant=\"outlined\">\n          <Button>\n            <Link to={url(routes.instruments.instrument.edit, { instrument_id: row.prefix })}>Edit</Link>\n          </Button>\n          <Button>\n            Copy\n          </Button>\n          <Button>\n            <Link to={url(routes.admin.instruments.importMappings, { instrumentId: row.id })}>\n              Import Mappings\n            </Link>\n          </Button>\n          <Button>\n            QV\n          </Button>\n          <Button>\n            Topics\n          </Button>\n          <Button>\n            <Link to={url(routes.admin.instruments.importMappings, { instrumentId: row.id })}>\n              View Imports\n            </Link>\n          </Button>\n          <Button>\n            Clear Cache\n          </Button>\n          <Button>\n            Delete\n          </Button>\n        </ButtonGroup>\n      </>\n    )\n  }\n\n  const headers = [\"ID\", \"Prefix\", \"Study\"]\n  const rowRenderer = (row) => {\n    return [row.id, row.prefix, row.study]\n  }\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Admin Instruments'}>\n        <Button variant=\"contained\" color=\"primary\">\n          <Link to={url(routes.instruments.new)}><AddCircleOutlineIcon /> Add new Instrument</Link>\n        </Button>\n        <DataTable actions={actions}\n          fetch={[dispatch(Instrument.all())]}\n          stateKey={'instruments'}\n          searchKey={'prefix'}\n          headers={headers}\n          rowRenderer={rowRenderer}\n          />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminInstruments;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dataset } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { DataTable } from '../components/DataTable'\n\nconst AdminDatasets = () => {\n\n  const dispatch = useDispatch()\n\n  const actions = (row) => {\n    return (\n      <ButtonGroup variant=\"outlined\">\n        <Button>\n          Edit\n        </Button>\n        <Button>\n          <Link to={url(routes.admin.datasets.importMappings, { datasetId: row.id })}>\n            Import Mappings\n          </Link>\n        </Button>\n        <Button>\n          DV\n        </Button>\n        <Button>\n          Topics\n        </Button>\n        <Button>\n          <Link to={url(routes.admin.datasets.importMappings, { datasetId: row.id })}>\n            View Imports\n          </Link>\n        </Button>\n        <Button>\n          Delete\n        </Button>\n       </ButtonGroup>\n    )\n  }\n\n  const headers = [\"ID\", \"Name\", \"Study\"]\n  const rowRenderer = (row) => {\n    return [row.id, row.name, row.study]\n  }\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Admin Datasets'}>\n        <DataTable actions={actions}\n          fetch={[dispatch(Dataset.all())]}\n          stateKey={'datasets'}\n          searchKey={'name'}\n          headers={headers}\n          rowRenderer={rowRenderer}\n          />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminDatasets;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { DataTable } from '../components/DataTable'\n\nconst Instruments = () => {\n\n  const dispatch = useDispatch()\n\n  const actions = (row) => {\n    return (\n      <>\n        <ButtonGroup variant=\"outlined\">\n          <Button>\n            <Link to={url(routes.instruments.instrument.edit, { instrument_id: row.prefix })}>Edit</Link>\n          </Button>\n          <Button>\n            <Link to={url(routes.instruments.instrument.show, { instrument_id: row.prefix })}>View</Link>\n          </Button>\n          <Button>\n            <Link to={url(routes.instruments.instrument.build.show, { instrument_id: row.prefix })}>Build</Link>\n          </Button>\n          <Button>\n            <Link to={url(routes.instruments.instrument.map.show, { instrument_id: row.prefix })}>Map</Link>\n          </Button>\n        </ButtonGroup>\n      </>\n    )\n  }\n\n  const headers = [\"ID\", \"Prefix\", \"Control Contructs\", \"Q-V Mappings\", \"Study\"]\n  const rowRenderer = (row) => {\n    return [row.id, row.prefix, row.ccs, row.qvs, row.study]\n  }\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Instruments'}>\n        <DataTable actions={actions}\n          fetch={[dispatch(Instrument.all())]}\n          stateKey={'instruments'}\n          searchKey={'prefix'}\n          headers={headers}\n          rowRenderer={rowRenderer}\n          />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default Instruments;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dataset } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { DataTable } from '../components/DataTable'\n\nconst Datasets = () => {\n\n  const dispatch = useDispatch()\n\n  const actions = (row) => {\n    return (\n      <>\n        <Button variant=\"outlined\">\n          <Link to={url('/datasets/:dataset_id', { dataset_id: row.id })}>View</Link>\n        </Button>\n      </>\n    )\n  }\n\n  const headers = [\"ID\", \"Name\", \"Variables\", \"Q-V Mappings\", \"DV Mappings\", \"Study\"]\n  const rowRenderer = (row) => {\n    return [row.id, row.name, row.variables, row.qvs, row.dvs, row.study]\n  }\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Datasets'}>\n        <DataTable actions={actions}\n          fetch={[dispatch(Dataset.all())]}\n          stateKey={'datasets'}\n          searchKey={'name'}\n          headers={headers}\n          rowRenderer={rowRenderer}\n          />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default Datasets;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dataset, DatasetVariable } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { Loader } from '../components/Loader'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { get, isEmpty } from 'lodash'\n\nconst DatasetView = (props) => {\n\n  const dispatch = useDispatch()\n  const datasetId = get(props, \"match.params.dataset_id\", \"\")\n\n  const dataset = useSelector(state => get(state.datasets, datasetId));\n  const variables = useSelector(state => get(state.datasetVariables, datasetId,{}));\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(variables);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(Dataset.show(datasetId)),\n      dispatch(DatasetVariable.all(datasetId))\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const SourcesList = (props) => {\n    const { sources, datasetId, variable } = props\n    let { sourceOptions } = props\n    sourceOptions = sourceOptions.filter(opt => get(opt.topic, 'id') == get(variable.topic, 'id'))\n    const variableId = variable.id\n    const dispatch = useDispatch()\n\n    const handleAddSource = (newSources) => {\n      dispatch(DatasetVariable.add_source(datasetId, variableId, newSources));\n    }\n\n    const handleRemoveSource = (oldSources) => {\n      oldSources.map((source)=>{\n        dispatch(DatasetVariable.remove_source(datasetId, variableId, source));\n      })\n    }\n\n    var difference = []\n\n    const handleChange = (event, value, reason) => {\n      switch (reason) {\n        case 'select-option':\n          difference = value.filter(x => !sources.includes(x));\n          if(!isEmpty(difference)){\n            return handleAddSource(difference.map((source) => { return source.label }))\n          };\n          break;\n        case 'remove-option':\n          difference = sources.filter(x => !value.includes(x));\n          if(!isEmpty(difference)){\n            return handleRemoveSource(difference)\n          };\n          break;\n        default:\n          return null;\n      }\n    }\n\n    if(isEmpty(sources)){\n      return (\n        <div>\n           <Autocomplete\n            multiple\n            id=\"tags-outlined\"\n            options={Object.values(sourceOptions)}\n            getOptionLabel={(option) => option.label}\n            onChange={handleChange}\n            value={[]}\n            filterSelectedOptions\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"outlined\"\n                label=\"Sources\"\n                placeholder=\"Add source\"\n              />\n            )}\n          />\n        </div>\n      )\n    }else{\n      return (\n        <div>\n           <Autocomplete\n            multiple\n            id=\"tags-outlined\"\n            options={Object.values(sourceOptions)}\n            getOptionLabel={(option) => option.label}\n            onChange={handleChange}\n            value={sources}\n            getOptionSelected= {(option, value) => (\n              option.id === value.id\n            )}\n            filterSelectedOptions\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"outlined\"\n                label=\"Sources\"\n                placeholder=\"Add source\"\n              />\n            )}\n          />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Datasets'}>\n      {!dataLoaded\n        ? <Loader />\n        : (\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ID</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Label</TableCell>\n                <TableCell>Type</TableCell>\n                <TableCell>Used by</TableCell>\n                <TableCell>Sources</TableCell>\n                <TableCell>Topic</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell>{row.id}</TableCell>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>{row.label}</TableCell>\n                  <TableCell>{row.var_type}</TableCell>\n                  <TableCell></TableCell>\n                  <TableCell><SourcesList sources={row.sources} sourceOptions={get(dataset,'questions',[])} datasetId={datasetId} variable={row} /></TableCell>\n                  <TableCell>{get(row.topic, 'name')}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n           <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true,\n                  }}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        )}\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default DatasetView;\n","import React from 'react';\nimport { get } from \"lodash\";\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport Button from '@material-ui/core/Button';\n\nexport const InstrumentHeading = ({instrument, mode='view'}) => {\n  return (\n    <h1>\n    {get(instrument, 'label')}\n      { instrument && (\n        <>\n        { mode !== 'view' && (\n          <Button variant=\"outlined\">\n            <Link to={url(routes.instruments.instrument.show, { instrument_id: instrument.slug })}>View</Link>\n          </Button>\n        )}\n        { mode !== 'build' && (\n          <Button variant=\"outlined\">\n            <Link to={url(routes.instruments.instrument.build.show, { instrument_id: instrument.slug })}>Build</Link>\n          </Button>\n        )}\n        { mode !== 'map' && (\n          <Button variant=\"outlined\">\n            <Link to={url(routes.instruments.instrument.map.show, { instrument_id: instrument.slug })}>Map</Link>\n          </Button>\n        )}\n        </>\n      )}\n    </h1>\n  )\n}\n","export const HumanizeObjectType = (type) => {\n   switch (type){\n      case 'statement':\n      case 'CcStatement':\n         return 'Statement'\n      case 'loop':\n      case 'CcLoop':\n         return 'Loop'\n      case 'question':\n      case 'CcQuestion':\n         return 'Question'\n      case 'sequence':\n      case 'CcSequence':\n         return 'Sequence'\n      case 'condition':\n      case 'CcCondition':\n         return 'Condition'\n      default:\n         return ''\n   }\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, Variables, Topics } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { InstrumentHeading } from '../components/InstrumentHeading'\nimport { Loader } from '../components/Loader'\nimport { get, isEmpty, isNil } from \"lodash\";\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport { Box, Grid, Typography } from '@material-ui/core'\nimport { ObjectColour } from '../support/ObjectColour'\nimport { HumanizeObjectType } from '../support/HumanizeObjectType'\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport TodayIcon from '@material-ui/icons/Today';\nimport Filter1Icon from '@material-ui/icons/Filter1';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%'\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  }\n}));\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n  }\n\n  return item\n\n}\n\nconst constructLabelClasses = makeStyles((theme) => ({\n  CcCondition: {\n    background: `#${ObjectColour('condition')}`,\n    color: 'white'\n  },\n  CcStatement: {\n    background: `#${ObjectColour('statement')}`,\n    color: 'white'\n  },\n  CcQuestion: {\n    background: `#${ObjectColour('question')}`,\n    color: 'white'\n  }\n}));\n\nconst ConstructLabel = ({item, type}) => {\n  const classes = constructLabelClasses();\n\n  return (<Chip label={`${HumanizeObjectType(type)} : ${item.label}`} className={classes[type]}/>)\n}\n\nconst QuestionItemListItem = (props) => {\n  const {type, id, instrumentId} = props\n  const item = ObjectFinder(instrumentId, type, id)\n\n  if(isNil(item.question)){\n    return ''\n  }\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={3}>\n        <ConstructLabel item={item} type={type} />\n      </Grid>\n\n      <Grid item xs={9}>\n        {item.question.literal}\n        {(item.question.rds) && (\n          <ResponseDomains rds={item.question.rds} />\n        )}\n      </Grid>\n    </Grid>\n  )\n}\n\nconst responseDomainClasses = makeStyles((theme) => ({\n  root: {\n    listStyleType:'none'\n  }\n}));\n\nconst ResponseDomains = ({ rds }) => {\n  const classes = responseDomainClasses();\n  return rds.map((rd) => {\n    switch (rd.type) {\n      case 'ResponseDomainCode':\n        return(<ul className={classes.root}><ResponseDomainCodes codes={rd.codes} /></ul>)\n      case 'ResponseDomainText':\n        return(<ul className={classes.root}><li><TextFieldsIcon /> {rd.label} ({`${(isNil(rd.maxlen)) ? 'no' : rd.maxlen} maximum length`})</li></ul>)\n      case 'ResponseDomainNumeric':\n        return(<ul className={classes.root}><li><Filter1Icon /> {rd.label} {rd.params} {rd.subtype}</li></ul>)\n      case 'ResponseDomainDatetime':\n        return(<ul className={classes.root}><li><TodayIcon /> {rd.label} {rd.params} {rd.subtype}</li></ul>)\n      default:\n        return '';\n    }\n  })\n}\n\nconst ResponseDomainCodes = ({ codes }) => {\n  return codes.map((code) => {\n      return(<li><CheckCircleOutlineIcon /> <em>Value : {code.value} </em> = {code.label}</li>)\n    })\n}\n\nconst QuestionGridListItem = (props) => {\n\n  return (\n    <div>This is a Question Grid</div>\n  )\n}\n\nconst StatementListItem = (props) => {\n  const {type, id, instrumentId} = props\n  const item = ObjectFinder(instrumentId, type, id)\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={3}>\n        <ConstructLabel item={item} type={type} />\n      </Grid>\n\n      <Grid item xs={9}>\n        {item.literal}\n      </Grid>\n    </Grid>\n  )\n}\n\nconst ConditionItem = (props) => {\n  const {type, id, instrumentId, title} = props\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, type, id)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem>\n        <Grid container spacing={3}>\n          <Grid item xs={3}>\n            <ConstructLabel item={item} type={type} />\n          </Grid>\n\n          <Grid item xs={9}>\n            <ListItemText primary={get(item, 'literal', title)} secondary={item.logic} />\n          </Grid>\n        </Grid>\n        {open ? <ExpandLess onClick={handleClick}/> : <ExpandMore onClick={handleClick}/>}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n              <StyledListItem className={classes.nested}>\n                {(function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />;\n                    case 'CcQuestion':\n                      return <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    case 'CcCondition':\n                      return <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    default:\n                      return null;\n                  }\n                })()}\n              </StyledListItem>\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst SequenceItem = (props) => {\n  const {type, id, instrumentId} = props\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'label', props.title)\n\n  return (\n    <List\n      className={classes.sequence}\n    >\n      <ListItem className={classes.sequence}>\n          <Typography variant=\"h5\" component=\"h5\">{title}</Typography>\n          {open ? <ExpandLess onClick={handleClick}  /> : <ExpandMore onClick={handleClick}  />}\n      </ListItem >\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n                (function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return (\n                          <StyledListItem className={classes.nested}>\n                            <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />\n                          </StyledListItem>)\n                    case 'CcQuestion':\n                      return (\n                          <StyledListItem className={classes.nested}>\n                            <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </StyledListItem>)\n                    case 'CcStatement':\n                      return (\n                          <StyledListItem className={classes.nested}>\n                            <StatementListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </StyledListItem>)\n                    case 'CcCondition':\n                      return (\n                          <StyledListItem className={classes.nested}>\n                            <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} children={get(child,'children',[])} />\n                          </StyledListItem>)\n                    default:\n                      return null;\n                  }\n                })()\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst InstrumentView = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(Instrument.show(instrumentId)),\n      dispatch(CcSequences.all(instrumentId)),\n      dispatch(CcStatements.all(instrumentId)),\n      dispatch(CcConditions.all(instrumentId)),\n      dispatch(CcQuestions.all(instrumentId)),\n      dispatch(QuestionItems.all(instrumentId)),\n      dispatch(QuestionGrids.all(instrumentId)),\n      dispatch(Variables.all(instrumentId)),\n      dispatch(Topics.all())\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sequence = (isEmpty(cc_sequences)) ? undefined : Object.values(cc_sequences).find(element => element.top == true)\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'View'} instrumentId={instrumentId}>\n      <InstrumentHeading instrument={instrument} mode={'view'} />\n        {!dataLoaded\n        ? <Loader />\n        : <SequenceItem instrumentId={instrumentId} type={'CcSequence'} id={sequence.children[0].id} title={sequence.children[0].label} children={sequence.children[0].children}/>\n      }\n      </Dashboard>\n    </div>\n  );\n}\n\nconst StyledChip = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #00adee 30%, #00adee 90%)',\n    borderRadius: 3,\n    border: 0,\n    color: 'white',\n    height: 30,\n    'margin-right': 5,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px #00adee',\n  },\n  label: {\n    textTransform: '',\n  },\n})(Chip);\n\nconst StyledListItem = withStyles({\n  root: {\n    borderRadius: 5,\n    border: '2px solid #00adee',\n    backgroundColor: 'rgba(0,173,238, 0.1)',\n    'margin-bottom': '10px'\n  },\n  label: {\n    textTransform: '',\n  },\n})(ListItem);\n\nexport default InstrumentView;\n","import { merge, isObject } from 'lodash';\n\nexport const ObjectCheckForInitialValues = (initialValues, values) => {\n    // For every field initially provided, we check whether it value has been removed\n    // and set it explicitly to an empty string\n    if (!initialValues) return values;\n    const initialValuesWithEmptyFields = Object.keys(initialValues).reduce(\n        (acc, key) => {\n            if (values[key] instanceof Date || Array.isArray(values[key])) {\n                acc[key] = values[key];\n            } else if (\n                typeof values[key] === 'object' &&\n                values[key] !== null\n            ) {\n                acc[key] = ObjectCheckForInitialValues(initialValues[key], values[key]);\n            } else {\n                acc[key] =\n                    typeof values[key] === 'undefined' ? null : values[key];\n            }\n            return acc;\n        },\n        {}\n    );\n\n    // Finally, we merge back the values to not miss any which wasn't initially provided\n    return merge(initialValuesWithEmptyFields, values);\n}\n","import React from 'react';\nimport { isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('statement')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] === ''){\n        errors[key] = status.errors[key][0];\n        return\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Prefix\"\n        name=\"prefix\"\n        margin=\"none\"\n        required={false}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Study\"\n        name=\"study\"\n        margin=\"none\"\n        required={false}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Instrument Title\"\n        name=\"label\"\n        margin=\"none\"\n        required={false}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Agency\"\n        name=\"agency\"\n        margin=\"none\"\n        required={false}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Version\"\n        name=\"version\"\n        margin=\"none\"\n        required={false}\n      />\n    ),\n  },\n];\n\nexport const InstrumentForm = (props) => {\n  const {instrument, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(instrument.id || 'new', 'Instrument')\n\n  const onSubmit = (values) => {\n    console.log(values)\n    values = ObjectCheckForInitialValues(instrument, values)\n    console.log(values)\n    if(isNil(instrument.id)){\n      dispatch(Instrument.create(values))\n    }else{\n      dispatch(Instrument.update(instrument.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={instrument.id || 'new'} type={'Instrument'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={instrument}\n        validate={(values) => validate(values, status)}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { InstrumentForm } from '../components/InstrumentForm'\n\nconst InstrumentNew = () => {\n\n  const dispatch = useDispatch()\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Instruments'}>\n        <InstrumentForm instrument={{}} />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentNew;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { InstrumentForm } from '../components/InstrumentForm'\nimport { get } from 'lodash'\n\nconst InstrumentEdit = (props) => {\n\n  const dispatch = useDispatch()\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Edit Instrument'}>\n        <InstrumentForm instrument={instrument} />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, Variables, Topics } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { get, isEmpty, isNil } from \"lodash\";\nimport { InstrumentHeading } from '../components/InstrumentHeading'\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Loader } from '../components/Loader'\nimport SyncLoader from \"react-spinners/SyncLoader\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n  }\n\n  return item\n\n}\n\nconst QuestionItemListItem = (props) => {\n  const {type, id, instrumentId} = props\n  const item = ObjectFinder(instrumentId, type, id)\n  const classes = useStyles();\n\n  const title = (isEmpty(item.question)) ? item.label : item.question.literal\n\n  const topic = get(item, 'topic', {id: null})\n  const topicId = get(topic, 'id', null)\n\n  const resolvedTopic = get(item, 'resolved_topic', {id: null})\n  const resolvedTopicId = get(resolvedTopic, 'id', null)\n\n  const status = ObjectStatus(item.id, 'CcQuestion')\n\n  var errorMessage = null;\n\n  if(status.error){\n    errorMessage = status.errorMessage\n  }else if(item.errors){\n    errorMessage = item.errors\n  }\n\n  return (\n      <ListItem>\n      <Paper className={classes.control}>\n      <Grid container spacing={3}>\n          { !isEmpty(errorMessage) && (\n            <div className={classes.root}>\n              <Alert severity=\"error\">\n                <AlertTitle>Error</AlertTitle>\n                {errorMessage}\n              </Alert>\n            </div>\n          )}\n          <Grid item xs={9}>\n            <ListItemText primary={title} />\n          </Grid>\n          <Grid item xs={3}>\n            <Chip label={item.label} color=\"primary\"></Chip>\n            { !isEmpty(status) && !isNil(status.saving) && (\n              <Chip label=\"Saving\" color=\"secondary\">              <SyncLoader/></Chip>\n            )}\n            { !isEmpty(status) && !isNil(status.saved) && (\n              <Chip label=\"Saved\" color=\"success\" deleteIcon={<DoneIcon />}></Chip>\n            )}\n          </Grid>\n          <Grid item xs={6}>\n            <VariableList variables={item.variables} instrumentId={instrumentId} ccQuestionId={item.id} />\n          </Grid>\n          <Grid item xs={6}>\n            <TopicList topicId={topicId} instrumentId={instrumentId} ccQuestionId={item.id} />\n            { isNil(topicId) && !isNil(resolvedTopicId) && (\n              <em>Resolved topic from variables - { get(resolvedTopic,'name')}</em>\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n      </ListItem>\n  )\n}\n\nconst TopicList = (props) => {\n  const {topicId, instrumentId, ccQuestionId} = props\n\n  const dispatch = useDispatch()\n\n  const topics = useSelector(state => state.topics);\n\n  const classes = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\n  const handleChange = (event, value, reason) => {\n    dispatch(CcQuestions.topic.set(instrumentId, ccQuestionId, event.target.value));\n  }\n\n  if(isEmpty(topics)){\n    return 'Fetching topics'\n  }else if(isNil(topicId)){\n    return (\n          <div>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"grouped-native-select\">Topic</InputLabel>\n              <Select native id=\"grouped-native-select\" onChange={handleChange}>\n                <option aria-label=\"None\" value=\"\" />\n                {Object.values(topics).map((topic) => (\n                  <option key={topic.id} value={topic.id}>{(topic.level === 1) ? topic.name : '--' + topic.name }</option>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n    )\n  }else{\n    return (\n          <div>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"grouped-native-select\">Topic</InputLabel>\n              <Select native defaultValue={topicId} id=\"grouped-native-select\" onChange={handleChange}>\n                <option aria-label=\"None\" value=\"\" />\n                {Object.values(topics).map((topic) => (\n                  <option key={topic.id} value={topic.id}>{(topic.level === 1) ? topic.name : '--' + topic.name }</option>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n    )\n  }\n}\n\nconst VariableList = (props) => {\n  const {variables, instrumentId, ccQuestionId} = props\n\n  const dispatch = useDispatch()\n\n  const allVariables = useSelector(state => state.variables);\n  const variableOptions = get(allVariables, instrumentId, {})\n\n  const handleAddVariable = (newVariables) => {\n    dispatch(CcQuestions.variables.add(instrumentId, ccQuestionId, newVariables));\n  }\n\n  const handleRemoveVariable = (oldVariables) => {\n    dispatch(CcQuestions.variables.remove(instrumentId, ccQuestionId, oldVariables));\n  }\n\n  var difference = []\n\n  const handleChange = (event, value, reason) => {\n    switch (reason) {\n      case 'select-option':\n        difference = value.filter(x => !variables.includes(x));\n        if(!isEmpty(difference)){\n          return handleAddVariable(difference.map((variable) => { return variable.name }).join(','))\n        };\n        break;\n      case 'remove-option':\n        difference = variables.filter(x => !value.includes(x));\n        if(!isEmpty(difference)){\n          return handleRemoveVariable(difference.map((variable) => { return variable.id }).join(','))\n        };\n        break;\n      default:\n        return null;\n    }\n  }\n\n  if(isEmpty(variables)){\n    return (\n      <div>\n         <Autocomplete\n          multiple\n          id=\"tags-outlined\"\n          options={Object.values(variableOptions)}\n          getOptionLabel={(option) => option.name}\n          onChange={handleChange}\n          value={[]}\n          filterSelectedOptions\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Variables\"\n              placeholder=\"Add variable\"\n            />\n          )}\n        />\n      </div>\n    )\n  }else{\n    return (\n      <div>\n         <Autocomplete\n          multiple\n          id=\"tags-outlined\"\n          options={Object.values(variableOptions)}\n          getOptionLabel={(option) => option.name}\n          onChange={handleChange}\n          value={variables}\n          getOptionSelected= {(option, value) => (\n            option.id === value.id\n          )}\n          filterSelectedOptions\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Variables\"\n              placeholder=\"Add variable\"\n            />\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nconst QuestionGridListItem = (props) => {\n\n  return (\n    <div>This is a Question Grid</div>\n  )\n}\n\nconst ConditionItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'literal', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n              <ListItem button className={classes.nested}>\n                {(function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />;\n                    case 'CcQuestion':\n                      return <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    case 'CcCondition':\n                      return <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    default:\n                      console.log(child)\n                      return null;\n                  }\n                })()}\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst SequenceItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'label', props.title)\n\n  return (\n    <Paper className={classes.control}>\n      <List\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        className={classes.root}\n      >\n        <ListItem button onClick={handleClick}>\n          <ListItemText primary={title} />\n            {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        {!isEmpty(item.children) && (\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {item.children.map((child) => (\n                  (function() {\n                    switch (child.type) {\n                      case 'CcSequence':\n                        return (\n                            <ListItem button className={classes.nested}>\n                              <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />\n                            </ListItem>)\n                      case 'CcQuestion':\n                        return (\n                            <ListItem button className={classes.nested}>\n                              <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                            </ListItem>)\n                      case 'CcCondition':\n                        return (\n                            <ListItem button className={classes.nested}>\n                              <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                            </ListItem>)\n                      default:\n                        return null;\n                    }\n                  })()\n              ))}\n            </List>\n          </Collapse>\n        )}\n      </List>\n    </Paper>\n  );\n}\n\nconst InstrumentMap = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(Instrument.show(instrumentId)),\n      dispatch(CcSequences.all(instrumentId)),\n      dispatch(CcStatements.all(instrumentId)),\n      dispatch(CcConditions.all(instrumentId)),\n      dispatch(CcQuestions.all(instrumentId)),\n      dispatch(QuestionItems.all(instrumentId)),\n      dispatch(QuestionGrids.all(instrumentId)),\n      dispatch(Variables.all(instrumentId)),\n      dispatch(Topics.all())\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sequence = (isEmpty(cc_sequences)) ? undefined : Object.values(cc_sequences).find(element => element.top === true)\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Maps'} instrumentId={instrumentId}>\n        <InstrumentHeading instrument={instrument} mode={'map'} />\n        {!dataLoaded\n        ? <Loader />\n        : <SequenceItem instrumentId={instrumentId} type={'CcSequence'} id={sequence.children[0].id} title={sequence.children[0].label} children={sequence.children[0].children}/>\n      }\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentMap;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { InstrumentHeading } from '../components/InstrumentHeading'\nimport { get } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuild = (props) => {\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const stats = useSelector(state => get(state.instrumentStats, instrumentId, {}));\n\n  const instrumentStats = get(stats, 'stats', {})\n  const {\n    categories=0, code_lists=0, response_domain_datetimes=0,\n    response_domain_numerics=0, response_domain_texts=0,\n    question_items=0, question_grids=0, instructions=0,\n    cc_conditions=0, cc_loops=0, cc_questions=0, cc_sequences=0,\n    cc_statements=0\n  } = instrumentStats\n\n  useEffect(() => {\n    dispatch(Instrument.show(instrumentId));\n    dispatch(Instrument.stats(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const StatCount = (props) => {\n    const {label, value} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label}/>\n        <ListItemSecondaryAction>\n          <Chip label={value} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <InstrumentHeading instrument={instrument} mode={'build'}/>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })}>Code Lists</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Categories\" value={categories} />\n                  <StatCount label=\"Code Lists\" value={code_lists} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })}>ResponseDomains</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Datetime Answers\" value={response_domain_datetimes} />\n                  <StatCount label=\"Numberic Answers\" value={response_domain_numerics} />\n                  <StatCount label=\"Text Answers\" value={response_domain_texts} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })}>Questions</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Question Items\" value={question_items} />\n                  <StatCount label=\"Question Grids\" value={question_grids} />\n                  <StatCount label=\"Instructions\" value={instructions} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.constructs.show, { instrument_id: instrumentId })}>Constructs</Link></h2>\n              <List dense={true}>\n                  <Link to={url(routes.instruments.instrument.build.ccConditions, { instrument_id: instrumentId })}>\n                    <StatCount label=\"Conditions\" value={cc_conditions} />\n                  </Link>\n                  <Link to={url(routes.instruments.instrument.build.ccLoops, { instrument_id: instrumentId })}>\n                    <StatCount label=\"Loops\" value={cc_loops} />\n                  </Link>\n                  <Link to={url(routes.instruments.instrument.build.ccQuestions, { instrument_id: instrumentId })}>\n                    <StatCount label=\"Questions\" value={cc_questions} />\n                  </Link>\n                  <Link to={url(routes.instruments.instrument.build.ccSequences, { instrument_id: instrumentId })}>\n                    <StatCount label=\"Sequences\" value={cc_sequences} />\n                  </Link>\n                  <Link to={url(routes.instruments.instrument.build.ccStatements, { instrument_id: instrumentId })}>\n                    <StatCount label=\"Statements\" value={cc_statements} />\n                  </Link>\n              </List>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuild;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcConditions } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { DataTable } from '../components/DataTable'\nimport { get } from 'lodash'\n\nconst InstrumentCcConditions = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n\n  const actions = (row) => {\n    return ''\n  }\n\n  const headers = [\"ID\", \"Literal\", \"Logic\", \"Label\"]\n  const rowRenderer = (row) => {\n    return [row.id, row.literal, row.logic, row.label]\n  }\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'CcCondition'}>\n        <DataTable actions={actions}\n          fetch={[dispatch(CcConditions.all(instrumentId))]}\n          stateKey={'cc_conditions'}\n          parentStateKey={instrumentId}\n          searchKey={'literal'}\n          headers={headers}\n          rowRenderer={rowRenderer}\n          />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentCcConditions;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcLoops } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { DataTable } from '../components/DataTable'\nimport { get } from 'lodash'\n\nconst InstrumentCcLoops = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n\n  const actions = (row) => {\n    return ''\n  }\n\n  const headers = [\"ID\", \"Label\", \"Start Value\", \"End Value\", \"Loop While\"]\n  const rowRenderer = (row) => {\n    return [row.id, row.label, row.start_val, row.end_val, row.loop_while]\n  }\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'CcLoops'} instrumentId={instrumentId}>\n        <DataTable actions={actions}\n          fetch={[dispatch(CcLoops.all(instrumentId))]}\n          stateKey={'cc_loops'}\n          parentStateKey={instrumentId}\n          searchKey={'label'}\n          headers={headers}\n          rowRenderer={rowRenderer}\n          />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentCcLoops;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcQuestions } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { DataTable } from '../components/DataTable'\nimport { get } from 'lodash'\n\nconst InstrumentCcQuestions = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n\n  const actions = (row) => {\n    return ''\n  }\n\n  const headers = [\"ID\", \"Label\", \"Base Label\", \"Response Unit Label\"]\n  const rowRenderer = (row) => {\n    return [row.id, row.label, row.base_label, row.response_unit_label]\n  }\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'CcQuestions'} instrumentId={instrumentId}>\n        <DataTable actions={actions}\n          fetch={[dispatch(CcQuestions.all(instrumentId))]}\n          stateKey={'cc_questions'}\n          parentStateKey={instrumentId}\n          searchKey={'label'}\n          headers={headers}\n          rowRenderer={rowRenderer}\n          />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentCcQuestions;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcSequences } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { DataTable } from '../components/DataTable'\nimport { get } from 'lodash'\n\nconst InstrumentCcSequences = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n\n  const actions = (row) => {\n    return ''\n  }\n\n  const headers = [\"ID\", \"Literal\", \"Label\"]\n  const rowRenderer = (row) => {\n    return [row.id, row.literal, row.label]\n  }\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'CcSequences'} instrumentId={instrumentId}>\n        <DataTable actions={actions}\n          fetch={[dispatch(CcSequences.all(instrumentId))]}\n          stateKey={'cc_sequences'}\n          parentStateKey={instrumentId}\n          searchKey={'label'}\n          headers={headers}\n          rowRenderer={rowRenderer}\n          />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentCcSequences;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcStatements } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { DataTable } from '../components/DataTable'\nimport { get } from 'lodash'\n\nconst InstrumentCcStatements = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n\n  const actions = (row) => {\n    return ''\n  }\n\n  const headers = [\"ID\", \"Literal\", \"Label\"]\n  const rowRenderer = (row) => {\n    return [row.id, row.literal, row.label]\n  }\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'CcStatements'} instrumentId={instrumentId}>\n        <DataTable actions={actions}\n          fetch={[dispatch(CcStatements.all(instrumentId))]}\n          stateKey={'cc_statements'}\n          parentStateKey={instrumentId}\n          searchKey={'label'}\n          headers={headers}\n          rowRenderer={rowRenderer}\n          />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentCcStatements;\n","/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport { useSelector } from 'react-redux'\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { get } from \"lodash\";\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18,\n    },\n  },\n});\n\nexport const MoveConstructSelect = ({instrumentId, onMove=()=>{}}) => {\n  const classes = useStyles();\n\n  const flatTree = useSelector(state => get(state.instrumentTrees, instrumentId, []));\n\n  return (\n    <Autocomplete\n      id=\"country-select-demo\"\n      style={{ width: 300 }}\n      options={flatTree}\n      classes={{\n        option: classes.option,\n      }}\n      onChange={onMove}\n      autoHighlight\n      getOptionLabel={(option) => option.title}\n      renderOption={(option) => (\n        <React.Fragment>\n          {option.title}\n        </React.Fragment>\n      )}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Move to parent construct\"\n          variant=\"outlined\"\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'new-password', // disable autocomplete and autofill\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React from 'react'\nimport {isNil} from 'lodash'\nimport { useDispatch } from 'react-redux'\n\nimport {\n  Grid,\n  Button\n} from '@material-ui/core';\n\nexport const DeleteObjectButton = (props) => {\n  const {instrumentId, id, action, onDelete= () => { console.log('No delete callback provided') }} = props;\n\n  const dispatch=useDispatch()\n\n  const handleDelete = () => {\n    if( !isNil(id) && window.confirm('Are you sure you want to delete this?')){\n      dispatch(action.delete(instrumentId, id, onDelete))\n    }\n  }\n\n  if(isNil(id)){\n    return ''\n  }\n\n  return (\n    <Grid item style={{ marginTop: 16 }}>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={()=>{handleDelete()}}\n      >\n        Delete\n      </Button>\n    </Grid>\n  )\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcConditions } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('condition')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Logic\"\n        name=\"logic\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n];\n\nexport const CcConditionForm = (props) => {\n  const {ccCondition, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccCondition.id || 'new', 'CcCondition')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccCondition, values)\n\n    if(isNil(ccCondition.id)){\n      dispatch(CcConditions.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcConditions.update(instrumentId, ccCondition.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccCondition.id || 'new'} type={'CcCondition'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccCondition}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcConditions} onDelete={()=> { onDelete({ path }) }}/>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { get, isNil, difference } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcQuestions } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { OnChange } from 'react-final-form-listeners'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('question')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((error_key)=>{\n      var key = (['response_unit', 'question'].includes(error_key)) ? `${error_key}_id` : error_key\n      if(isNil(values[key]) || values[key] == ''){\n        return errors[key] = status.errors[error_key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"question_type\"\n          label=\"Type\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='QuestionItem'>Item</MenuItem>\n          <MenuItem value='QuestionGrid'>Grid</MenuItem>\n        </Select>\n      )\n  }\n];\n\nexport const CcQuestionForm = (props) => {\n  const {ccQuestion, instrumentId, onChange, path, onDelete} = props;\n\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  const allResponseUnits = useSelector(state => state.response_units);\n  const responseUnits = get(allResponseUnits, instrumentId, {})\n\n  const [questionOptions, setQuestionOptions] = useState((ccQuestion.question_type === 'QuestionGrid') ? questionGrids : questionItems);\n\n  const changeQuestionOptions = (question_type) => {\n    setQuestionOptions((question_type === 'QuestionGrid') ? questionGrids : questionItems)\n  }\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccQuestion.id || 'new', 'CcQuestion')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccQuestion, values)\n\n    if(isNil(ccQuestion.id)){\n      dispatch(CcQuestions.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcQuestions.update(instrumentId, ccQuestion.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  const intervieweeOptions = () => {\n    const allOptions = ['Cohort/sample member','Main parent of cohort/sample member','Partner of main parent/Father','Child of cohort/panel member','Proxy','Interviewer','Other']\n    const rdOptions = Object.values(responseUnits).map(item => {return item.label})\n    return difference(allOptions, rdOptions);\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccQuestion.id || 'new'} type={'CcQuestion'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccQuestion}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <OnChange name=\"question_type\">\n                  {(value, previous) => {\n                    changeQuestionOptions(value)\n                    values.question_id = null\n                  }}\n                </OnChange>\n                <Grid item xs=\"12\" key=\"question\">\n                  <Select\n                    name=\"question_id\"\n                    label=\"Question\"\n                    formControlProps={{ margin: 'none' }}\n                  >\n                    <MenuItem></MenuItem>\n                    {Object.values(questionOptions).map((item, idx) => (\n                      <MenuItem value={item.id}>{item.label}</MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n                <Grid item xs=\"12\" key=\"response_unit_id\">\n                  <Select\n                    name=\"response_unit_id\"\n                    label=\"Interviewee\"\n                    formControlProps={{ margin: 'none' }}\n                  >\n                    <MenuItem></MenuItem>\n                    {Object.values(responseUnits).map((item, idx) => (\n                      <MenuItem value={item.id}>{item.label}</MenuItem>\n                    ))}\n                    {intervieweeOptions().map((item) => (\n                      <MenuItem value={item}>{item}</MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcQuestions} onDelete={()=> { onDelete({ path }) }} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch } from 'react-redux'\nimport { CcStatements } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('statement')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] === ''){\n        errors[key] = status.errors[key][0];\n        return\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={false}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={false}\n      />\n    ),\n  },\n];\n\nexport const CcStatementForm = (props) => {\n  const {ccStatement, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccStatement.id || 'new', 'CcStatement')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccStatement, values)\n\n    if(isNil(ccStatement.id)){\n      dispatch(CcStatements.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcStatements.update(instrumentId, ccStatement.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccStatement.id || 'new'} type={'CcStatement'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccStatement}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcStatements} onDelete={()=> { onDelete({ path }) }} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcSequences } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('sequence')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n];\n\nexport const CcSequenceForm = (props) => {\n  const {ccSequence, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccSequence.id || 'new', 'CcSequence')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccSequence, values)\n\n    if(isNil(ccSequence.id)){\n      dispatch(CcSequences.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcSequences.update(instrumentId, ccSequence.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccSequence.id || 'new'} type={'CcSequence'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccSequence}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcSequences} onDelete={()=> { onDelete({ path }) }} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcLoops } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('loop')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n   if (!values.start_val) {\n     errors.start_val = 'Required';\n   }\n   if (!values.loop_var) {\n     errors.loop_var = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Variable\"\n        name=\"loop_var\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Start Value\"\n        name=\"start_val\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"End Value\"\n        name=\"end_val\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Loop While\"\n        name=\"loop_while\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nexport const CcLoopForm = (props) => {\n  const {ccLoop, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccLoop.id || 'new', 'CcLoop')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccLoop, values)\n\n    if(isNil(ccLoop.id)){\n      dispatch(CcLoops.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcLoops.update(instrumentId, ccLoop.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccLoop.id || 'new'} type={'CcLoop'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccLoop}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcLoops} onDelete={()=> { onDelete({ path }) }}/>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcLoops, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, ResponseUnits, InstrumentTree } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { MoveConstructSelect } from '../components/MoveConstructSelect'\nimport { CcConditionForm } from '../components/CcConditionForm'\nimport { CcQuestionForm } from '../components/CcQuestionForm'\nimport { CcStatementForm } from '../components/CcStatementForm'\nimport { CcSequenceForm } from '../components/CcSequenceForm'\nimport { CcLoopForm } from '../components/CcLoopForm'\nimport { Loader } from '../components/Loader'\nimport { ObjectColour } from '../support/ObjectColour'\nimport { get, isEmpty, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\n\nimport SearchBar from \"material-ui-search-bar\";\n\nimport {\n  Button,\n  ButtonGroup,\n  Divider\n} from '@material-ui/core';\n\nimport {\n  Alert,\n  AlertTitle\n} from '@material-ui/lab';\n\nimport SortableTree, { addNodeUnderParent, removeNodeAtPath, getFlatDataFromTree, changeNodeAtPath, toggleExpandedForAll } from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css'; // This only needs to be imported once in your app\n\nconst TreeNode = (instrumentId, type, id, expanded=false) => {\n  var item = ObjectFinder(instrumentId, type, id)\n  var children;\n\n  if(item.type === \"condition\"){\n    children = get(item, 'children',[])\n    var fchildren = get(item, 'fchildren',[])\n\n    var trueAndFalse = [\n      { title: `True`, expanded: expanded, conditionId: item.id, type: 'conditionTrue', children: children.map(child => TreeNode(instrumentId, child.type, child.id)) },\n      { title: `False`, expanded: expanded, conditionId: item.id, type: 'conditionFalse', children: fchildren.map(child => TreeNode(instrumentId, child.type, child.id)) },\n    ]\n    return {...item, ...{ title: `${item.label}`, expanded: expanded, type: item.type, children: trueAndFalse } }\n  }else{\n    children = get(item, 'children',[])\n\n    return {...item, ...{ title: `${item.label}`, expanded: expanded, type: item.type, children: children.map(child => TreeNode(instrumentId, child.type, child.id)) } }\n  }\n}\n\nconst TreeNodeFormatter = (instrumentId, item) => {\n  return {...item, ...{ title: `${item.label}`, expanded: true, type: item.type } }\n}\n\nconst Tree = (props) => {\n  const { topSequence, instrumentId, dispatch, onNodeSelect } = props\n  const [treeData, setTreeData] = useState([TreeNode(instrumentId, 'CcSequence', topSequence.id, true)]);\n  const [selectedNode, setSelectedNode] = useState({});\n\n//  const [expanded, setExpanded] = useState(true);\n  const classes = useStyles();\n\n  const [searchString, setSearchString] = useState();\n  const [searchFocusIndex, setSearchFocusIndex] = useState();\n  const [searchFoundCount, setSearchFoundCount] = useState();\n\n  // Case insensitive search of `node.title`\n  const customSearchMethod = ({ node, searchQuery }) =>\n    searchQuery &&\n    node.title.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1;\n\n  const selectPrevMatch = () =>\n      setSearchFocusIndex(\n        searchFocusIndex !== null\n          ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\n          : searchFoundCount - 1\n      );\n\n  const selectNextMatch = () =>\n    setSearchFocusIndex(\n        searchFocusIndex !== null\n          ? (searchFocusIndex + 1) % searchFoundCount\n          : 0,\n    );\n\n  const getNodeKey = ({ treeIndex }) => treeIndex;\n\n  const updateNode = ({ node, path }) => {\n    var data = changeNodeAtPath({\n        treeData: treeData,\n        path,\n        getNodeKey,\n        newNode: TreeNodeFormatter(instrumentId, node)\n      })\n      setTreeData(data)\n      reorderConstructs(data)\n  }\n\n  const deleteNode = ({ path }) => {\n    onNodeSelect({})\n    setTreeData(removeNodeAtPath({\n                    treeData: treeData,\n                    path,\n                    getNodeKey,\n    }));\n  }\n\n  const canHaveChildren = (node) => {\n    return (node.type === 'sequence' || node.type === 'loop' || node.type === 'conditionTrue' || node.type === 'conditionFalse')\n  }\n\n  const canDrop = ({ node, nextParent, prevPath, nextPath }) => {\n    if (!isNil(nextParent) && canHaveChildren(nextParent)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const toggleExpand = (expanded) => {\n    setTreeData(toggleExpandedForAll({\n                    treeData: treeData,\n                    expanded: expanded\n    }));\n  }\n\n  const moveableNodesArray = (data) => {\n    return getFlatDataFromTree({\n      treeData: data,\n      getNodeKey: ({ node }) => { return { id: node.id, type: node.type } }, // This ensures your \"id\" properties are exported in the path\n      ignoreCollapsed: false, // Makes sure you traverse every node in the tree, not just the visible ones\n    }).map(({ node, path }) => {\n      if(!canHaveChildren(node)){\n        return null\n      }\n      if(['conditionTrue', 'conditionFalse'].includes(node.type)){\n        return null\n      }\n      return {\n        id: node.id,\n        type: node.type,\n        title: node.title,\n        path: path\n      }\n    }).filter(el => el != null);\n  }\n\n  dispatch(InstrumentTree.create(instrumentId, moveableNodesArray(treeData)));\n\n  const orderArray = (data) => {\n    return getFlatDataFromTree({\n      treeData: data,\n      getNodeKey: ({ node }) => { return { id: node.id, type: node.type, children: node.children.map(child => `type ${child.type} id ${child.id}` ) } }, // This ensures your \"id\" properties are exported in the path\n      ignoreCollapsed: false, // Makes sure you traverse every node in the tree, not just the visible ones\n    }).map(({ node, path }) => {\n      if(['conditionTrue', 'conditionFalse'].includes(node.type)){\n        if(node.id === 172015 || node.id === 36397 || node.id === 36396){\n          console.log('nope')\n        }\n        return null\n      }\n      let parent = path[path.length - 2]\n      let branch = (parent !== undefined && parent.type === 'conditionFalse') ? 1 : 0\n      let position = (parent !== undefined) ? parent.children.indexOf(`type ${node.type} id ${node.id}`) + 1 : node.position\n      if(parent !== undefined && ['conditionTrue', 'conditionFalse'].includes(parent.type)){\n        parent = path[path.length - 3]\n      }\n      const data = {\n        id: node.id,\n        type: node.type,\n        position: position,\n        branch: branch,\n        // // The last entry in the path is this node's key\n        // // The second to last entry (accessed here) is the parent node's key\n        parent: (parent !== undefined) ? { id: parent.id, type: parent.type } : {},\n      }\n\n      return data\n    }).filter(el => el != null);\n  }\n\n  const reorderConstructs = (data) => {\n    dispatch(Instrument.reorderConstructs(instrumentId, orderArray(data)));\n  }\n\n  const generateButtons = (node, path) => {\n      var buttons = []\n      if(canHaveChildren(node)){\n        buttons.push(\n              <button\n              onClick={(event) => {\n                  setTreeData(addNodeUnderParent({\n                    treeData: treeData,\n                    parentKey: path[path.length - 1],\n                    expandParent: true,\n                    getNodeKey,\n                    newNode: {\n                      title: `Click to select construct type`,\n                      children: []\n                    }\n                  }).treeData)\n                  event.stopPropagation()\n                  setSelectedNode({node: { type: undefined }})\n              }}\n            >\n              <AddIcon />\n            </button>\n        )\n      }\n      return buttons;\n  }\n\n  return (\n    <div style={{ height: 10000 }}>\n\n    <SearchBar\n      placeholder=\"Search (press return to perform search)\"\n      onRequestSearch={(newValue) =>\n              setSearchString(newValue)\n            }\n      onCancelSearch={() => {\n              setSearchString()\n            }}\n    />\n\n    {searchFoundCount === 0 && !isNil(searchString) && (\n      <Alert severity=\"error\">\n        <AlertTitle>Error</AlertTitle>\n        No results found.\n      </Alert>\n    )}\n\n    {searchFoundCount > 0 && !isNil(searchString) && (\n      <>\n        <span>\n          &nbsp;\n          {searchFoundCount > 0 ? searchFocusIndex + 1 : 0}\n          &nbsp;of&nbsp;\n          {searchFoundCount || 0} matches\n        </span>\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n          <Button onClick={selectPrevMatch}>&lt; Prev</Button>\n          <Button onClick={selectNextMatch}>&gt; Next</Button>\n        </ButtonGroup>\n      </>\n    )}\n\n      <Divider className={classes.divider}/>\n\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button onClick={()=>{toggleExpand(true)}} startIcon={<ExpandMoreIcon />}>Expand All</Button>\n        <Button onClick={()=>{toggleExpand(false)}} startIcon={<ExpandLessIcon />}>Collapse All</Button>\n      </ButtonGroup>\n\n      <SortableTree\n        treeData={treeData}\n        onChange={newTreeData => { setTreeData(newTreeData); reorderConstructs(newTreeData) } }\n        canNodeHaveChildren={node => canHaveChildren(node)}\n        canDrop={canDrop}\n        canDrag={({node}) =>{\n          return !['conditionTrue', 'conditionFalse'].includes(node.type)\n        }}\n        searchMethod={customSearchMethod}\n        searchQuery={searchString}\n        searchFocusOffset={searchFocusIndex}\n        searchFinishCallback={(matches) => {\n          setSearchFoundCount(matches.length)\n          setSearchFocusIndex(matches.length > 0 ? searchFocusIndex % matches.length : 0)\n        }}\n        generateNodeProps={({ node, path }) => {\n          const boxShadow = (node === selectedNode || node.type == 'sequence' ) ? `0px 0px 15px 3px  #${ObjectColour(node.type)}` : ''\n\n          return (\n            {\n              style: {\n                boxShadow: boxShadow,\n              },\n              onClick: () => {\n                onNodeSelect({ node: node, path: path,  callback: ({ node, path }) => { updateNode({ node, path }) }, deleteCallback: ({ path }) => { deleteNode({ path }) } });\n                setSelectedNode(node);\n              },\n              buttons: generateButtons(node, path),\n              className: `${node.type}:${node.id}`\n            }\n          )\n        }}\n      />\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  main: {\n    'min-height': '1200px'\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n    right: '5px'\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  paper:{\n    boxShadow :`5px 5px 10px 5px  #${ObjectColour('default')}`\n  },\n  statement:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('statement')}`,\n    'margin-bottom': '10px'\n  },\n  sequence:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('sequence')}`,\n    'margin-bottom': '10px'\n  },\n  question:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('question')}`,\n    'margin-bottom': '10px'\n  },\n  loop:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('loop')}`,\n    'margin-bottom': '10px'\n  },\n  condition:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('condition')}`,\n    'margin-bottom': '10px'\n  },\n  divider:{\n    margin: '25px'\n  }\n}));\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const loops = useSelector(state => state.cc_loops);\n  const cc_loops = get(loops, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcLoop'){\n    item = get(cc_loops, id.toString(), {})\n    item.type = 'loop'\n  }\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n    item.type = 'sequence'\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n    item.type = 'statement'\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n    item.type = 'condition'\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n    item.type = 'question'\n  }\n\n  return item\n\n}\n\n// This a WIP section to allows a node to moved to another parent\n// useful when you want to move a construct outside of the virtualised portal.\nconst MoveConstructForm = ({instrumentId}) => {\n  return <MoveConstructSelect instrumentId={instrumentId} onMove={(event, value)=>{ console.log(value)}}/>\n}\n\nconst ConstructForm = (props) => {\n  const {object, instrumentId, onNodeSelect} = props;\n  const { node={}, path, callback=(node)=>{ console.log('No onChange callback provided')}, deleteCallback=(node)=>{ console.log('No onDelete callback provided')} } = object;\n\n  switch (node.type) {\n    case 'question':\n      return <CcQuestionForm ccQuestion={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'statement':\n      return <CcStatementForm ccStatement={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'sequence':\n      return <CcSequenceForm ccSequence={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'condition':\n      return <CcConditionForm ccCondition={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'loop':\n      return <CcLoopForm ccLoop={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case undefined:\n      return <NewConstructQuestion onNodeSelect={onNodeSelect} object={object}/>\n    default:\n      return ''\n  }\n\n}\n\nconst NewConstructQuestion = (props) => {\n  const {object, onNodeSelect} = props;\n\n  const classes = useStyles();\n\n  return (\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <h3>Select construct type</h3>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.question}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'question' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Question\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.condition}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'condition' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Condition\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.loop}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'loop' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Loop\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.sequence}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'sequence' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Sequence\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.statement}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'statement' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Statement\n                  </Button>\n          </Paper>\n  )\n\n}\n\nconst InstrumentConstructBuild = (props) => {\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, null)\n\n  const [selectedNode, setSelectedNode] = useState({});\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(Instrument.show(instrumentId)),\n      dispatch(CcSequences.all(instrumentId)),\n      dispatch(CcStatements.all(instrumentId)),\n      dispatch(CcConditions.all(instrumentId)),\n      dispatch(CcLoops.all(instrumentId)),\n      dispatch(CcQuestions.all(instrumentId)),\n      dispatch(QuestionItems.all(instrumentId)),\n      dispatch(QuestionGrids.all(instrumentId)),\n      dispatch(ResponseUnits.all(instrumentId))\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sequence = (isEmpty(cc_sequences) || isNil(cc_sequences)) ? undefined : Object.values(cc_sequences).find(element => element.top == true)\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Build'} instrumentId={instrumentId}>\n        <h1>{get(instrument, 'label')}</h1>\n      {!dataLoaded\n        ? <Loader />\n        : (\n          <Grid container spacing={3} className={classes.main}>\n            <Grid item xs={(isEmpty(selectedNode)) ? 12 : 12 }>\n              <Tree topSequence={sequence.children[0]} instrumentId={instrumentId} onNodeSelect={setSelectedNode} dispatch={dispatch} />\n            </Grid>\n            {!isEmpty(selectedNode) && (\n              <Grid item xs={4} className={classes.side}>\n                <ConstructForm object={selectedNode} instrumentId={instrumentId} onNodeSelect={setSelectedNode} />\n              </Grid>\n            )}\n          </Grid>\n        )\n      }\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentConstructBuild;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CodeLists } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport {\n  TextField,\n  Checkboxes,\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <Checkboxes\n        name=\"rd\"\n        formControlProps={{ margin: 'none' }}\n        data={{ label: 'Response Domain', value: true }}\n      />\n    ),\n  },\n  {\n    size: 12,\n    visible: (values) => {\n      return get(values, 'rd', false)\n    },\n    field: <TextField name=\"min_responses\" multiline label=\"Min Responses\" margin=\"none\" />,\n  },\n  {\n    size: 12,\n    visible: (values) => {\n      return get(values, 'rd', false)\n    },\n    field: <TextField name=\"max_responses\" multiline label=\"Max Responses\" margin=\"none\" />,\n  }\n];\n\nconst FormField = (props) => {\n  const {item, values} = props\n\n  if(item.visible !== undefined && !item.visible(values) ){\n    return ''\n  }\n\n  if(item.type && item.type === 'select'){\n    return item.field()\n  }else{\n    return item.field\n  }\n}\n\nexport const CodeListForm = (props) => {\n  const {codeList, instrumentId} = props;\n\n  const categories = useSelector(state => get(state.categories, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n      values = ObjectCheckForInitialValues(codeList, values)\n\n    if(isNil(codeList.id)){\n      dispatch(CodeLists.create(instrumentId, values))\n    }else{\n      dispatch(CodeLists.update(instrumentId, codeList.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={codeList.id || 'new'} type={'CodeList'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={codeList}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    <FormField item={item} values={values} />\n                  </Grid>\n                ))}\n                <h3>Codes</h3>\n                  <AddCircleOutlineIcon onClick={() => push('codes', {})}/>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>ID</TableCell>\n                        <TableCell size=\"small\">Value</TableCell>\n                        <TableCell>Label</TableCell>\n                        <TableCell>Actions</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                            <FieldArray name=\"codes\">\n                              {({ fields }) =>\n                                fields.map((name, index) => (\n                                  <TableRow key={name}>\n                                    <TableCell>\n                                      {fields.value[index].id}\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      <TextField name={`${name}.value`} multiline label=\"Value\" margin=\"none\" />\n                                    </TableCell>\n                                    <TableCell>\n                                     <Autocomplete\n                                      freesolo=\"true\"\n                                      options={Object.values(categories)}\n                                      getOptionLabel={(option) => option.label}\n                                      onChange={(event, value, reason)=>{\n                                        if(isNil(value)){\n                                          fields.update(index, {...fields.value[index], ...{category_id: null, label: null} })\n                                        }else{\n                                          fields.update(index, {...fields.value[index], ...{category_id: value.id, label: value.label} })\n                                        }\n                                      } }\n                                      value={{id: fields.value[index].category_id, label:fields.value[index].label}}\n                                      getOptionSelected= {(option, value) => (\n                                        option.id === value.id\n                                      )}\n                                      renderInput={(params) => (\n                                        <TextField name={`${name}.label`}\n                                          {...params}\n                                          variant=\"outlined\"\n                                          label=\"Label\"\n                                          placeholder=\"label\"\n                                        />\n                                      )}\n                                    />\n                                    </TableCell>\n                                    <TableCell>\n                                      <span\n                                        onClick={() => fields.remove(index)}\n                                        style={{ cursor: 'pointer' }}\n                                      >\n                                        <DeleteIcon />\n                                      </span>\n                                    </TableCell>\n                                  </TableRow>\n                                ))\n                              }\n                            </FieldArray>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CodeLists} />\n              </Grid>\n              <Grid item style={{ marginTop: 16 }}>\n                <h3>Used By</h3>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>ID</TableCell>\n                        <TableCell size=\"small\">Question Type</TableCell>\n                        <TableCell>Label</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                              {codeList.used_by.map((question) => (\n                                  <TableRow key={question.id}>\n                                    <TableCell>\n                                      <Button variant=\"outlined\">\n                                        <Link to={url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: question.id })}>{question.id}</Link>\n                                      </Button>\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      {question.type}\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      {question.label}\n                                    </TableCell>\n                                  </TableRow>\n                                ))\n                              }\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { useHistory } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst ObjectTypeLookup = (objectType, instrumentId) => {\n    switch(objectType) {\n      case('ResponseDomainNumeric'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Numeric'\n        }\n      case('ResponseDomainText'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Text'\n        }\n      case('ResponseDomainDatetime'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Datetime'\n        }\n      case('CodeList'):\n        return {\n          path: url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: 'new' }),\n          text: 'New CodeList'\n        }\n      case('QuestionItem'):\n        return {\n          path: url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: 'new' }),\n          text: 'Question Item'\n        }\n      case('QuestionGrid'):\n        return {\n          path: url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: 'new' }),\n          text: 'Question Grid'\n        }\n      default:\n        return {\n          path: '/',\n          text: 'Not found'\n        }\n  }\n}\n\nexport const CreateNewBuildObjectButtons  = (props) => {\n  const { objectTypes=[], instrumentId, callback=()=>{}} = props;\n\n  const history = useHistory();\n\n  const createNew = (path) => {\n    history.push(path);\n    callback('new')\n  }\n\n  const buttons = objectTypes.map( objectType => ObjectTypeLookup(objectType, instrumentId) )\n\n  return (\n    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n     {buttons.map((button) => {\n        return <Button onClick={()=> { createNew(button.path)} }startIcon={<AddIcon />}>{button.text}</Button>\n      })}\n    </ButtonGroup>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CodeLists, Categories } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { CodeListForm } from '../components/CodeListForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildCodeLists = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const codeListId = get(props, \"match.params.codeListId\", null);\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n  const selectedCodeList = get(codeLists, codeListId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(CodeLists.all(instrumentId));\n    dispatch(Categories.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const CodeListItem = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleCodeListSelection(id)}}/>\n        <ListItemSecondaryAction>\n          <Chip label={value} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  const handleCodeListSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: id })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Code Lists</h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['CodeList']} />\n              <List dense={true}>\n                {Object.values(codeLists).map((codeList) => {\n                  return (\n                    <CodeListItem label={codeList.label} value={codeList.used_by.length} id={codeList.id} />\n                  )\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              {!isNil(selectedCodeList) && (\n                <CodeListForm codeList={selectedCodeList} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildCodeLists;\n","import React, { useEffect } from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionItems, ResponseDomainNumerics, ResponseDomainTexts, ResponseDomainDatetimes, ResponseDomainCodes } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  Table,\n  TableContainer,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport {\n  Autocomplete\n} from '@material-ui/lab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Instruction\"\n        name=\"instruction\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nexport const QuestionItemForm = (props) => {\n  const {questionItem, instrumentId} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const responseDomainCodes = useSelector(state => get(state.responseDomainCodes, instrumentId, {}));\n  const responseDomainNumerics = useSelector(state => get(state.responseDomainNumerics, instrumentId, {}));\n  const responseDomainTexts = useSelector(state => get(state.responseDomainTexts, instrumentId, {}));\n  const responseDomainDatetimes = useSelector(state => get(state.responseDomainDatetimes, instrumentId, {}));\n\n  const responseDomains = [...Object.values(responseDomainCodes), ...Object.values(responseDomainNumerics), ...Object.values(responseDomainTexts), ...Object.values(responseDomainDatetimes)]\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(questionItem, values)\n\n    if(isNil(questionItem.id)){\n      dispatch(QuestionItems.create(instrumentId, values))\n    }else{\n      dispatch(QuestionItems.update(instrumentId, questionItem.id, values))\n    }\n  }\n\n  useEffect(() => {\n    dispatch(ResponseDomainCodes.all(instrumentId));\n    dispatch(ResponseDomainNumerics.all(instrumentId));\n    dispatch(ResponseDomainTexts.all(instrumentId));\n    dispatch(ResponseDomainDatetimes.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={questionItem.id || 'new'} type={'QuestionItem'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={questionItem}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.field}\n                  </Grid>\n                ))}\n                <h3>Response Domains</h3>\n                <AddCircleOutlineIcon onClick={() => push('rds', {})}/>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Type and Label</TableCell>\n                          <TableCell>Actions</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <FieldArray name=\"rds\">\n                          {({ fields }) =>\n                            fields.map((name, index) => (\n                              <TableRow key={name}>\n                                <TableCell>\n                                 <Autocomplete\n                                  freesolo=\"true\"\n                                  options={Object.values(responseDomains)}\n                                  getOptionLabel={(option) => `${option.type} - ${option.label}`}\n                                  onChange={(event, value, reason)=>{\n                                    if(isNil(value)){\n                                      fields.update(index, {...fields.value[index], ...{type: null, id: null, label: null} })\n                                    }else{\n                                      fields.update(index, {...fields.value[index], ...{type: value.type, id: value.id, label: value.label} })\n                                    }\n                                  } }\n                                  value={{type: fields.value[index].type, id: fields.value[index].id, label:fields.value[index].label}}\n                                  getOptionSelected= {(option, value) => (\n                                    option.type === value.type && option.id === value.id\n                                  )}\n                                  renderInput={(params) => (\n                                    <TextField name={`${name}.type - ${name}.label`}\n                                      {...params}\n                                      variant=\"outlined\"\n                                      label=\"Label\"\n                                      placeholder=\"label\"\n                                    />\n                                  )}\n                                />\n                                </TableCell>\n                                <TableCell>\n                                  <span\n                                    onClick={() => fields.remove(index)}\n                                    style={{ cursor: 'pointer' }}\n                                  >\n                                    <DeleteIcon />\n                                  </span>\n                                </TableCell>\n                              </TableRow>\n                            ))\n                          }\n                        </FieldArray>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={QuestionItems} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionItems } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { QuestionItemForm } from '../components/QuestionItemForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildQuestionItems = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const questionItemId = get(props, \"match.params.questionItemId\", null);\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const questionItems = useSelector(state => get(state.questionItems, instrumentId, {}));\n  const selectedQuestion = get(questionItems, questionItemId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(QuestionItems.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const QuestionItem = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleQuestionSelection(id)}}/>\n      </ListItem>\n    )\n  }\n\n  const handleQuestionSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: id })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Question Items <Link to={url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })}>Question Grids</Link></h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['QuestionItem', 'QuestionGrid']} />\n              <List dense={true}>\n                {Object.values(questionItems).map((questionItem) => {\n                  return <QuestionItem label={questionItem.label} id={questionItem.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              {!isNil(selectedQuestion) && (\n                <QuestionItemForm questionItem={selectedQuestion} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildQuestionItems;\n","import React, { useEffect } from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionGrids, ResponseDomainNumerics, ResponseDomainTexts, ResponseDomainDatetimes, ResponseDomainCodes } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { OnChange } from 'react-final-form-listeners'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem,\n  Table,\n  TableContainer,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport {\n  Autocomplete\n} from '@material-ui/lab';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Instruction\"\n        name=\"instruction\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    type: 'select',\n    size: 12,\n    field: (options) => (\n      <Select\n        name=\"horizontal_code_list_id\"\n        label=\"Horizontal Code List (X)\"\n        formControlProps={{ margin: 'none' }}\n      >\n        <MenuItem></MenuItem>\n        {options.map((item, idx) => (\n          <MenuItem value={item.id}>{item.label}</MenuItem>\n        ))}\n      </Select>\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"vertical_code_list_id\"\n          label=\"Vertical Code List (Y)\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          {options.map((item, idx) => (\n            <MenuItem value={item.id}>{item.label}</MenuItem>\n          ))}\n        </Select>\n      )\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"corner_label\"\n          label=\"Corner Label\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='H'>Horizontal</MenuItem>\n          <MenuItem value='V'>Vertical</MenuItem>\n        </Select>\n      )\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Roster Label\"\n        name=\"roster_label\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Roster Row Number\"\n        name=\"roster_rows\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nexport const QuestionGridForm = (props) => {\n  const {questionGrid, instrumentId} = props;\n\n  var codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  // Only show response domains in the list of codeLists\n  codeLists = Object.values(codeLists).filter((cl) => { return cl.rd === false})\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(questionGrid, values)\n\n    if(isNil(questionGrid.id)){\n      dispatch(QuestionGrids.create(instrumentId, values))\n    }else{\n      dispatch(QuestionGrids.update(instrumentId, questionGrid.id, values))\n    }\n  }\n\n  const responseDomainCodes = useSelector(state => get(state.responseDomainCodes, instrumentId, {}));\n  const responseDomainNumerics = useSelector(state => get(state.responseDomainNumerics, instrumentId, {}));\n  const responseDomainTexts = useSelector(state => get(state.responseDomainTexts, instrumentId, {}));\n  const responseDomainDatetimes = useSelector(state => get(state.responseDomainDatetimes, instrumentId, {}));\n\n  const responseDomains = [...Object.values(responseDomainCodes), ...Object.values(responseDomainNumerics), ...Object.values(responseDomainTexts), ...Object.values(responseDomainDatetimes)]\n\n  useEffect(() => {\n    dispatch(ResponseDomainCodes.all(instrumentId));\n    dispatch(ResponseDomainNumerics.all(instrumentId));\n    dispatch(ResponseDomainTexts.all(instrumentId));\n    dispatch(ResponseDomainDatetimes.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  console.log(questionGrid)\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={questionGrid.id || 'new'} type={'QuestionGrid'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={questionGrid}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <OnChange name=\"horizontal_code_list_id\">\n                  {(value, previous) => {\n                    const codeList = codeLists.find(el => el.id === value)\n                    if(codeList){\n                      values.cols = codeList.codes.map((code) => {\n                        return {\n                          label: code.label,\n                          value: code.value,\n                          order: code.order\n                        }\n                      })\n                    }\n                  }}\n                </OnChange>\n                <h3>Response Domains</h3>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Column</TableCell>\n                          <TableCell>Type and Label</TableCell>\n                          <TableCell>Actions</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <FieldArray name=\"cols\">\n                          {({ fields }) =>\n                            fields.map((name, index) => (\n                              <TableRow key={name}>\n                                <TableCell>{fields.value[index].label}</TableCell>\n                                <TableCell>\n                                 <Autocomplete\n                                  autoComplete\n                                  options={Object.values(responseDomains)}\n                                  getOptionLabel={(option) => (option.type === '') ? `` :`${option.label} - ${option.type}`}\n                                  onChange={(event, value, reason)=>{\n                                    var rd;\n                                    if(isNil(value)){\n                                      rd = {...fields.value[index].rd, ...{type: '', id: null, label: ''} }\n                                    }else{\n                                      rd = {...fields.value[index].rd, ...{type: value.type, id: value.id, label: value.label} }\n                                    }\n                                    fields.update(index, {...fields.value[index], ...{rd: rd} })\n                                  } }\n                                  value={(fields.value[index].rd) ? {type: fields.value[index].rd.type, id: fields.value[index].rd.id, label:fields.value[index].rd.label} : {type: '', id: null, label: ''}}\n                                  getOptionSelected= {(option, value) => {\n                                    console.log(fields)\n                                    return (\n                                    (option.type === value.type && option.id === value.id)\n                                  )}}\n                                  renderInput={(params) => (\n                                    <TextField name={`${name}.type - ${name}.label`}\n                                      {...params}\n                                      variant=\"outlined\"\n                                      label=\"Label\"\n                                      placeholder=\"label\"\n                                    />\n                                  )}\n                                />\n                                </TableCell>\n                                <TableCell>\n                                  <span\n                                    onClick={() => fields.update(index, {...fields.value[index], ...{rd: {type: '', id: null, label: ''} } }) }\n                                    style={{ cursor: 'pointer' }}\n                                  >\n                                    <DeleteIcon />\n                                  </span>\n                                </TableCell>\n                              </TableRow>\n                            ))\n                          }\n                        </FieldArray>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={QuestionGrids} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionGrids, CodeLists } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { QuestionGridForm } from '../components/QuestionGridForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildQuestionGrids = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const [questionGridId, setquestionGridId] = React.useState(get(props, \"match.params.questionGridId\", null));\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const questionGrids = useSelector(state => get(state.questionGrids, instrumentId, {}));\n  const selectedQuestion = get(questionGrids, questionGridId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(QuestionGrids.all(instrumentId));\n    dispatch(CodeLists.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const QuestionGrid = (props) => {\n    const {label, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleQuestionSelection(id)}}/>\n      </ListItem>\n    )\n  }\n\n  const handleQuestionSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: id })\n    history.push(path);\n    setquestionGridId(id)\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Question Grids <Link to={url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })}>Question Items</Link></h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['QuestionItem', 'QuestionGrid']} callback={setquestionGridId} />\n              <List dense={true}>\n                {Object.values(questionGrids).map((questionGrid) => {\n                  return <QuestionGrid label={questionGrid.label} id={questionGrid.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              {!isNil(selectedQuestion) && (\n                <QuestionGridForm questionGrid={selectedQuestion} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildQuestionGrids;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainNumerics } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n   if (!values.subtype) {\n     errors.subtype = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"subtype\"\n          label=\"Type\"\n          formControlProps={{ margin: 'none' }}\n          required={true}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='Integer'>Integer</MenuItem>\n          <MenuItem value='Float'>Float</MenuItem>\n        </Select>\n      )\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Min\"\n        name=\"min\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Max\"\n        name=\"max\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nexport const ResponseDomainNumericForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(responseDomain, values)\n\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainNumerics.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainNumerics.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainNumerics} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainTexts } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\n\nimport {\n  TextField\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline\n} from '@material-ui/core';\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Max Length\"\n        name=\"maxlen\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nexport const ResponseDomainTextForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(responseDomain, values)\n\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainTexts.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainTexts.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainTexts} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainDatetimes } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n   if (!values.subtype) {\n     errors.subtype = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    type: 'select',\n    size: 12,\n    field: (options) => (\n      <Select\n        name=\"subtype\"\n        label=\"Type\"\n        formControlProps={{ margin: 'none' }}\n        required={true}\n      >\n        <MenuItem value=\"Date\">Date</MenuItem>\n        <MenuItem value=\"Time\">Time</MenuItem>\n        <MenuItem value=\"Duration\">Duration</MenuItem>\n      </Select>\n    ),\n  },\n  {\n    size: 12,\n    visible: (values) => {\n      return get(values, 'subtype', '') === 'Duration'\n    },\n    field: (\n      <TextField\n        label=\"Format\"\n        name=\"format\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nconst FormField = (props) => {\n  const {item, values} = props\n\n  if(item.visible !== undefined && !item.visible(values) ){\n    return ''\n  }\n\n  if(item.type && item.type === 'select'){\n    return item.field()\n  }else{\n    return item.field\n  }\n}\n\nexport const ResponseDomainDatetimeForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(responseDomain, values)\n\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainDatetimes.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainDatetimes.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    <FormField item={item} values={values} />\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainDatetimes} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainNumerics, ResponseDomainTexts, ResponseDomainDatetimes } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { ResponseDomainNumericForm } from '../components/ResponseDomainNumericForm'\nimport { ResponseDomainTextForm } from '../components/ResponseDomainTextForm'\nimport { ResponseDomainDatetimeForm } from '../components/ResponseDomainDatetimeForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildResponseDomains = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const responseDomainId = get(props, \"match.params.responseDomainId\", null)\n  const responseDomainType = get(props, \"match.params.responseDomainType\", null)\n\n  const responseDomainNumerics = useSelector(state => get(state.responseDomainNumerics, instrumentId, {}));\n  const responseDomainTexts = useSelector(state => get(state.responseDomainTexts, instrumentId, {}));\n  const responseDomainDatetimes = useSelector(state => get(state.responseDomainDatetimes, instrumentId, {}));\n\n  const responseDomains = [...Object.values(responseDomainNumerics), ...Object.values(responseDomainTexts), ...Object.values(responseDomainDatetimes)]\n\n  const selectedResponseDomain = responseDomains.find(responseDomain => responseDomain.id === responseDomainId && responseDomain.type === responseDomainType) || {};\n\n  useEffect(() => {\n    dispatch(ResponseDomainNumerics.all(instrumentId));\n    dispatch(ResponseDomainTexts.all(instrumentId));\n    dispatch(ResponseDomainDatetimes.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const ResponseDomainItem = (props) => {\n    const {label, type, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleResponseDomainSelection(type,id)}}/>\n        <ListItemSecondaryAction>\n          <Chip label={type} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  const handleResponseDomainSelection = (type, id) => {\n    const path = url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: type, responseDomainId: id })\n    history.push(path);\n  }\n\n  const responseDomainForm = () => {\n    switch(responseDomainType) {\n      case('ResponseDomainNumeric'):\n          return <ResponseDomainNumericForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      case('ResponseDomainText'):\n          return <ResponseDomainTextForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      case('ResponseDomainDatetime'):\n          return <ResponseDomainDatetimeForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      default:\n        return ''\n    }\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Response Domains</h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['ResponseDomainText', 'ResponseDomainNumeric', 'ResponseDomainDatetime']} />\n              <List dense={true}>\n                {Object.values(responseDomains).map((responseDomain) => {\n                  return <ResponseDomainItem label={responseDomain.label} type={responseDomain.type} id={responseDomain.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              { responseDomainForm() }\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildResponseDomains;\n","const NoMatch = () => {\n\n  return (\n    'NoMatch'\n  )\n}\n\nexport default NoMatch;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport { get } from 'lodash'\n\nconst RedirectFromState = () => {\n  const redirect = useSelector(state => get(state.common, 'redirect'));\n  const dispatch = useDispatch()\n\n  if(redirect){\n    return (\n      <Redirect to={redirect} />\n    )\n  }else{\n    return ''\n  }\n}\n\nexport default RedirectFromState;\n","import React from 'react';\nimport { Switch, BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\n\nimport routes from './routes'\nimport AuthRoute from './AuthRoute'\nimport Login from './pages/Login';\nimport AdminImport from './pages/AdminImport';\nimport AdminImportView from './pages/AdminImportView';\nimport AdminImports from './pages/AdminImports';\nimport AdminInstrumentImportMappings from './pages/AdminInstrumentImportMappings';\nimport AdminDatasetImportMappings from './pages/AdminDatasetImportMappings';\nimport AdminInstruments from './pages/AdminInstruments';\nimport AdminDatasets from './pages/AdminDatasets';\nimport Instruments from './pages/Instruments';\nimport Datasets from './pages/Datasets';\nimport DatasetView from './pages/DatasetView';\nimport InstrumentView from './pages/InstrumentView';\nimport InstrumentNew from './pages/InstrumentNew';\nimport InstrumentEdit from './pages/InstrumentEdit';\nimport InstrumentMap from './pages/InstrumentMap';\nimport InstrumentBuild from './pages/InstrumentBuild';\nimport InstrumentCcConditions from './pages/InstrumentCcConditions';\nimport InstrumentCcLoops from './pages/InstrumentCcLoops';\nimport InstrumentCcQuestions from './pages/InstrumentCcQuestions';\nimport InstrumentCcSequences from './pages/InstrumentCcSequences';\nimport InstrumentCcStatements from './pages/InstrumentCcStatements';\nimport InstrumentConstructBuild from './pages/InstrumentConstructBuild';\nimport InstrumentBuildCodeLists from './pages/InstrumentBuildCodeLists';\nimport InstrumentBuildQuestionItems from './pages/InstrumentBuildQuestionItems';\nimport InstrumentBuildQuestionGrids from './pages/InstrumentBuildQuestionGrids';\nimport InstrumentBuildResponseDomains from './pages/InstrumentBuildResponseDomains';\nimport NoMatch from './pages/NoMatch';\nimport RedirectFromState from './components/RedirectFromState';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  props: {\n    // Name of the component ⚛️\n    MuiButtonBase: {\n      // The properties to apply\n      disableRipple: true, // No more ripple, on the whole application 💣!\n    },\n  },\n  palette: {\n    primary: {\n      main: '#009de6',\n    },\n    secondary: {\n      main: '#652d90',\n    },\n    admin: {\n      main: '#37b34a',\n    },\n    error: {\n      main: '#eb008b',\n    },\n    warning: {\n      main: '#eb008b',\n    },\n    info: {\n      main: '#faaf40',\n    },\n    success: {\n      main: '#37b34a',\n    },\n  }\n});\n\nconst App = () => {\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Router>\n       <div>\n          <RedirectFromState />\n          <Switch>\n            <AuthRoute type=\"guest\" exact path={routes.login} component={Login} />\n            <Route\n              exact\n              path=\"/\"\n              render={() => {return ( <Redirect to={routes.instruments.all} />)}}\n            />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.map.show} component={InstrumentMap} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.show} component={InstrumentBuild} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.new} component={InstrumentNew} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.edit} component={InstrumentEdit} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.show} component={InstrumentView} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.all} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.show} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.new} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.all} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.show} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.new} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.all} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.show} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.new} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.all} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.show} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.new} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.constructs.show} component={InstrumentConstructBuild} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.ccConditions} component={InstrumentCcConditions} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.ccLoops} component={InstrumentCcLoops} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.ccQuestions} component={InstrumentCcQuestions} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.ccSequences} component={InstrumentCcSequences} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.ccStatements} component={InstrumentCcStatements} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.all} component={Instruments} />\n            <AuthRoute type=\"private\" exact path={routes.datasets.all} component={Datasets} />\n            <AuthRoute type=\"private\" exact path={'/datasets/:dataset_id'} component={DatasetView} />\n            <AuthRoute type=\"private\" exact path={routes.admin.datasets.all} component={AdminDatasets} />\n            <AuthRoute type=\"private\" exact path={routes.admin.import} component={AdminImport} />\n            <AuthRoute type=\"private\" exact path={routes.admin.imports.all} component={AdminImports} />\n            <AuthRoute type=\"private\" exact path={routes.admin.imports.show} component={AdminImportView} />\n            <AuthRoute type=\"private\" exact path={routes.admin.instruments.all} component={AdminInstruments} />\n            <AuthRoute type=\"private\" exact path={routes.admin.instruments.importMappings} component={AdminInstrumentImportMappings} />\n            <AuthRoute type=\"private\" exact path={routes.admin.datasets.importMappings} component={AdminDatasetImportMappings} />\n            <AuthRoute type=\"guest\" component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    </MuiThemeProvider>\n  )\n}\n\nexport default App\n","import { combineReducers } from \"redux\";\nimport { get } from 'lodash'\n\nconst serializeSearchesArrayToObject = (array) =>\n  array.reduce((obj, item) => {\n    obj[item.prefix] = item\n   return obj\n  }, {})\n\nconst serializeArrayToObject = (array) =>\n  array.reduce((obj, item) => {\n    obj[item.id] = item\n   return obj\n  }, {})\n\nconst auth = (state = { isAuthUser: !!window.localStorage.getItem(\"jwt\") }, action) => {\n\n  switch (action.type) {\n\n    case 'LOGIN':\n      window.localStorage.setItem('jwt', action.payload.jwt);\n      return { isAuthUser: true }\n    case 'LOGOUT':\n      window.localStorage.removeItem('jwt');\n      return { isAuthUser: false }\n    default:\n      return state\n  }\n}\n\nconst instrumentTrees = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_TREE':\n      return {...state, ...{[action.payload.instrumentId]: action.payload.flatTree}}\n    default:\n      return state\n  }\n}\n\nconst instruments = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENTS':\n      return serializeSearchesArrayToObject(action.payload.instruments)\n    case 'LOAD_INSTRUMENT':\n      return {...state, ...{[action.payload.instrument.prefix]: action.payload.instrument}}\n    default:\n      return state\n  }\n}\n\nconst imports = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_ADMIN_IMPORTS':\n      return serializeArrayToObject(action.payload.imports)\n    case 'LOAD_ADMIN_IMPORT':\n      return {...state, ...{[action.payload.import.id]: action.payload.import}}\n    default:\n      return state\n  }\n}\n\nconst datasets = (state = [], action) => {\n  switch (action.type) {\n    case 'LOAD_DATASETS':\n      return serializeArrayToObject(action.payload.datasets)\n    case 'LOAD_DATASET':\n      return {...state, ...{[action.payload.dataset.id]: action.payload.dataset}}\n    default:\n      return state\n  }\n}\n\nconst instrumentStats = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_STATS':\n      return {...state, ...{[action.payload.instrumentId]: action.payload.stats}}\n    default:\n      return state\n  }\n}\n\nconst cc_sequences = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_SEQUENCES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.sequences)}}\n    case 'LOAD_INSTRUMENT_SEQUENCE':\n      var instrumentSequences = state[action.payload.instrumentId]\n      instrumentSequences[action.payload.sequence.id] = action.payload.sequence\n      return {...state, ...{[action.payload.instrumentId]: instrumentSequences}}\n    default:\n      return state\n  }\n}\n\nconst cc_statements = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_STATEMENTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.statements)}}\n    case 'LOAD_INSTRUMENT_STATEMENT':\n      var instrumentStatements = state[action.payload.instrumentId]\n      instrumentStatements[action.payload.statement.id] = action.payload.statement\n      return {...state, ...{[action.payload.instrumentId]: instrumentStatements}}\n    default:\n      return state\n  }\n}\n\nconst cc_conditions = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CONDITIONS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.conditions)}}\n    case 'LOAD_INSTRUMENT_CONDITION':\n      var instrumentConditions = state[action.payload.instrumentId]\n      instrumentConditions[action.payload.condition.id] = action.payload.condition\n      return {...state, ...{[action.payload.instrumentId]: instrumentConditions}}\n    default:\n      return state\n  }\n}\n\n\nconst cc_loops = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_LOOPS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.loops)}}\n    case 'LOAD_INSTRUMENT_LOOP':\n      var instrumentLoops = state[action.payload.instrumentId]\n      instrumentLoops[action.payload.loop.id] = action.payload.loop\n      return {...state, ...{[action.payload.instrumentId]: instrumentLoops}}\n    default:\n      return state\n  }\n}\n\nconst response_units = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_UNITS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseUnits)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_UNIT':\n      var instrumentResponseUnits = state[action.payload.instrumentId]\n      instrumentResponseUnits[action.payload.responseUnit.id] = action.payload.responseUnit\n      return {...state, ...{[action.payload.instrumentId]: instrumentResponseUnits}}\n    default:\n      return state\n  }\n}\n\nconst cc_questions = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTIONS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION':\n      var instrumentQuestions = state[action.payload.instrumentId]\n      instrumentQuestions[action.payload.question.id] = action.payload.question\n      return {...state, ...{[action.payload.instrumentId]: instrumentQuestions}}\n    default:\n      return state\n  }\n}\n\nconst questionItems = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTION_ITEMS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION_ITEM':\n      var questionItems = get(state, action.payload.instrumentId, {})\n      const revisedQuestionItems = {...questionItems, ...{[action.payload.questionItem.id]: action.payload.questionItem}}\n      return {...state, ...{[action.payload.instrumentId]: revisedQuestionItems}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'QuestionItem'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst questionGrids = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTION_GRIDS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION_GRID':\n      var questionGrids = get(state, action.payload.instrumentId, {})\n      const revisedQuestionGrids = {...questionGrids, ...{[action.payload.questionGrid.id]: action.payload.questionGrid}}\n      return {...state, ...{[action.payload.instrumentId]: revisedQuestionGrids}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'QuestionGrid'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst variables = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_VARIABLES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.variables)}}\n    default:\n      return state\n  }\n}\n\nconst datasetVariables = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_DATASET_VARIABLES':\n      return {...state, ...{[action.payload.datasetId]: serializeArrayToObject(action.payload.variables)}}\n    case 'LOAD_DATASET_VARIABLE':\n      var variables = get(state, action.payload.datasetId, {})\n      const revisedVariables = {...variables, ...{[action.payload.variable.id]: action.payload.variable}}\n      return {...state, ...{[action.payload.datasetId]: revisedVariables}}\n    default:\n      return state\n  }\n}\n\nconst datasetImportMappings = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_DATASET_IMPORT_MAPPINGS':\n      return {...state, ...{[action.payload.id]: serializeArrayToObject(action.payload.importMappings)}}\n    case 'LOAD_DATASET_IMPORT_MAPPING':\n      var importMappings = get(state, action.payload.id, {})\n      const revisedImportMappings = {...importMappings, ...{[action.payload.importMapping.id]: action.payload.importMapping}}\n      return {...state, ...{[action.payload.datasetId]: revisedImportMappings}}\n    default:\n      return state\n  }\n}\n\nconst instrumentImportMappings = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_IMPORT_MAPPINGS':\n      return {...state, ...{[action.payload.id]: serializeArrayToObject(action.payload.importMappings)}}\n    case 'LOAD_INSTRUMENT_IMPORT_MAPPING':\n      var importMappings = get(state, action.payload.id, {})\n      const revisedImportMappings = {...importMappings, ...{[action.payload.importMapping.id]: action.payload.importMapping}}\n      return {...state, ...{[action.payload.datasetId]: revisedImportMappings}}\n    default:\n      return state\n  }\n}\n\nconst codeLists = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CODE_LISTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.codeLists)}}\n    case 'LOAD_INSTRUMENT_CODE_LIST':\n      var codeLists = get(state, action.payload.instrumentId, {})\n      const revisedCodeLists = {...codeLists, ...{[action.payload.codeList.id]: action.payload.codeList}}\n      return {...state, ...{[action.payload.instrumentId]: revisedCodeLists}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'CodeList'){\n        var codeLists = get(state, action.payload.instrumentId, {})\n        delete codeLists[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: codeLists}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainNumerics = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERICS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainNumerics)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERIC':\n      var responseDomainNumerics = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainNumerics, ...{[action.payload.responseDomainNumeric.id]: action.payload.responseDomainNumeric}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainNumeric'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainCodes = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_CODES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainCodes)}}\n    default:\n      return state\n  }\n}\n\nconst responseDomainTexts = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainTexts)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXT':\n      var responseDomainTexts = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainTexts, ...{[action.payload.responseDomainText.id]: action.payload.responseDomainText}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainText'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainDatetimes = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIMES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainDatetimes)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIME':\n      var responseDomainDatetimes = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainDatetimes, ...{[action.payload.responseDomainDatetime.id]: action.payload.responseDomainDatetime}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainDatetime'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst categories = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CATEGORIES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.categories)}}\n    default:\n      return state\n  }\n}\n\nconst topics = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_TOPICS':\n      return {...state, ...serializeArrayToObject(action.payload.topics)}\n    default:\n      return state\n  }\n}\n\nconst statuses = (state = {}, action) => {\n\n  var key;\n\n  switch (action.type) {\n    case 'SAVING':\n      key = action.payload.type + ':' + action.payload.id\n      return {...state, ...{[key]: {saving: true}}}\n    case 'SAVED':\n      key = action.payload.type + ':' + action.payload.id\n      return {...state, ...{[key]: {saved: true}}}\n    case 'ERROR':\n      key = action.payload.type + ':' + action.payload.id\n      if(typeof action.payload.error === 'object' && action.payload.error !== null){\n        return {...state, ...{[key]: {error: true, errors: action.payload.error, errorMessage: ''}}}\n      }else{\n        return {...state, ...{[key]: {error: true, errorMessage: action.payload.error}}}\n      }\n    default:\n      return state\n  }\n}\n\nconst common = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'REDIRECT':\n      return {...state, ...{redirect: action.payload.to}}\n    case 'REDIRECT_CLEAR':\n      return {...state, ...{redirect: undefined}}\n    default:\n      return state\n  }\n}\n\n\nconst appReducer = combineReducers({\n    common,\n    auth,\n    datasets,\n    instruments,\n    instrumentTrees,\n    imports,\n    instrumentStats,\n    cc_sequences,\n    cc_statements,\n    cc_conditions,\n    cc_loops,\n    cc_questions,\n    response_units,\n    questionItems,\n    questionGrids,\n    categories,\n    codeLists,\n    responseDomainNumerics,\n    responseDomainTexts,\n    responseDomainDatetimes,\n    responseDomainCodes,\n    datasetVariables,\n    variables,\n    statuses,\n    topics,\n    datasetImportMappings,\n    instrumentImportMappings,\n})\n\nexport default appReducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport reducers from \"./../reducers\";\nimport thunk from \"redux-thunk\"\n\nexport default createStore(reducers, applyMiddleware(thunk));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport Store from './components/Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}