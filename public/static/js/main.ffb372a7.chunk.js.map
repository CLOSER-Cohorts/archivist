{"version":3,"sources":["routes.js","AuthRoute.js","actions/index.js","pages/Login.js","components/BreadcrumbBar.js","components/Dashboard.js","pages/Instruments.js","support/ObjectColour.js","components/Loader.js","pages/Datasets.js","pages/DatasetView.js","components/InstrumentHeading.js","pages/InstrumentView.js","pages/InstrumentMap.js","pages/InstrumentBuild.js","components/ObjectStatusBar.js","components/DeleteObjectButton.js","support/ObjectCheckForInitialValues.js","components/CcConditionForm.js","components/CcQuestionForm.js","components/CcStatementForm.js","components/CcSequenceForm.js","components/CcLoopForm.js","pages/InstrumentConstructBuild.js","components/CodeListForm.js","components/CreateNewBuildObjectButtons.js","pages/InstrumentBuildCodeLists.js","components/QuestionItemForm.js","pages/InstrumentBuildQuestionItems.js","components/QuestionGridForm.js","pages/InstrumentBuildQuestionGrids.js","components/ResponseDomainNumericForm.js","components/ResponseDomainTextForm.js","components/ResponseDomainDatetimeForm.js","pages/InstrumentBuildResponseDomains.js","pages/NoMatch.js","components/RedirectFromState.js","App.js","reducers/index.js","components/Store.js","serviceWorker.js","index.js"],"names":["login","datasets","include","all","instruments","instrument","show","map","build","constructs","codeLists","new","questionItems","questionGrids","responseDomains","AuthRoute","props","isAuthUser","useSelector","state","auth","type","to","url","routes","api_host","process","api_headers","window","localStorage","getItem","axios","interceptors","response","use","error","status","Promise","reject","removeItem","location","Dataset","request","get","headers","dispatch","then","res","datasetsFetchSuccess","data","catch","err","fetchFailure","message","id","datasetFetchSuccess","Instrument","instrumentsFetchSuccess","instrumentFetchSuccess","instrumentStatsFetchSuccess","instrumentId","values","post","updates","console","log","Categories","categoriesFetchSuccess","categories","payload","CodeLists","codeListsFetchSuccess","update","codeListId","put","savingItem","savedItem","codeListFetchSuccess","saveError","error_sentence","create","redirectTo","instrument_id","delete","objectDeleteSuccess","codeList","CcSequences","ccSequencesFetchSuccess","ccSequenceId","ccSequenceFetchSuccess","onSuccess","object","onDelete","sequences","sequence","CcStatements","ccStatementsFetchSuccess","ccStatementId","ccStatementFetchSuccess","statements","statement","CcLoops","ccLoopsFetchSuccess","ccLoopId","ccLoopFetchSuccess","loops","loop","ResponseUnits","responseUnitsFetchSuccess","responseUnits","CcConditions","ccConditionsFetchSuccess","ccConditionId","ccConditionFetchSuccess","conditions","condition","CcQuestions","ccQuestionsFetchSuccess","ccQuestionId","ccQuestionFetchSuccess","topic","set","topicId","variables","add","variableNames","remove","variableId","questions","question","QuestionItems","questionItemsFetchSuccess","questionItemId","questionItemFetchSuccess","questionItem","QuestionGrids","questionGridsFetchSuccess","questionGridId","questionGridFetchSuccess","questionGrid","ResponseDomainNumerics","responseDomainNumericsFetchSuccess","responseDomainNumericId","responseDomainNumericFetchSuccess","responseDomainType","responseDomainId","responseDomainNumerics","responseDomainNumeric","ResponseDomainTexts","responseDomainTextsFetchSuccess","responseDomainTextId","responseDomainTextFetchSuccess","responseDomainTexts","responseDomainText","ResponseDomainDatetimes","responseDomainDatetimesFetchSuccess","responseDomainDatetimeId","responseDomainDatetimeFetchSuccess","responseDomainDatetimes","responseDomainDatetime","Variables","variablesFetchSuccess","DatasetVariable","datasetId","datasetVariablesFetchSuccess","datasetVariableId","sources","datasetVariableFetchSuccess","source","other","class","x","y","variable","Topics","topicsFetchSuccess","topics","dataset","stats","objectType","authUserSuccess","authUserFailure","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","useFormField","initialValue","React","useState","value","setValue","onChange","useCallback","e","target","Login","classes","emailField","passwordField","useDispatch","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","onSubmit","preventDefault","email","password","authUser","TextField","required","fullWidth","label","name","autoComplete","autoFocus","Button","color","BreadcrumbBarItem","text","link","isEmpty","root","padding","BreadcrumbBar","useLocation","buildDatasetBreadcrumbs","buildInstrumentBreadcrumbs","crumbs","push","params","capturingRegex","found","pathname","match","RegExp","paramsFromPath","subtype","breadcrumbs","buildBreadcrumbs","Paper","Breadcrumbs","separator","fontSize","aria-label","breadcrumb","Copyright","align","Date","getFullYear","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","fixedHeight","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","Dashboard","open","setOpen","charSet","AppBar","clsx","Toolbar","IconButton","edge","onClick","noWrap","Drawer","src","alt","style","Divider","List","maxHeight","Grid","item","xs","children","Box","pt","Instruments","page","setPage","rowsPerPage","setRowsPerPage","rows","Object","useEffect","Table","size","TableHead","TableRow","TableCell","TableBody","slice","row","key","prefix","ccs","qvs","study","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","length","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","SelectProps","inputProps","native","ObjectColour","Loader","m","shuffle","Datasets","dataLoaded","setDataLoaded","dvs","dataset_id","DatasetView","datasetVariables","SourcesList","sourceOptions","filter","opt","difference","handleChange","reason","includes","newSources","Autocomplete","multiple","options","getOptionLabel","option","filterSelectedOptions","renderInput","placeholder","getOptionSelected","var_type","InstrumentHeading","mode","slug","background","control","nested","paddingLeft","ObjectFinder","cc_sequences","cc_statements","cc_conditions","cc_questions","allQuestionItems","allQuestionGrids","toString","question_type","question_id","QuestionItemListItem","literal","rds","ResponseDomains","rd","codes","ResponseDomainCodes","code","StatementListItem","ConditionItem","aria-labelledby","Collapse","in","timeout","unmountOnExit","disablePadding","child","SequenceItem","InstrumentView","undefined","find","element","top","isNil","statuses","ObjectStatus","Alert","severity","AlertTitle","errorMessage","Chip","saving","saved","deleteIcon","TopicList","textAlign","FormControl","formControl","InputLabel","htmlFor","Select","level","defaultValue","VariableList","allVariables","variableOptions","newVariables","join","oldVariables","InstrumentMap","InstrumentBuild","instrumentStats","code_lists","response_domain_datetimes","response_domain_numerics","response_domain_texts","question_items","question_grids","instructions","cc_loops","StatCount","ListItemSecondaryAction","dense","ObjectStatusBar","DeleteObjectButton","action","confirm","ObjectCheckForInitialValues","initialValues","initialValuesWithEmptyFields","keys","reduce","acc","Array","isArray","merge","table","minWidth","boxShadow","formFields","field","CcConditionForm","ccCondition","path","newObject","node","validate","errors","mutators","arrayMutators","render","handleSubmit","pristine","pop","submitting","idx","reset","disabled","formControlProps","MenuItem","CcQuestionForm","ccQuestion","allResponseUnits","response_units","questionOptions","setQuestionOptions","error_key","previous","CcStatementForm","ccStatement","CcSequenceForm","ccSequence","CcLoopForm","ccLoop","start_val","loop_var","TreeNode","expanded","fchildren","trueAndFalse","conditionId","Tree","topSequence","onNodeSelect","treeData","setTreeData","selectedNode","setSelectedNode","searchString","setSearchString","searchFocusIndex","setSearchFocusIndex","searchFoundCount","setSearchFoundCount","getNodeKey","treeIndex","canHaveChildren","toggleExpand","toggleExpandedForAll","reorderConstructs","getFlatDataFromTree","ignoreCollapsed","parent","branch","indexOf","el","orderArray","generateButtons","buttons","addNodeUnderParent","parentKey","expandParent","newNode","stopPropagation","onRequestSearch","newValue","onCancelSearch","ButtonGroup","divider","startIcon","newTreeData","canNodeHaveChildren","canDrop","nextParent","prevPath","nextPath","canDrag","searchMethod","searchQuery","toLowerCase","searchFocusOffset","searchFinishCallback","matches","generateNodeProps","callback","changeNodeAtPath","updateNode","deleteCallback","removeNodeAtPath","deleteNode","side","right","ConstructForm","NewConstructQuestion","InstrumentConstructBuild","visible","multiline","FormField","CodeListForm","TableContainer","fields","index","freesolo","category_id","cursor","used_by","CreateNewBuildObjectButtons","objectTypes","history","useHistory","ObjectTypeLookup","InstrumentBuildCodeLists","selectedCodeList","CodeListItem","handleCodeListSelection","QuestionItemForm","InstrumentBuildQuestionItems","selectedQuestion","QuestionItem","handleQuestionSelection","QuestionGridForm","cl","cols","order","InstrumentBuildQuestionGrids","setquestionGridId","QuestionGrid","ResponseDomainNumericForm","responseDomain","ResponseDomainTextForm","ResponseDomainDatetimeForm","InstrumentBuildResponseDomains","selectedResponseDomain","ResponseDomainItem","handleResponseDomainSelection","responseDomainForm","NoMatch","RedirectFromState","redirect","common","createMuiTheme","warning","info","success","App","exact","serializeSearchesArrayToObject","array","obj","serializeArrayToObject","appReducer","combineReducers","setItem","jwt","instrumentSequences","instrumentStatements","instrumentConditions","instrumentLoops","instrumentQuestions","instrumentResponseUnits","responseUnit","revisedQuestionItems","objects","revisedQuestionGrids","revisedCodeLists","revisedResponseDomains","revisedVariables","createStore","reducers","applyMiddleware","thunk","Boolean","hostname","ReactDOM","store","Store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ffb372a7.chunk.js","sourcesContent":["import { include } from 'named-urls'\n\nexport default {\n    login : '/login',\n    datasets: include('/datasets', {\n      all: ''\n    }),\n    instruments: include('/instruments', {\n      all: '',\n      instrument: include(':instrument_id/', {\n        show: '',\n         map: include('map/', {\n            show: ''\n        }),\n        build: include('build/', {\n            show: '',\n            constructs: include('constructs/', {\n                show: ''\n            }),\n            codeLists: include('code_lists/', {\n              all: '',\n              show: ':codeListId',\n              new: 'new'\n            }),\n            questionItems: include('question_items/', {\n              all: '',\n              show: ':questionItemId',\n              new: 'new'\n            }),\n            questionGrids: include('question_grids/', {\n              all: '',\n              show: ':questionGridId',\n              new: 'new'\n            }),\n            responseDomains: include('response_domains/', {\n              all: '',\n              new: 'new',\n              show: ':responseDomainType/:responseDomainId',\n            })\n        })\n      })\n   })\n}\n","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { reverse as url } from 'named-urls'\n\nimport routes from './routes'\n\nconst AuthRoute = props => {\n\n  const isAuthUser = useSelector(state => state.auth.isAuthUser);\n\n  const { type } = props;\n\n  if (type === \"guest\" && isAuthUser) {\n    return <Redirect to={url(routes.instruments.all)} />\n  }else if (type === \"private\" && !isAuthUser){\n    return <Redirect to={url(routes.login)} />\n  };\n\n  return <Route {...props} />;\n};\n\nexport default AuthRoute;\n","import axios from \"axios\";\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst api_host = process.env.REACT_APP_API_HOST\n\nconst api_headers = () => ({\n          'Authorization': 'Bearer ' + window.localStorage.getItem('jwt'),\n          'Content-Type': 'application/json'\n        })\n\naxios.interceptors.response.use(function (response) {\n    return response;\n}, function (error) {\n    if (401 === error.response.status) {\n      window.localStorage.removeItem('jwt');\n      window.location = '/login'\n    } else {\n        return Promise.reject(error);\n    }\n});\n\n// Auth\nexport const authUser = (email, password) => {\n  const request = axios.post(api_host + '/users/sign_in.json', {\n      \"user\": {\n              \"email\": email,\n              \"password\": password\n      }\n    })\n  return (dispatch) => {\n      return request.then(res => {\n        dispatch(authUserSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(authUserFailure(err.message));\n      });\n  };\n};\n\nexport const Dataset = {\n  all: () => {\n    const request = axios.get(api_host + '/datasets.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(datasetsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  show: (id) => {\n    const request = axios.get(api_host + '/datasets/' + id + '.json?questions=true',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(datasetFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nexport const Instrument = {\n  all: () => {\n    const request = axios.get(api_host + '/instruments.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  show: (id) => {\n    const request = axios.get(api_host + '/instruments/' + id + '.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  stats: (id) => {\n    const request = axios.get(api_host + '/instruments/' + id + '/stats.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentStatsFetchSuccess(id, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  reorderConstructs: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/reorder_ccs.json', { updates: values }, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          console.log('ok')\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  }\n}\n\nexport const Categories = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/categories.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(categoriesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst categoriesFetchSuccess = (instrumentId, categories) => ({\n  type: 'LOAD_INSTRUMENT_CATEGORIES',\n  payload: {\n    instrumentId: instrumentId,\n    categories: categories\n  }\n});\n\nexport const CodeLists = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/code_lists.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(codeListsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, codeListId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/code_lists/' + codeListId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(codeListId, 'CodeList'));\n        return request.then(res => {\n          dispatch(savedItem(codeListId, 'CodeList'));\n          dispatch(codeListFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(codeListId, 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/code_lists.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CodeList'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CodeList'));\n          dispatch(codeListFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, codeListId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/code_lists/' + codeListId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'CodeList', codeListId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(savedItem(codeListId, 'CodeList'));\n          dispatch(saveError(codeListId, 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst codeListsFetchSuccess = (instrumentId, codeLists) => ({\n  type: 'LOAD_INSTRUMENT_CODE_LISTS',\n  payload: {\n    instrumentId: instrumentId,\n    codeLists: codeLists\n  }\n});\n\nconst codeListFetchSuccess = (instrumentId, codeList) => ({\n  type: 'LOAD_INSTRUMENT_CODE_LIST',\n  payload: {\n    instrumentId: instrumentId,\n    codeList: codeList\n  }\n});\n\nexport const CcSequences = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_sequences.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccSequencesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccSequenceId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_sequences/' + ccSequenceId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccSequenceId, 'CcSequence'));\n        return request.then(res => {\n          dispatch(savedItem(ccSequenceId, 'CcSequence'));\n          dispatch(ccSequenceFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccSequenceId, 'CcSequence', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_sequences.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcSequence'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcSequence'));\n          dispatch(ccSequenceFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcSequence', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccSequenceId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_sequences/' + ccSequenceId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccSequenceId, 'CcSequence'));\n        return request.then(res => {\n          dispatch(savedItem(ccSequenceId, 'CcSequence'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcSequence', ccSequenceId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(ccSequenceId, 'CcSequence', err.response.data));\n        });\n    };\n  },\n}\n\nconst ccSequencesFetchSuccess = (instrumentId, sequences) => ({\n  type: 'LOAD_INSTRUMENT_SEQUENCES',\n  payload: {\n    instrumentId: instrumentId,\n    sequences: sequences\n  }\n});\n\nconst ccSequenceFetchSuccess = (instrumentId, sequence) => ({\n  type: 'LOAD_INSTRUMENT_SEQUENCE',\n  payload: {\n    instrumentId: instrumentId,\n    sequence: sequence\n  }\n});\n\nexport const CcStatements = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_statements.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccStatementsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccStatementId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_statements/' + ccStatementId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccStatementId, 'CcStatement'));\n        return request.then(res => {\n          dispatch(savedItem(ccStatementId, 'CcStatement'));\n          dispatch(ccStatementFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccStatementId, 'CcStatement', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_statements.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcStatement'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcStatement'));\n          dispatch(ccStatementFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcStatement', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccStatementId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_statements/' + ccStatementId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccStatementId, 'CcStatement'));\n        return request.then(res => {\n          dispatch(savedItem(ccStatementId, 'CcStatement'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcStatement', ccStatementId));\n          onDelete()\n        })\n        .catch(err => {\n          dispatch(saveError(ccStatementId, 'CcStatement', err.response.data));\n        });\n    };\n  },\n}\n\nconst ccStatementsFetchSuccess = (instrumentId, statements) => ({\n  type: 'LOAD_INSTRUMENT_STATEMENTS',\n  payload: {\n    instrumentId: instrumentId,\n    statements: statements\n  }\n});\n\nconst ccStatementFetchSuccess = (instrumentId, statement) => ({\n  type: 'LOAD_INSTRUMENT_STATEMENT',\n  payload: {\n    instrumentId: instrumentId,\n    statement: statement\n  }\n});\n\nexport const CcLoops = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_loops.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccLoopsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccLoopId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_loops/' + ccLoopId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccLoopId, 'CcLoop'));\n        return request.then(res => {\n          dispatch(savedItem(ccLoopId, 'CcLoop'));\n          dispatch(ccLoopFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccLoopId, 'CcLoop', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_loops.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcLoop'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcLoop'));\n          dispatch(ccLoopFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcLoop', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, ccLoopId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_loops/' + ccLoopId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccLoopId, 'CcLoop'));\n        return request.then(res => {\n          dispatch(savedItem(ccLoopId, 'CcLoop'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcLoop', ccLoopId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(ccLoopId, 'CcLoop', err.response.data.error_sentence));\n        });\n    };\n  },\n}\n\nconst ccLoopsFetchSuccess = (instrumentId, loops) => ({\n  type: 'LOAD_INSTRUMENT_LOOPS',\n  payload: {\n    instrumentId: instrumentId,\n    loops: loops\n  }\n});\n\nconst ccLoopFetchSuccess = (instrumentId, loop) => ({\n  type: 'LOAD_INSTRUMENT_LOOP',\n  payload: {\n    instrumentId: instrumentId,\n    loop: loop\n  }\n});\n\nexport const ResponseUnits = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_units.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseUnitsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseUnitId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_units/' + responseUnitId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseUnitFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseUnitId, 'ResponseUnit', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_units.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseUnitFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseUnit', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseUnitId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_units/' + responseUnitId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseUnit', responseUnitId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(responseUnitId, 'ResponseUnit', err.response.data.error_sentence));\n        });\n    };\n  },\n}\n\nconst responseUnitsFetchSuccess = (instrumentId, responseUnits) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_UNITS',\n  payload: {\n    instrumentId: instrumentId,\n    responseUnits: responseUnits\n  }\n});\n\nconst responseUnitFetchSuccess = (instrumentId, responseUnit) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_UNITS',\n  payload: {\n    instrumentId: instrumentId,\n    responseUnit: responseUnit\n  }\n});\n\nexport const CcConditions = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_conditions.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccConditionsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccConditionId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_conditions/' + ccConditionId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccConditionId, 'CcCondition'));\n        return request.then(res => {\n          dispatch(savedItem(ccConditionId, 'CcCondition'));\n          dispatch(ccConditionFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccConditionId, 'CcCondition', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_conditions.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcCondition'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcCondition'));\n          dispatch(ccConditionFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcCondition', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccConditionId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_conditions/' + ccConditionId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccConditionId, 'CcCondition'));\n        return request.then(res => {\n          dispatch(savedItem(ccConditionId, 'CcCondition'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcCondition', ccConditionId));\n          onDelete()\n        })\n        .catch(err => {\n          dispatch(saveError(ccConditionId, 'CcCondition', err.response.data));\n        });\n    };\n  },\n}\n\nconst ccConditionsFetchSuccess = (instrumentId, conditions) => ({\n  type: 'LOAD_INSTRUMENT_CONDITIONS',\n  payload: {\n    instrumentId: instrumentId,\n    conditions: conditions\n  }\n});\n\nconst ccConditionFetchSuccess = (instrumentId, condition) => ({\n  type: 'LOAD_INSTRUMENT_CONDITION',\n  payload: {\n    instrumentId: instrumentId,\n    condition: condition\n  }\n});\n\nexport const CcQuestions = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_questions.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccQuestionsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccQuestionId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n        return request.then(res => {\n          dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n          dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcQuestion'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcQuestion'));\n          dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcQuestion', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccQuestionId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n        return request.then(res => {\n          dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcQuestion', ccQuestionId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data));\n        });\n    };\n  },\n  topic: {\n    set: (instrumentId, ccQuestionId, topicId) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/set_topic.json',\n      {\n        \"topic_id\": topicId\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data.message));\n          });\n      };\n    }\n  },\n  variables: {\n    add: (instrumentId, ccQuestionId, variableNames) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/add_variables.json',\n      {\n        \"variable_names\": variableNames\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data.message));\n          });\n      };\n    },\n    remove: (instrumentId, ccQuestionId, variableId) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/remove_variable.json',\n      {\n        \"variable_id\": variableId\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.message));\n          });\n      };\n    }\n  }\n}\n\nconst savingItem = (id, type) => ({\n  type: 'SAVING',\n  payload: {\n    id: id,\n    type: type\n  }\n});\n\nconst savedItem = (id, type) => ({\n  type: 'SAVED',\n  payload: {\n    id: id,\n    type: type\n  }\n});\n\nconst ccQuestionsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTIONS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst ccQuestionFetchSuccess = (instrumentId, question) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION',\n  payload: {\n    instrumentId: instrumentId,\n    question: question\n  }\n});\n\nexport const QuestionItems = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/question_items.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionItemsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, questionItemId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/question_items/' + questionItemId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionItemId, 'QuestionItem'));\n        return request.then(res => {\n          dispatch(savedItem(questionItemId, 'QuestionItem'));\n          dispatch(questionItemFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(questionItemId, 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/question_items.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'QuestionItem'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'QuestionItem'));\n          dispatch(questionItemFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, questionItemId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/question_items/' + questionItemId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionItemId, 'QuestionItem'));\n        return request.then(res => {\n          dispatch(savedItem(questionItemId, 'QuestionItem'));\n          dispatch(objectDeleteSuccess(instrumentId,'QuestionItem', questionItemId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(questionItemId, 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst questionItemsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_ITEMS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst questionItemFetchSuccess = (instrumentId, questionItem) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_ITEM',\n  payload: {\n    instrumentId: instrumentId,\n    questionItem: questionItem\n  }\n});\n\nexport const QuestionGrids = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/question_grids.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionGridsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, questionGridId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/question_grids/' + questionGridId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionGridId, 'QuestionGrid'));\n        return request.then(res => {\n          dispatch(savedItem(questionGridId, 'QuestionGrid'));\n          dispatch(questionGridFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(questionGridId, 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/question_grids.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'QuestionGrid'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'QuestionGrid'));\n          dispatch(questionGridFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, questionGridId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/question_grids/' + questionGridId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionGridId, 'QuestionGrid'));\n        return request.then(res => {\n          dispatch(savedItem(questionGridId, 'QuestionGrid'));\n          dispatch(objectDeleteSuccess(instrumentId,'QuestionGrid', questionGridId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(questionGridId, 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst questionGridsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_GRIDS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst questionGridFetchSuccess = (instrumentId, questionGrid) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_GRID',\n  payload: {\n    instrumentId: instrumentId,\n    questionGrid: questionGrid\n  }\n});\n\nexport const ResponseDomainNumerics = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_numerics.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainNumericsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainNumericId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_numerics/' + responseDomainNumericId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n          dispatch(responseDomainNumericFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainNumericId, 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_numerics.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'ResponseDomainNumeric'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'ResponseDomainNumeric'));\n          dispatch(responseDomainNumericFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainNumericId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_numerics/' + responseDomainNumericId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainNumeric', responseDomainNumericId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainNumericId, 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainNumericsFetchSuccess = (instrumentId, responseDomainNumerics) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERICS',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainNumerics: responseDomainNumerics\n  }\n});\n\nconst responseDomainNumericFetchSuccess = (instrumentId, responseDomainNumeric) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERIC',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainNumeric: responseDomainNumeric\n  }\n});\n\nexport const ResponseDomainTexts = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_texts.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainTextsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainTextId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_texts/' + responseDomainTextId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainTextId, 'ResponseDomainText'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainTextId, 'ResponseDomainText'));\n          dispatch(responseDomainTextFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainTextId, 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_texts.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'ResponseDomainText'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'ResponseDomainText'));\n          dispatch(responseDomainTextFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainTextId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_texts/' + responseDomainTextId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainTextId, 'ResponseDomainText'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainTextId, 'ResponseDomainText'));\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainText', responseDomainTextId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainTextId, 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainTextsFetchSuccess = (instrumentId, responseDomainTexts) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXTS',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainTexts: responseDomainTexts\n  }\n});\n\nconst responseDomainTextFetchSuccess = (instrumentId, responseDomainText) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXT',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainText: responseDomainText\n  }\n});\n\nexport const ResponseDomainDatetimes = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainDatetimesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainDatetimeId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes/' + responseDomainDatetimeId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n          dispatch(responseDomainDatetimeFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainDatetimeId, 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'ResponseDomainDatetime'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'ResponseDomainDatetime'));\n          dispatch(responseDomainDatetimeFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainDatetimeId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes/' + responseDomainDatetimeId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainDatetime', responseDomainDatetimeId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainDatetimeId, 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainDatetimesFetchSuccess = (instrumentId, responseDomainDatetimes) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIMES',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainDatetimes: responseDomainDatetimes\n  }\n});\n\nconst responseDomainDatetimeFetchSuccess = (instrumentId, responseDomainDatetime) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIME',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainDatetime: responseDomainDatetime\n  }\n});\n\nexport const Variables = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(variablesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  add: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/add_variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(variablesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst variablesFetchSuccess = (instrumentId, variables) => ({\n  type: 'LOAD_INSTRUMENT_VARIABLES',\n  payload: {\n    instrumentId: instrumentId,\n    variables: variables\n  }\n});\n\nexport const DatasetVariable = {\n  all: (datasetId) => {\n    const request = axios.get(api_host + '/datasets/' + datasetId + '/variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(datasetVariablesFetchSuccess(datasetId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  add_source: (datasetId, datasetVariableId, sources) => {\n    const request = axios.post(api_host + '/datasets/' + datasetId + '/variables/' + datasetVariableId + '/add_sources.json',\n    {\n      sources: {\n        \"id\": sources,\n        \"x\": null,\n        \"y\": null\n      }\n    },\n    {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(datasetVariableId, 'DatasetVariable'));\n        return request.then(res => {\n          dispatch(savedItem(datasetVariableId, 'DatasetVariable'));\n          dispatch(datasetVariableFetchSuccess(datasetId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(datasetVariableId, 'DatasetVariable', err.response.data.message));\n        });\n    };\n  },\n  remove_source: (datasetId, datasetVariableId, source) => {\n    const request = axios.post(api_host + '/datasets/' + datasetId + '/variables/' + datasetVariableId + '/remove_source.json',\n    {\n      other: {\n        id: source.id,\n        class: source.class,\n        x: source.x,\n        y: source.y\n      }\n    },\n    {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(datasetVariableId, 'DatasetVariable'));\n        return request.then(res => {\n          dispatch(savedItem(datasetVariableId, 'DatasetVariable'));\n          dispatch(datasetVariableFetchSuccess(datasetId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(datasetVariableId, 'DatasetVariable', err.message));\n        });\n    };\n  }\n}\n\nconst datasetVariablesFetchSuccess = (datasetId, variables) => ({\n  type: 'LOAD_DATASET_VARIABLES',\n  payload: {\n    datasetId: datasetId,\n    variables: variables\n  }\n});\n\nconst datasetVariableFetchSuccess = (datasetId, variable) => ({\n  type: 'LOAD_DATASET_VARIABLE',\n  payload: {\n    datasetId: datasetId,\n    variable: variable\n  }\n});\n\nexport const Topics = {\n  all: () => {\n    const request = axios.get(api_host + '/topics/flattened_nest.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(topicsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst topicsFetchSuccess = (topics) => ({\n  type: 'LOAD_TOPICS',\n  payload: {\n    topics: topics\n  }\n});\n\nconst datasetsFetchSuccess = datasets => ({\n  type: 'LOAD_DATASETS',\n  payload: {\n    datasets: datasets\n  }\n});\n\nconst datasetFetchSuccess = datasets => ({\n  type: 'LOAD_DATASET',\n  payload: {\n    dataset: datasets\n  }\n});\n\nconst instrumentsFetchSuccess = instruments => ({\n  type: 'LOAD_INSTRUMENTS',\n  payload: {\n    instruments: instruments\n  }\n});\n\nconst instrumentFetchSuccess = instruments => ({\n  type: 'LOAD_INSTRUMENT',\n  payload: {\n    instrument: instruments\n  }\n});\n\nconst instrumentStatsFetchSuccess = (instrumentId, stats) => ({\n  type: 'LOAD_INSTRUMENT_STATS',\n  payload: {\n    instrumentId: instrumentId,\n    stats: stats\n  }\n});\n\nconst objectDeleteSuccess = (instrumentId, objectType, id) => ({\n  type: 'DELETE_INSTRUMENT_OBJECT_TYPE',\n  payload: {\n    instrumentId: instrumentId,\n    id: id,\n    objectType: objectType\n  }\n});\n\nconst fetchFailure = error => ({\n  type: 'FETCH_FAILURE',\n  payload: {\n    error\n  }\n});\n\nconst saveError = (id, type, error) => ({\n  type: 'ERROR',\n  payload: {\n    id: id,\n    type: type,\n    error: error\n  }\n});\n\nconst authUserSuccess = auth => ({\n  type: 'LOGIN',\n  payload: {\n    ...auth\n  }\n});\n\nconst authUserFailure = error => ({\n  type: 'LOGIN_FAILURE',\n  payload: {\n    error\n  }\n});\n\nconst redirectTo = (url) => ({\n  type: 'REDIRECT',\n  payload: {\n    to: url\n  }\n})\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { authUser } from '../actions'\nimport { useDispatch } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst useFormField = (initialValue: string = \"\") => {\n  const [value, setValue] = React.useState(initialValue);\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value),\n    []\n  );\n  return { value, onChange };\n};\n\nexport default function Login() {\n  const classes = useStyles();\n\n  const emailField = useFormField();\n  const passwordField = useFormField();\n\n  const dispatch = useDispatch()\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    dispatch(authUser(emailField.value, passwordField.value));\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            {...emailField}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            {...passwordField}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { isEmpty, get } from 'lodash'\nimport routes from '../routes'\nimport { reverse as url } from 'named-urls'\nimport { useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst BreadcrumbBarItem = (props) => {\n  const {text, link} = props\n\n  if(isEmpty(link)){\n    return (\n      <Typography color=\"textPrimary\">{text}</Typography>\n    )\n  }else{\n    return (\n      <Link color=\"inherit\" to={link}>\n        {text}\n      </Link>\n    )\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    'margin-bottom': '10px',\n    padding: '15px'\n  }\n}));\n\nconst BreadcrumbBar = (props) => {\n  const {instrumentId} = props\n\n  const location = useLocation();\n\n  const buildBreadcrumbs = () => {\n    var found = location.pathname.match(new RegExp(`^\\\\/(?<topLevel>instruments|datasets)`));\n    var topLevel = get(get(found, 'groups',{}),'topLevel','instruments')\n    switch (topLevel) {\n      case 'datasets':\n        return buildDatasetBreadcrumbs()\n        break\n      default:\n        return buildInstrumentBreadcrumbs()\n        break\n    }\n  }\n\n  const buildDatasetBreadcrumbs = () => {\n    var crumbs = [{text: 'Datasets', link: url(routes.datasets.all)}]\n    return crumbs\n  }\n\n  const buildInstrumentBreadcrumbs = () => {\n    const paramsFromPath = () => {\n      const capturingRegex = `/instruments\\\\/${instrumentId}\\\\/(?<type>build|map)\\/?(?<subtype>question_grids|question_items|response_domains|code_lists|constructs)?\\/?`;\n      const found = location.pathname.match(new RegExp(capturingRegex));\n      return get(found, 'groups',{})\n    }\n\n    var crumbs = [{text: 'Instruments', link: url(routes.instruments.all)}]\n\n    if(instrumentId){\n      crumbs.push(\n        {\n          text: instrumentId,\n          link: url(routes.instruments.instrument.show, { instrument_id: instrumentId })\n        }\n      )\n      const params = paramsFromPath();\n      if(params){\n        switch (params.type) {\n          case 'map':\n            crumbs.push(\n                {\n                  text: 'Map',\n                  link: url(routes.instruments.instrument.map.show, { instrument_id: instrumentId })\n                }\n              )\n            break\n          case 'build':\n            crumbs.push(\n                {\n                  text: 'Build',\n                  link: url(routes.instruments.instrument.build.show, { instrument_id: instrumentId })\n                }\n              )\n            if(params.subtype){\n              console.log(params)\n              if(params.subtype === 'question_items'){\n                  crumbs.push(\n                      {\n                        text: 'Question Items',\n                        link: url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'question_grids'){\n                  crumbs.push(\n                      {\n                        text: 'Question Grids',\n                        link: url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'code_lists'){\n                  crumbs.push(\n                      {\n                        text: 'CodeLists',\n                        link: url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'response_domains'){\n                  crumbs.push(\n                      {\n                        text: 'Response Domains',\n                        link: url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'constructs'){\n                  crumbs.push(\n                      {\n                        text: 'Constructs',\n                        link: url(routes.instruments.instrument.build.constructs.show, { instrument_id: instrumentId })\n                      }\n                    )\n              }\n\n            }\n        }\n      }\n    }\n    return crumbs\n  }\n\n  const breadcrumbs = buildBreadcrumbs()\n\n  const classes = useStyles()\n\n  return (\n      <Paper className={classes.root}>\n        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n          {breadcrumbs.map((breadcrumb) => {\n            return <BreadcrumbBarItem text={breadcrumb.text} link={breadcrumb.link} />\n          })}\n        </Breadcrumbs>\n      </Paper>\n  )\n}\n\nexport default BreadcrumbBar\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport LabelIcon from '@material-ui/icons/Label';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport Helmet from \"react-helmet\";\nimport { useDispatch } from 'react-redux'\nimport BreadcrumbBar from './BreadcrumbBar'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\n        Archivist\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n        <ListItemIcon>\n          <Link to={url(routes.instruments.all)}>\n            <QuestionAnswerIcon />\n          </Link>\n        </ListItemIcon>\n      <Link to={url(routes.instruments.all)}>\n        <ListItemText primary=\"Instruments\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <StorageIcon />\n      </ListItemIcon>\n      <Link to={url(routes.datasets.all)}>\n        <ListItemText primary=\"Datasets\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LabelIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Topics\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <SupervisedUserCircleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Admin\" />\n    </ListItem>\n  </div>\n);\n\nexport const Dashboard = (props)  => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const dispatch = useDispatch();\n  const { instrumentId } = props;\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Archivist</title>\n      </Helmet>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            {props.title}\n          </Typography>\n          <IconButton color=\"inherit\">\n            <ExitToAppIcon onClick={()=>{ dispatch({type:'LOGOUT'}) }}/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <img src=\"/logo.svg\" alt=\"BigCo Inc. logo\" style={{width: \"51%\"}}/>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth={false} maxHeight={false} className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <BreadcrumbBar instrumentId={instrumentId} />\n              <Paper className={classes.paper}>\n                {props.children}\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst Instruments = () => {\n\n  const dispatch = useDispatch()\n  const instruments = useSelector(state => state.instruments);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(instruments);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n     dispatch(Instrument.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Instruments'}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Prefix</TableCell>\n              <TableCell>Control Constructs</TableCell>\n              <TableCell>Q-V Mappings</TableCell>\n              <TableCell>Study</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.prefix}</TableCell>\n                <TableCell>{row.ccs}</TableCell>\n                <TableCell>{row.qvs}</TableCell>\n                <TableCell>{row.study}</TableCell>\n                <TableCell>\n                  <Button variant=\"outlined\">\n                    <Link to={url(routes.instruments.instrument.show, { instrument_id: row.prefix })}>View</Link>\n                  </Button>\n                  <Button variant=\"outlined\">\n                    <Link to={url(routes.instruments.instrument.build.show, { instrument_id: row.prefix })}>Build</Link>\n                  </Button>\n                  <Button variant=\"outlined\">\n                    <Link to={url(routes.instruments.instrument.map.show, { instrument_id: row.prefix })}>Map</Link>\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default Instruments;\n","export const ObjectColour = (type) => {\n   switch (type){\n      case 'statement':\n         return '652d90' // Purple;\n      case 'loop':\n         return '37b34a' // Green;\n      case 'question':\n         return '00adee' // Pale Blue;\n      case 'sequence':\n         return 'faaf40' // Orange;\n      case 'condition':\n         return 'f1003a' // Red;\n      default:\n         return 'd3d3d3' // Light Grey\n   }\n}\n\n//652d90 Purple\n// eb008b Pink\n// faaf40 Orange\n// f1003a Red\n// 37b34a Green\n// 00adee Pale Blue\n// 2e008b Dark Purple\n// 1f801e Dark Green\n","import React from 'react';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport { Box } from '@material-ui/core'\nimport { shuffle } from \"lodash\";\nimport { ObjectColour } from '../support/ObjectColour'\n\nexport const Loader = () => {\n  return (\n    <Box style={{ height: 200, 'margin-top': 50 }} m=\"auto\"><BounceLoader color={`#${ObjectColour(shuffle(['sequence', 'condition', 'question', 'statement','loop'])[0])}`}/></Box>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dataset } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { Loader } from '../components/Loader'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst Datasets = () => {\n\n  const dispatch = useDispatch()\n  const datasets = useSelector(state => state.datasets);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(datasets);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(Dataset.all())\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Datasets'}>\n      {!dataLoaded\n        ? <Loader />\n        : (\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ID</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Variables</TableCell>\n                <TableCell>Q-V Mappings</TableCell>\n                <TableCell>DV Mappings</TableCell>\n                <TableCell>Study</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell>{row.id}</TableCell>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>{row.variables}</TableCell>\n                  <TableCell>{row.qvs}</TableCell>\n                  <TableCell>{row.dvs}</TableCell>\n                  <TableCell>{row.study}</TableCell>\n                  <TableCell>\n                    <Button variant=\"outlined\">\n                      <Link to={url('/datasets/:dataset_id', { dataset_id: row.id })}>View</Link>\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n           <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true,\n                  }}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        )}\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default Datasets;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dataset, DatasetVariable } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { Loader } from '../components/Loader'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { get, isEmpty } from 'lodash'\n\nconst DatasetView = (props) => {\n\n  const dispatch = useDispatch()\n  const datasetId = get(props, \"match.params.dataset_id\", \"\")\n\n  const dataset = useSelector(state => get(state.datasets, datasetId));\n  const variables = useSelector(state => get(state.datasetVariables, datasetId,{}));\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(variables);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(Dataset.show(datasetId)),\n      dispatch(DatasetVariable.all(datasetId))\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const SourcesList = (props) => {\n    const { sources, datasetId, variable } = props\n    let { sourceOptions } = props\n    sourceOptions = sourceOptions.filter(opt => get(opt.topic, 'id') == get(variable.topic, 'id'))\n    const variableId = variable.id\n    const dispatch = useDispatch()\n\n    const handleAddSource = (newSources) => {\n      dispatch(DatasetVariable.add_source(datasetId, variableId, newSources));\n    }\n\n    const handleRemoveSource = (oldSources) => {\n      oldSources.map((source)=>{\n        dispatch(DatasetVariable.remove_source(datasetId, variableId, source));\n      })\n    }\n\n    var difference = []\n\n    const handleChange = (event, value, reason) => {\n      switch (reason) {\n        case 'select-option':\n          difference = value.filter(x => !sources.includes(x));\n          if(!isEmpty(difference)){\n            return handleAddSource(difference.map((source) => { return source.label }))\n          };\n          break;\n        case 'remove-option':\n          difference = sources.filter(x => !value.includes(x));\n          if(!isEmpty(difference)){\n            return handleRemoveSource(difference)\n          };\n          break;\n        default:\n          return null;\n      }\n    }\n\n    if(isEmpty(sources)){\n      return (\n        <div>\n           <Autocomplete\n            multiple\n            id=\"tags-outlined\"\n            options={Object.values(sourceOptions)}\n            getOptionLabel={(option) => option.label}\n            onChange={handleChange}\n            value={[]}\n            filterSelectedOptions\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"outlined\"\n                label=\"Sources\"\n                placeholder=\"Add source\"\n              />\n            )}\n          />\n        </div>\n      )\n    }else{\n      return (\n        <div>\n           <Autocomplete\n            multiple\n            id=\"tags-outlined\"\n            options={Object.values(sourceOptions)}\n            getOptionLabel={(option) => option.label}\n            onChange={handleChange}\n            value={sources}\n            getOptionSelected= {(option, value) => (\n              option.id === value.id\n            )}\n            filterSelectedOptions\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"outlined\"\n                label=\"Sources\"\n                placeholder=\"Add source\"\n              />\n            )}\n          />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Datasets'}>\n      {!dataLoaded\n        ? <Loader />\n        : (\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ID</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Label</TableCell>\n                <TableCell>Type</TableCell>\n                <TableCell>Used by</TableCell>\n                <TableCell>Sources</TableCell>\n                <TableCell>Topic</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell>{row.id}</TableCell>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>{row.label}</TableCell>\n                  <TableCell>{row.var_type}</TableCell>\n                  <TableCell></TableCell>\n                  <TableCell><SourcesList sources={row.sources} sourceOptions={get(dataset,'questions',[])} datasetId={datasetId} variable={row} /></TableCell>\n                  <TableCell>{get(row.topic, 'name')}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n           <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true,\n                  }}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        )}\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default DatasetView;\n","import React from 'react';\nimport { get } from \"lodash\";\nimport { ObjectColour } from '../support/ObjectColour'\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport Button from '@material-ui/core/Button';\n\nexport const InstrumentHeading = ({instrument, mode='view'}) => {\n  return (\n    <h1>\n    {get(instrument, 'label')}\n      { instrument && (\n        <>\n        { mode !== 'view' && (\n          <Button variant=\"outlined\">\n            <Link to={url(routes.instruments.instrument.show, { instrument_id: instrument.slug })}>View</Link>\n          </Button>\n        )}\n        { mode !== 'build' && (\n          <Button variant=\"outlined\">\n            <Link to={url(routes.instruments.instrument.build.show, { instrument_id: instrument.slug })}>Build</Link>\n          </Button>\n        )}\n        { mode !== 'map' && (\n          <Button variant=\"outlined\">\n            <Link to={url(routes.instruments.instrument.map.show, { instrument_id: instrument.slug })}>Map</Link>\n          </Button>\n        )}\n        </>\n      )}\n    </h1>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, Variables, Topics } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { InstrumentHeading } from '../components/InstrumentHeading'\nimport { get, isEmpty, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { Box } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n  }\n\n  return item\n\n}\n\nconst QuestionItemListItem = (props) => {\n  const {type, id, instrumentId} = props\n  const item = ObjectFinder(instrumentId, type, id)\n  const classes = useStyles();\n  console.log(item)\n  return (\n    <div>\n      {item.question.literal}\n      {(item.question.rds) && (\n        <ResponseDomains rds={item.question.rds} />\n      )}\n    </div>\n  )\n}\n\nconst ResponseDomains = ({ rds }) => {\n\n  return rds.map((rd) => {\n    console.log(rd)\n    switch (rd.type) {\n      case 'ResponseDomainCode':\n        return(<ul><ResponseDomainCodes codes={rd.codes} /></ul>)\n      case 'ResponseDomainText':\n        return(<ul><li>{rd.label}</li></ul>)\n      case 'ResponseDomainNumeric':\n        return(<ul><li>{rd.label} {rd.params} {rd.subtype}</li></ul>)\n      case 'ResponseDomainDatetime':\n        return(<ul><li>{rd.label} {rd.params} {rd.subtype}</li></ul>)\n      default:\n        console.log(rd)\n        return '';\n    }\n  })\n}\n\nconst ResponseDomainCodes = ({ codes }) => {\n  return codes.map((code) => {\n      return(<li>{code.label}</li>)\n    })\n}\n\nconst QuestionGridListItem = (props) => {\n\n  return (\n    <div>This is a Question Grid</div>\n  )\n}\n\nconst StatementListItem = (props) => {\n  const {type, id, instrumentId} = props\n  const item = ObjectFinder(instrumentId, type, id)\n  const classes = useStyles();\n\n  return (\n    <div>{item.literal}</div>\n  )\n}\n\nconst ConditionItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'literal', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n              <ListItem button className={classes.nested}>\n                {(function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />;\n                    case 'CcQuestion':\n                      return <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    case 'CcCondition':\n                      return <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    default:\n                      console.log(child)\n                      return null;\n                  }\n                })()}\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst SequenceItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'label', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n                (function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />\n                          </ListItem>)\n                    case 'CcQuestion':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    case 'CcStatement':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <StatementListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    case 'CcCondition':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} children={get(child,'children',[])} />\n                          </ListItem>)\n                    default:\n                      return null;\n                  }\n                })()\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst InstrumentView = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n\n  useEffect(() => {\n    dispatch(Instrument.show(instrumentId));\n    dispatch(CcSequences.all(instrumentId));\n    dispatch(CcStatements.all(instrumentId));\n    dispatch(CcConditions.all(instrumentId));\n    dispatch(CcQuestions.all(instrumentId));\n    dispatch(QuestionItems.all(instrumentId));\n    dispatch(QuestionGrids.all(instrumentId));\n    dispatch(Variables.all(instrumentId));\n    dispatch(Topics.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sequence = (isEmpty(cc_sequences)) ? undefined : Object.values(cc_sequences).find(element => element.top == true)\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'View'} instrumentId={instrumentId}>\n      <InstrumentHeading instrument={instrument} mode={'view'} />\n      {isNil(sequence)\n        ? <Box m=\"auto\"><BounceLoader color={'#009de6'}/></Box>\n        : <SequenceItem instrumentId={instrumentId} type={'CcSequence'} id={sequence.children[0].id} title={sequence.children[0].label} children={sequence.children[0].children}/>\n      }\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentView;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, Variables, Topics } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { get, isEmpty, isNil } from \"lodash\";\nimport { InstrumentHeading } from '../components/InstrumentHeading'\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { Box } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n  }\n\n  return item\n\n}\n\nconst QuestionItemListItem = (props) => {\n  const {type, id, instrumentId} = props\n  const item = ObjectFinder(instrumentId, type, id)\n  const classes = useStyles();\n\n  const title = (isEmpty(item.question)) ? item.label : item.question.literal\n\n  const topic = get(item, 'topic', {id: null})\n  const topicId = get(topic, 'id', null)\n\n  const status = ObjectStatus(item.id, 'CcQuestion')\n\n  return (\n      <ListItem>\n      <Paper className={classes.control}>\n      <Grid container spacing={3}>\n          { !isEmpty(status) && !isNil(status.error) && (\n            <div className={classes.root}>\n              <Alert severity=\"error\">\n                <AlertTitle>Error</AlertTitle>\n                {status.errorMessage}\n              </Alert>\n            </div>\n          )}\n          <Grid item xs={9}>\n            <ListItemText primary={title} />\n          </Grid>\n          <Grid item xs={3}>\n            <Chip label={item.label} color=\"primary\"></Chip>\n            { !isEmpty(status) && !isNil(status.saving) && (\n              <Chip label=\"Saving\" color=\"secondary\">              <SyncLoader/></Chip>\n            )}\n            { !isEmpty(status) && !isNil(status.saved) && (\n              <Chip label=\"Saved\" color=\"success\" deleteIcon={<DoneIcon />}></Chip>\n            )}\n          </Grid>\n          <Grid item xs={6}>\n            <VariableList variables={item.variables} instrumentId={instrumentId} ccQuestionId={item.id} />\n          </Grid>\n          <Grid item xs={6}>\n            <TopicList topicId={topicId} instrumentId={instrumentId} ccQuestionId={item.id} />\n          </Grid>\n        </Grid>\n      </Paper>\n      </ListItem>\n  )\n}\n\nconst TopicList = (props) => {\n  const {topicId, instrumentId, ccQuestionId} = props\n\n  const dispatch = useDispatch()\n\n  const topics = useSelector(state => state.topics);\n\n  const classes = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\n  const handleChange = (event, value, reason) => {\n    dispatch(CcQuestions.topic.set(instrumentId, ccQuestionId, event.target.value));\n  }\n\n  if(isEmpty(topics)){\n    return 'Fetching topics'\n  }else if(isNil(topicId)){\n    return (\n          <div>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"grouped-native-select\">Topic</InputLabel>\n              <Select native id=\"grouped-native-select\" onChange={handleChange}>\n                <option aria-label=\"None\" value=\"\" />\n                {Object.values(topics).map((topic) => (\n                  <option key={topic.id} value={topic.id}>{(topic.level === 1) ? topic.name : '--' + topic.name }</option>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n    )\n  }else{\n    return (\n          <div>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"grouped-native-select\">Topic</InputLabel>\n              <Select native defaultValue={topicId} id=\"grouped-native-select\" onChange={handleChange}>\n                <option aria-label=\"None\" value=\"\" />\n                {Object.values(topics).map((topic) => (\n                  <option key={topic.id} value={topic.id}>{(topic.level === 1) ? topic.name : '--' + topic.name }</option>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n    )\n  }\n}\n\nconst VariableList = (props) => {\n  const {variables, instrumentId, ccQuestionId} = props\n\n  const dispatch = useDispatch()\n\n  const allVariables = useSelector(state => state.variables);\n  const variableOptions = get(allVariables, instrumentId, {})\n\n  const handleAddVariable = (newVariables) => {\n    dispatch(CcQuestions.variables.add(instrumentId, ccQuestionId, newVariables));\n  }\n\n  const handleRemoveVariable = (oldVariables) => {\n    dispatch(CcQuestions.variables.remove(instrumentId, ccQuestionId, oldVariables));\n  }\n\n  var difference = []\n\n  const handleChange = (event, value, reason) => {\n    switch (reason) {\n      case 'select-option':\n        difference = value.filter(x => !variables.includes(x));\n        if(!isEmpty(difference)){\n          return handleAddVariable(difference.map((variable) => { return variable.name }).join(','))\n        };\n        break;\n      case 'remove-option':\n        difference = variables.filter(x => !value.includes(x));\n        if(!isEmpty(difference)){\n          return handleRemoveVariable(difference.map((variable) => { return variable.id }).join(','))\n        };\n        break;\n      default:\n        return null;\n    }\n  }\n\n  if(isEmpty(variables)){\n    return (\n      <div>\n         <Autocomplete\n          multiple\n          id=\"tags-outlined\"\n          options={Object.values(variableOptions)}\n          getOptionLabel={(option) => option.name}\n          onChange={handleChange}\n          value={[]}\n          filterSelectedOptions\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Variables\"\n              placeholder=\"Add variable\"\n            />\n          )}\n        />\n      </div>\n    )\n  }else{\n    return (\n      <div>\n         <Autocomplete\n          multiple\n          id=\"tags-outlined\"\n          options={Object.values(variableOptions)}\n          getOptionLabel={(option) => option.name}\n          onChange={handleChange}\n          value={variables}\n          getOptionSelected= {(option, value) => (\n            option.id === value.id\n          )}\n          filterSelectedOptions\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Variables\"\n              placeholder=\"Add variable\"\n            />\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nconst QuestionGridListItem = (props) => {\n\n  return (\n    <div>This is a Question Grid</div>\n  )\n}\n\nconst ConditionItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'literal', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n              <ListItem button className={classes.nested}>\n                {(function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />;\n                    case 'CcQuestion':\n                      return <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    case 'CcCondition':\n                      return <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    default:\n                      console.log(child)\n                      return null;\n                  }\n                })()}\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst SequenceItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'label', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n                (function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />\n                          </ListItem>)\n                    case 'CcQuestion':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    case 'CcCondition':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    default:\n                      return null;\n                  }\n                })()\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst InstrumentMap = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n\n  useEffect(() => {\n    dispatch(Instrument.show(instrumentId));\n    dispatch(CcSequences.all(instrumentId));\n    dispatch(CcStatements.all(instrumentId));\n    dispatch(CcConditions.all(instrumentId));\n    dispatch(CcQuestions.all(instrumentId));\n    dispatch(QuestionItems.all(instrumentId));\n    dispatch(QuestionGrids.all(instrumentId));\n    dispatch(Variables.all(instrumentId));\n    dispatch(Topics.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sequence = (isEmpty(cc_sequences)) ? undefined : Object.values(cc_sequences).find(element => element.top == true)\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Maps'} instrumentId={instrumentId}>\n        <InstrumentHeading instrument={instrument} mode={'map'} />\n      {isNil(sequence)\n        ? <Box m=\"auto\"><BounceLoader color={'#009de6'}/></Box>\n        : <SequenceItem instrumentId={instrumentId} type={'CcSequence'} id={sequence.children[0].id} title={sequence.children[0].label} children={sequence.children[0].children}/>\n      }\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentMap;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { InstrumentHeading } from '../components/InstrumentHeading'\nimport { get } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuild = (props) => {\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const stats = useSelector(state => get(state.instrumentStats, instrumentId, {}));\n\n  const instrumentStats = get(stats, 'stats', {})\n  const {\n    categories=0, code_lists=0, response_domain_datetimes=0,\n    response_domain_numerics=0, response_domain_texts=0,\n    question_items=0, question_grids=0, instructions=0,\n    cc_conditions=0, cc_loops=0, cc_questions=0, cc_sequences=0,\n    cc_statements=0\n  } = instrumentStats\n\n  useEffect(() => {\n    dispatch(Instrument.show(instrumentId));\n    dispatch(Instrument.stats(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const StatCount = (props) => {\n    const {label, value} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label}/>\n        <ListItemSecondaryAction>\n          <Chip label={value} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <InstrumentHeading instrument={instrument} mode={'build'}/>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })}>Code Lists</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Categories\" value={categories} />\n                  <StatCount label=\"Code Lists\" value={code_lists} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })}>ResponseDomains</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Datetime Answers\" value={response_domain_datetimes} />\n                  <StatCount label=\"Numberic Answers\" value={response_domain_numerics} />\n                  <StatCount label=\"Text Answers\" value={response_domain_texts} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })}>Questions</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Question Items\" value={question_items} />\n                  <StatCount label=\"Question Grids\" value={question_grids} />\n                  <StatCount label=\"Instructions\" value={instructions} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.constructs.show, { instrument_id: instrumentId })}>Constructs</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Conditions\" value={cc_conditions} />\n                  <StatCount label=\"Loops\" value={cc_loops} />\n                  <StatCount label=\"Questions\" value={cc_questions} />\n                  <StatCount label=\"Sequences\" value={cc_sequences} />\n                  <StatCount label=\"Statements\" value={cc_statements} />\n              </List>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuild;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { isEmpty, isNil, get } from 'lodash'\n\nexport const ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nexport const ObjectStatusBar = (props) => {\n  const {id, type} = props\n  const status = ObjectStatus(id, type)\n\n  if(!isEmpty(status) && !isNil(status.error)){\n    return (\n      <div>\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          {status.errorMessage}\n        </Alert>\n      </div>\n    )\n  }else{\n    return ''\n  }\n}\n","import React from 'react'\nimport {isNil} from 'lodash'\nimport { useDispatch } from 'react-redux'\n\nimport {\n  Grid,\n  Button\n} from '@material-ui/core';\n\nexport const DeleteObjectButton = (props) => {\n  const {instrumentId, id, action, onDelete= () => { console.log('No delete callback provided') }} = props;\n\n  const dispatch=useDispatch()\n\n  const handleDelete = () => {\n    if( !isNil(id) && window.confirm('Are you sure you want to delete this?')){\n      dispatch(action.delete(instrumentId, id, onDelete))\n    }\n  }\n\n  if(isNil(id)){\n    return ''\n  }\n\n  return (\n    <Grid item style={{ marginTop: 16 }}>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={()=>{handleDelete()}}\n      >\n        Delete\n      </Button>\n    </Grid>\n  )\n}\n","import { merge, isObject } from 'lodash';\n\nexport const ObjectCheckForInitialValues = (initialValues, values) => {\n    // For every field initially provided, we check whether it value has been removed\n    // and set it explicitly to an empty string\n    if (!initialValues) return values;\n    const initialValuesWithEmptyFields = Object.keys(initialValues).reduce(\n        (acc, key) => {\n            if (values[key] instanceof Date || Array.isArray(values[key])) {\n                acc[key] = values[key];\n            } else if (\n                typeof values[key] === 'object' &&\n                values[key] !== null\n            ) {\n                acc[key] = ObjectCheckForInitialValues(initialValues[key], values[key]);\n            } else {\n                acc[key] =\n                    typeof values[key] === 'undefined' ? null : values[key];\n            }\n            return acc;\n        },\n        {}\n    );\n\n    // Finally, we merge back the values to not miss any which wasn't initially provided\n    return merge(initialValuesWithEmptyFields, values);\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcConditions } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('condition')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Logic\"\n        name=\"logic\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n];\n\nexport const CcConditionForm = (props) => {\n  const {ccCondition, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccCondition.id || 'new', 'CcCondition')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccCondition, values)\n\n    if(isNil(ccCondition.id)){\n      dispatch(CcConditions.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcConditions.update(instrumentId, ccCondition.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccCondition.id || 'new'} type={'CcCondition'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccCondition}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcConditions} onDelete={()=> { onDelete({ path }) }}/>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcQuestions } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { OnChange } from 'react-final-form-listeners'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('question')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((error_key)=>{\n      var key = (['response_unit', 'question'].includes(error_key)) ? `${error_key}_id` : error_key\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[error_key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"question_type\"\n          label=\"Type\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='QuestionItem'>Item</MenuItem>\n          <MenuItem value='QuestionGrid'>Grid</MenuItem>\n        </Select>\n      )\n  }\n];\n\nexport const CcQuestionForm = (props) => {\n  const {ccQuestion, instrumentId, onChange, path, onDelete} = props;\n\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  const allResponseUnits = useSelector(state => state.response_units);\n  const responseUnits = get(allResponseUnits, instrumentId, {})\n\n  const [questionOptions, setQuestionOptions] = useState((ccQuestion.question_type === 'QuestionGrid') ? questionGrids : questionItems);\n\n  const changeQuestionOptions = (question_type) => {\n    setQuestionOptions((question_type === 'QuestionGrid') ? questionGrids : questionItems)\n  }\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccQuestion.id || 'new', 'CcQuestion')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccQuestion, values)\n\n    if(isNil(ccQuestion.id)){\n      dispatch(CcQuestions.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcQuestions.update(instrumentId, ccQuestion.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccQuestion.id || 'new'} type={'CcQuestion'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccQuestion}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <OnChange name=\"question_type\">\n                  {(value, previous) => {\n                    changeQuestionOptions(value)\n                    values.question_id = null\n                  }}\n                </OnChange>\n                <Grid item xs=\"12\" key=\"question\">\n                  <Select\n                    name=\"question_id\"\n                    label=\"Question\"\n                    formControlProps={{ margin: 'none' }}\n                  >\n                    <MenuItem></MenuItem>\n                    {Object.values(questionOptions).map((item, idx) => (\n                      <MenuItem value={item.id}>{item.label}</MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n                <Grid item xs=\"12\" key=\"response_unit_id\">\n                  <Select\n                    name=\"response_unit_id\"\n                    label=\"Interviewee\"\n                    formControlProps={{ margin: 'none' }}\n                  >\n                    <MenuItem></MenuItem>\n                    {Object.values(responseUnits).map((item, idx) => (\n                      <MenuItem value={item.id}>{item.label}</MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcQuestions} onDelete={()=> { onDelete({ path }) }} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcStatements } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('statement')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={false}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={false}\n      />\n    ),\n  },\n];\n\nexport const CcStatementForm = (props) => {\n  const {ccStatement, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccStatement.id || 'new', 'CcStatement')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccStatement, values)\n\n    if(isNil(ccStatement.id)){\n      dispatch(CcStatements.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcStatements.update(instrumentId, ccStatement.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccStatement.id || 'new'} type={'CcStatement'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccStatement}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcStatements} onDelete={()=> { onDelete({ path }) }} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcSequences } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('sequence')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n];\n\nexport const CcSequenceForm = (props) => {\n  const {ccSequence, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccSequence.id || 'new', 'CcSequence')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccSequence, values)\n\n    if(isNil(ccSequence.id)){\n      dispatch(CcSequences.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcSequences.update(instrumentId, ccSequence.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccSequence.id || 'new'} type={'CcSequence'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccSequence}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcSequences} onDelete={()=> { onDelete({ path }) }} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcLoops } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('loop')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n   if (!values.start_val) {\n     errors.start_val = 'Required';\n   }\n   if (!values.loop_var) {\n     errors.loop_var = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Variable\"\n        name=\"loop_var\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Start Value\"\n        name=\"start_val\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"End Value\"\n        name=\"end_val\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Loop While\"\n        name=\"loop_while\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nexport const CcLoopForm = (props) => {\n  const {ccLoop, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccLoop.id || 'new', 'CcLoop')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccLoop, values)\n\n    if(isNil(ccLoop.id)){\n      dispatch(CcLoops.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcLoops.update(instrumentId, ccLoop.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccLoop.id || 'new'} type={'CcLoop'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccLoop}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcLoops} onDelete={()=> { onDelete({ path }) }}/>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcLoops, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, Variables, Topics, ResponseUnits } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { CcConditionForm } from '../components/CcConditionForm'\nimport { CcQuestionForm } from '../components/CcQuestionForm'\nimport { CcStatementForm } from '../components/CcStatementForm'\nimport { CcSequenceForm } from '../components/CcSequenceForm'\nimport { CcLoopForm } from '../components/CcLoopForm'\nimport { Loader } from '../components/Loader'\nimport { ObjectColour } from '../support/ObjectColour'\nimport { get, isEmpty, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Badge from '@material-ui/core/Badge';\nimport Collapse from '@material-ui/core/Collapse';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { Box } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\nimport SearchBar from \"material-ui-search-bar\";\n\nimport {\n  Button,\n  ButtonGroup,\n  TextField,\n  Divider\n} from '@material-ui/core';\n\nimport {\n  Alert,\n  AlertTitle\n} from '@material-ui/lab';\n\nimport SortableTree, { addNodeUnderParent, removeNodeAtPath, getFlatDataFromTree, changeNodeAtPath, toggleExpandedForAll } from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css'; // This only needs to be imported once in your app\n\nconst TreeNode = (instrumentId, type, id, expanded=false) => {\n  var item = ObjectFinder(instrumentId, type, id)\n  if(item.type === \"condition\"){\n    var children = get(item, 'children',[])\n    var fchildren = get(item, 'fchildren',[])\n\n    var trueAndFalse = [\n      { title: `True`, expanded: expanded, conditionId: item.id, type: 'conditionTrue', children: children.map(child => TreeNode(instrumentId, child.type, child.id)) },\n      { title: `False`, expanded: expanded, conditionId: item.id, type: 'conditionFalse', children: fchildren.map(child => TreeNode(instrumentId, child.type, child.id)) },\n    ]\n    return {...item, ...{ title: `${item.label}`, expanded: expanded, type: item.type, children: trueAndFalse } }\n  }else{\n    var children = get(item, 'children',[])\n\n    return {...item, ...{ title: `${item.label}`, expanded: expanded, type: item.type, children: children.map(child => TreeNode(instrumentId, child.type, child.id)) } }\n  }\n}\n\nconst TreeNodeFormatter = (instrumentId, item) => {\n  return {...item, ...{ title: `${item.label}`, expanded: true, type: item.type } }\n}\n\nconst Tree = (props) => {\n  const { topSequence, instrumentId, dispatch, onNodeSelect } = props\n  const [treeData, setTreeData] = useState([TreeNode(instrumentId, 'CcSequence', topSequence.id, true)]);\n  const [selectedNode, setSelectedNode] = useState({});\n//  const [expanded, setExpanded] = useState(true);\n  const classes = useStyles();\n\n  const [searchString, setSearchString] = useState();\n  const [searchFocusIndex, setSearchFocusIndex] = useState();\n  const [searchFoundCount, setSearchFoundCount] = useState();\n\n  // Case insensitive search of `node.title`\n  const customSearchMethod = ({ node, searchQuery }) =>\n    searchQuery &&\n    node.title.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1;\n\n  const selectPrevMatch = () =>\n      setSearchFocusIndex(\n        searchFocusIndex !== null\n          ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\n          : searchFoundCount - 1\n      );\n\n  const selectNextMatch = () =>\n    setSearchFocusIndex(\n        searchFocusIndex !== null\n          ? (searchFocusIndex + 1) % searchFoundCount\n          : 0,\n    );\n\n  const getNodeKey = ({ treeIndex }) => treeIndex;\n\n  const updateNode = ({ node, path }) => {\n    var data = changeNodeAtPath({\n        treeData: treeData,\n        path,\n        getNodeKey,\n        newNode: TreeNodeFormatter(instrumentId, node)\n      })\n      setTreeData(data)\n      reorderConstructs(data)\n  }\n\n  const deleteNode = ({ path }) => {\n    onNodeSelect({})\n    setTreeData(removeNodeAtPath({\n                    treeData: treeData,\n                    path,\n                    getNodeKey,\n    }));\n  }\n\n  const canHaveChildren = (node) => {\n    return (node.type === 'sequence' || node.type === 'loop' || node.type === 'conditionTrue' || node.type === 'conditionFalse')\n  }\n\n  const canDrop = ({ node, nextParent, prevPath, nextPath }) => {\n    if (canHaveChildren(nextParent)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const toggleExpand = (expanded) => {\n    setTreeData(toggleExpandedForAll({\n                    treeData: treeData,\n                    expanded: expanded\n    }));\n  }\n\n  const orderArray = (data) => {\n    return getFlatDataFromTree({\n      treeData: data,\n      getNodeKey: ({ node }) => { return { id: node.id, type: node.type, children: node.children.map(child => `type ${child.type} id ${child.id}` ) } }, // This ensures your \"id\" properties are exported in the path\n      ignoreCollapsed: false, // Makes sure you traverse every node in the tree, not just the visible ones\n    }).map(({ node, path }) => {\n      if(['conditionTrue', 'conditionFalse'].includes(node.type)){\n        return null\n      }\n      let parent = path[path.length - 2]\n      let branch = (parent !== undefined && parent.type === 'conditionFalse') ? 1 : 0\n      if(parent !== undefined && ['conditionTrue', 'conditionFalse'].includes(parent.type)){\n        parent = path[path.length - 3]\n      }\n      return {\n        id: node.id,\n        type: node.type,\n        position: (parent !== undefined) ? parent.children.indexOf(`type ${node.type} id ${node.id}`) + 1 : node.position,\n        branch: branch,\n        // // The last entry in the path is this node's key\n        // // The second to last entry (accessed here) is the parent node's key\n        parent: (parent !== undefined) ? { id: parent.id, type: parent.type } : {},\n    }}).filter(el => el != null);\n  }\n\n  const reorderConstructs = (data) => {\n    dispatch(Instrument.reorderConstructs(instrumentId, orderArray(data)));\n  }\n\n  const generateButtons = (node, path) => {\n      var buttons = []\n      if(canHaveChildren(node)){\n        buttons.push(\n              <button\n              onClick={(event) => {\n                  setTreeData(addNodeUnderParent({\n                    treeData: treeData,\n                    parentKey: path[path.length - 1],\n                    expandParent: true,\n                    getNodeKey,\n                    newNode: {\n                      title: `Click to select construct type`,\n                      children: []\n                    }\n                  }).treeData)\n                  event.stopPropagation()\n                  setSelectedNode({node: { type: undefined }})\n              }}\n            >\n              <AddIcon />\n            </button>\n        )\n      }\n      return buttons;\n  }\n\n  return (\n    <div style={{ height: 10000 }}>\n\n    <SearchBar\n      placeholder=\"Search (press return to perform search)\"\n      onRequestSearch={(newValue) =>\n              setSearchString(newValue)\n            }\n      onCancelSearch={() => {\n              setSearchString()\n            }}\n    />\n\n    {searchFoundCount === 0 && !isNil(searchString) && (\n      <Alert severity=\"error\">\n        <AlertTitle>Error</AlertTitle>\n        No results found.\n      </Alert>\n    )}\n\n    {searchFoundCount > 0 && !isNil(searchString) && (\n      <>\n        <span>\n          &nbsp;\n          {searchFoundCount > 0 ? searchFocusIndex + 1 : 0}\n          &nbsp;of&nbsp;\n          {searchFoundCount || 0} matches\n        </span>\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n          <Button onClick={selectPrevMatch}>&lt; Prev</Button>\n          <Button onClick={selectNextMatch}>&gt; Next</Button>\n        </ButtonGroup>\n      </>\n    )}\n\n      <Divider className={classes.divider}/>\n\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button onClick={()=>{toggleExpand(true)}} startIcon={<ExpandMoreIcon />}>Expand All</Button>\n        <Button onClick={()=>{toggleExpand(false)}} startIcon={<ExpandLessIcon />}>Collapse All</Button>\n      </ButtonGroup>\n\n      <SortableTree\n        treeData={treeData}\n        onChange={newTreeData => { setTreeData(newTreeData); reorderConstructs(newTreeData) } }\n        canNodeHaveChildren={node => canHaveChildren(node)}\n        canDrop={canDrop}\n        canDrag={({node}) =>{\n          return !['conditionTrue', 'conditionFalse'].includes(node.type)\n        }}\n        searchMethod={customSearchMethod}\n        searchQuery={searchString}\n        searchFocusOffset={searchFocusIndex}\n        searchFinishCallback={(matches) => {\n          setSearchFoundCount(matches.length)\n          setSearchFocusIndex(matches.length > 0 ? searchFocusIndex % matches.length : 0)\n        }}\n        generateNodeProps={({ node, path }) => {\n          const boxShadow = (node === selectedNode || node.type == 'sequence' ) ? `0px 0px 15px 3px  #${ObjectColour(node.type)}` : ''\n\n          return (\n            {\n              style: {\n                boxShadow: boxShadow,\n              },\n              onClick: () => {\n                onNodeSelect({ node: node, path: path,  callback: ({ node, path }) => { updateNode({ node, path }) }, deleteCallback: ({ path }) => { deleteNode({ path }) } });\n                setSelectedNode(node);\n              },\n              buttons: generateButtons(node, path),\n              className: `${node.type}:${node.id}`\n            }\n          )\n        }}\n      />\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  main: {\n    'min-height': '1200px'\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n    right: '5px'\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  paper:{\n    boxShadow :`5px 5px 10px 5px  #${ObjectColour('default')}`\n  },\n  statement:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('statement')}`,\n    'margin-bottom': '10px'\n  },\n  sequence:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('sequence')}`,\n    'margin-bottom': '10px'\n  },\n  question:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('question')}`,\n    'margin-bottom': '10px'\n  },\n  loop:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('loop')}`,\n    'margin-bottom': '10px'\n  },\n  condition:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('condition')}`,\n    'margin-bottom': '10px'\n  },\n  divider:{\n    margin: '25px'\n  }\n}));\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const loops = useSelector(state => state.cc_loops);\n  const cc_loops = get(loops, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcLoop'){\n    item = get(cc_loops, id.toString(), {})\n    item.type = 'loop'\n  }\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n    item.type = 'sequence'\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n    item.type = 'statement'\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n    item.type = 'condition'\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n    item.type = 'question'\n  }\n\n  return item\n\n}\n\nconst ConstructForm = (props) => {\n  const {object, instrumentId, onNodeSelect} = props;\n  const { node={}, path, callback=(node)=>{ console.log('No onChange callback provided')}, deleteCallback=(node)=>{ console.log('No onDelete callback provided')} } = object;\n\n  switch (node.type) {\n    case 'question':\n      return <CcQuestionForm ccQuestion={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'statement':\n      return <CcStatementForm ccStatement={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'sequence':\n      return <CcSequenceForm ccSequence={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'condition':\n      return <CcConditionForm ccCondition={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'loop':\n      return <CcLoopForm ccLoop={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case undefined:\n      return <NewConstructQuestion onNodeSelect={onNodeSelect} object={object}/>\n    default:\n      return ''\n  }\n\n}\n\nconst NewConstructQuestion = (props) => {\n  const {object, onNodeSelect} = props;\n\n  const classes = useStyles();\n\n  return (\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <h3>Select construct type</h3>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.question}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'question' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Question\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.condition}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'condition' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Condition\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.loop}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'loop' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Loop\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.sequence}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'sequence' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Sequence\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.statement}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'statement' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Statement\n                  </Button>\n          </Paper>\n  )\n\n}\n\nconst InstrumentConstructBuild = (props) => {\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, null)\n\n  const [selectedNode, setSelectedNode] = useState({});\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(Instrument.show(instrumentId)),\n      dispatch(CcSequences.all(instrumentId)),\n      dispatch(CcStatements.all(instrumentId)),\n      dispatch(CcConditions.all(instrumentId)),\n      dispatch(CcLoops.all(instrumentId)),\n      dispatch(CcQuestions.all(instrumentId)),\n      dispatch(QuestionItems.all(instrumentId)),\n      dispatch(QuestionGrids.all(instrumentId)),\n      dispatch(ResponseUnits.all(instrumentId))\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sequence = (isEmpty(cc_sequences) || isNil(cc_sequences)) ? undefined : Object.values(cc_sequences).find(element => element.top == true)\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Build'} instrumentId={instrumentId}>\n        <h1>{get(instrument, 'label')}</h1>\n      {!dataLoaded\n        ? <Loader />\n        : (\n          <Grid container spacing={3} className={classes.main}>\n            <Grid item xs={(isEmpty(selectedNode)) ? 12 : 12 }>\n              <Tree topSequence={sequence.children[0]} instrumentId={instrumentId} onNodeSelect={setSelectedNode} dispatch={dispatch} />\n            </Grid>\n            {!isEmpty(selectedNode) && (\n              <Grid item xs={4} className={classes.side}>\n                <ConstructForm object={selectedNode} instrumentId={instrumentId} onNodeSelect={setSelectedNode} />\n              </Grid>\n            )}\n          </Grid>\n        )\n      }\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentConstructBuild;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CodeLists } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport {\n  TextField,\n  Checkboxes,\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <Checkboxes\n        name=\"rd\"\n        formControlProps={{ margin: 'none' }}\n        data={{ label: 'Response Domain', value: true }}\n      />\n    ),\n  },\n  {\n    size: 12,\n    visible: (values) => {\n      return get(values, 'rd', false)\n    },\n    field: <TextField name=\"min_responses\" multiline label=\"Min Responses\" margin=\"none\" />,\n  },\n  {\n    size: 12,\n    visible: (values) => {\n      return get(values, 'rd', false)\n    },\n    field: <TextField name=\"max_responses\" multiline label=\"Max Responses\" margin=\"none\" />,\n  }\n];\n\nconst FormField = (props) => {\n  const {item, values} = props\n\n  if(item.visible !== undefined && !item.visible(values) ){\n    return ''\n  }\n\n  if(item.type && item.type === 'select'){\n    return item.field()\n  }else{\n    return item.field\n  }\n}\n\nexport const CodeListForm = (props) => {\n  const {codeList, instrumentId} = props;\n\n  const categories = useSelector(state => get(state.categories, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n      values = ObjectCheckForInitialValues(codeList, values)\n\n    if(isNil(codeList.id)){\n      dispatch(CodeLists.create(instrumentId, values))\n    }else{\n      dispatch(CodeLists.update(instrumentId, codeList.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={codeList.id || 'new'} type={'CodeList'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={codeList}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    <FormField item={item} values={values} />\n                  </Grid>\n                ))}\n                <h3>Codes</h3>\n                  <AddCircleOutlineIcon onClick={() => push('codes', {})}/>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>ID</TableCell>\n                        <TableCell size=\"small\">Value</TableCell>\n                        <TableCell>Label</TableCell>\n                        <TableCell>Actions</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                            <FieldArray name=\"codes\">\n                              {({ fields }) =>\n                                fields.map((name, index) => (\n                                  <TableRow key={name}>\n                                    <TableCell>\n                                      {fields.value[index].id}\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      <TextField name={`${name}.value`} multiline label=\"Value\" margin=\"none\" />\n                                    </TableCell>\n                                    <TableCell>\n                                     <Autocomplete\n                                      freesolo=\"true\"\n                                      options={Object.values(categories)}\n                                      getOptionLabel={(option) => option.label}\n                                      onChange={(event, value, reason)=>{\n                                        if(isNil(value)){\n                                          fields.update(index, {...fields.value[index], ...{category_id: null, label: null} })\n                                        }else{\n                                          fields.update(index, {...fields.value[index], ...{category_id: value.id, label: value.label} })\n                                        }\n                                      } }\n                                      value={{id: fields.value[index].category_id, label:fields.value[index].label}}\n                                      getOptionSelected= {(option, value) => (\n                                        option.id === value.id\n                                      )}\n                                      renderInput={(params) => (\n                                        <TextField name={`${name}.label`}\n                                          {...params}\n                                          variant=\"outlined\"\n                                          label=\"Label\"\n                                          placeholder=\"label\"\n                                        />\n                                      )}\n                                    />\n                                    </TableCell>\n                                    <TableCell>\n                                      <span\n                                        onClick={() => fields.remove(index)}\n                                        style={{ cursor: 'pointer' }}\n                                      >\n                                        <DeleteIcon />\n                                      </span>\n                                    </TableCell>\n                                  </TableRow>\n                                ))\n                              }\n                            </FieldArray>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CodeLists} />\n              </Grid>\n              <Grid item style={{ marginTop: 16 }}>\n                <h3>Used By</h3>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>ID</TableCell>\n                        <TableCell size=\"small\">Question Type</TableCell>\n                        <TableCell>Label</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                              {codeList.used_by.map((question) => (\n                                  <TableRow key={question.id}>\n                                    <TableCell>\n                                      <Button variant=\"outlined\">\n                                        <Link to={url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: question.id })}>{question.id}</Link>\n                                      </Button>\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      {question.type}\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      {question.label}\n                                    </TableCell>\n                                  </TableRow>\n                                ))\n                              }\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { useHistory } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst ObjectTypeLookup = (objectType, instrumentId) => {\n    switch(objectType) {\n      case('ResponseDomainNumeric'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Numeric'\n        }\n      case('ResponseDomainText'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Text'\n        }\n      case('ResponseDomainDatetime'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Datetime'\n        }\n      case('CodeList'):\n        return {\n          path: url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: 'new' }),\n          text: 'New CodeList'\n        }\n      case('QuestionItem'):\n        return {\n          path: url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: 'new' }),\n          text: 'Question Item'\n        }\n      case('QuestionGrid'):\n        return {\n          path: url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: 'new' }),\n          text: 'Question Grid'\n        }\n      default:\n        return {\n          path: '/',\n          text: 'Not found'\n        }\n  }\n}\n\nexport const CreateNewBuildObjectButtons  = (props) => {\n  const { objectTypes=[], instrumentId, callback=()=>{}} = props;\n\n  const history = useHistory();\n\n  const createNew = (path) => {\n    history.push(path);\n    callback('new')\n  }\n\n  const buttons = objectTypes.map( objectType => ObjectTypeLookup(objectType, instrumentId) )\n\n  return (\n    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n     {buttons.map((button) => {\n        return <Button onClick={()=> { createNew(button.path)} }startIcon={<AddIcon />}>{button.text}</Button>\n      })}\n    </ButtonGroup>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CodeLists, Categories } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { CodeListForm } from '../components/CodeListForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildCodeLists = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const codeListId = get(props, \"match.params.codeListId\", null);\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n  const selectedCodeList = get(codeLists, codeListId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(CodeLists.all(instrumentId));\n    dispatch(Categories.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const CodeListItem = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleCodeListSelection(id)}}/>\n        <ListItemSecondaryAction>\n          <Chip label={value} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  const handleCodeListSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: id })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Code Lists</h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['CodeList']} />\n              <List dense={true}>\n                {Object.values(codeLists).map((codeList) => {\n                  return (\n                    <CodeListItem label={codeList.label} value={codeList.used_by.length} id={codeList.id} />\n                  )\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              {!isNil(selectedCodeList) && (\n                <CodeListForm codeList={selectedCodeList} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildCodeLists;\n","import React, { useEffect } from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionItems, ResponseDomainNumerics, ResponseDomainTexts, ResponseDomainDatetimes } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  Table,\n  TableContainer,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport {\n  Autocomplete\n} from '@material-ui/lab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Instruction\"\n        name=\"instruction\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nexport const QuestionItemForm = (props) => {\n  const {questionItem, instrumentId} = props;\n\n  const categories = useSelector(state => get(state.categories, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const responseDomainNumerics = useSelector(state => get(state.responseDomainNumerics, instrumentId, {}));\n  const responseDomainTexts = useSelector(state => get(state.responseDomainTexts, instrumentId, {}));\n  const responseDomainDatetimes = useSelector(state => get(state.responseDomainDatetimes, instrumentId, {}));\n\n  const responseDomains = [...Object.values(responseDomainNumerics), ...Object.values(responseDomainTexts), ...Object.values(responseDomainDatetimes)]\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(questionItem, values)\n\n    if(isNil(questionItem.id)){\n      dispatch(QuestionItems.create(instrumentId, values))\n    }else{\n      dispatch(QuestionItems.update(instrumentId, questionItem.id, values))\n    }\n  }\n\n  useEffect(() => {\n    dispatch(ResponseDomainNumerics.all(instrumentId));\n    dispatch(ResponseDomainTexts.all(instrumentId));\n    dispatch(ResponseDomainDatetimes.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={questionItem.id || 'new'} type={'QuestionItem'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={questionItem}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.field}\n                  </Grid>\n                ))}\n                <h3>Response Domains</h3>\n                <AddCircleOutlineIcon onClick={() => push('rds', {})}/>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Type and Label</TableCell>\n                          <TableCell>Actions</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <FieldArray name=\"rds\">\n                          {({ fields }) =>\n                            fields.map((name, index) => (\n                              <TableRow key={name}>\n                                <TableCell>\n                                 <Autocomplete\n                                  freesolo=\"true\"\n                                  options={Object.values(responseDomains)}\n                                  getOptionLabel={(option) => `${option.type} - ${option.label}`}\n                                  onChange={(event, value, reason)=>{\n                                    if(isNil(value)){\n                                      fields.update(index, {...fields.value[index], ...{type: null, id: null, label: null} })\n                                    }else{\n                                      fields.update(index, {...fields.value[index], ...{type: value.type, id: value.id, label: value.label} })\n                                    }\n                                  } }\n                                  value={{type: fields.value[index].type, id: fields.value[index].id, label:fields.value[index].label}}\n                                  getOptionSelected= {(option, value) => (\n                                    option.type === value.type && option.id === value.id\n                                  )}\n                                  renderInput={(params) => (\n                                    <TextField name={`${name}.type - ${name}.label`}\n                                      {...params}\n                                      variant=\"outlined\"\n                                      label=\"Label\"\n                                      placeholder=\"label\"\n                                    />\n                                  )}\n                                />\n                                </TableCell>\n                                <TableCell>\n                                  <span\n                                    onClick={() => fields.remove(index)}\n                                    style={{ cursor: 'pointer' }}\n                                  >\n                                    <DeleteIcon />\n                                  </span>\n                                </TableCell>\n                              </TableRow>\n                            ))\n                          }\n                        </FieldArray>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={QuestionItems} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionItems } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { QuestionItemForm } from '../components/QuestionItemForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildQuestionItems = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const questionItemId = get(props, \"match.params.questionItemId\", null);\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const questionItems = useSelector(state => get(state.questionItems, instrumentId, {}));\n  const selectedQuestion = get(questionItems, questionItemId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(QuestionItems.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const QuestionItem = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleQuestionSelection(id)}}/>\n      </ListItem>\n    )\n  }\n\n  const handleQuestionSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: id })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Question Items <Link to={url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })}>Question Grids</Link></h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['QuestionItem', 'QuestionGrid']} />\n              <List dense={true}>\n                {Object.values(questionItems).map((questionItem) => {\n                  return <QuestionItem label={questionItem.label} id={questionItem.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              {!isNil(selectedQuestion) && (\n                <QuestionItemForm questionItem={selectedQuestion} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildQuestionItems;\n","import React, { useEffect } from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionGrids, ResponseDomainNumerics, ResponseDomainTexts, ResponseDomainDatetimes } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { OnChange } from 'react-final-form-listeners'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem,\n  Table,\n  TableContainer,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport {\n  Autocomplete\n} from '@material-ui/lab';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Instruction\"\n        name=\"instruction\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    type: 'select',\n    size: 12,\n    field: (options) => (\n      <Select\n        name=\"horizontal_code_list_id\"\n        label=\"Horizontal Code List (X)\"\n        formControlProps={{ margin: 'none' }}\n      >\n        <MenuItem></MenuItem>\n        {options.map((item, idx) => (\n          <MenuItem value={item.id}>{item.label}</MenuItem>\n        ))}\n      </Select>\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"vertical_code_list_id\"\n          label=\"Vertical Code List (Y)\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          {options.map((item, idx) => (\n            <MenuItem value={item.id}>{item.label}</MenuItem>\n          ))}\n        </Select>\n      )\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"corner_label\"\n          label=\"Corner Label\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='H'>Horizontal</MenuItem>\n          <MenuItem value='V'>Vertical</MenuItem>\n        </Select>\n      )\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Roster Label\"\n        name=\"roster_label\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Roster Row Number\"\n        name=\"roster_rows\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nexport const QuestionGridForm = (props) => {\n  const {questionGrid, instrumentId} = props;\n\n  var codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  // Only show response domains in the list of codeLists\n  codeLists = Object.values(codeLists).filter((cl) => { return cl.rd === false})\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(questionGrid, values)\n\n    if(isNil(questionGrid.id)){\n      dispatch(QuestionGrids.create(instrumentId, values))\n    }else{\n      dispatch(QuestionGrids.update(instrumentId, questionGrid.id, values))\n    }\n  }\n\n  const responseDomainNumerics = useSelector(state => get(state.responseDomainNumerics, instrumentId, {}));\n  const responseDomainTexts = useSelector(state => get(state.responseDomainTexts, instrumentId, {}));\n  const responseDomainDatetimes = useSelector(state => get(state.responseDomainDatetimes, instrumentId, {}));\n\n  const responseDomains = [...Object.values(responseDomainNumerics), ...Object.values(responseDomainTexts), ...Object.values(responseDomainDatetimes)]\n\n  useEffect(() => {\n    dispatch(ResponseDomainNumerics.all(instrumentId));\n    dispatch(ResponseDomainTexts.all(instrumentId));\n    dispatch(ResponseDomainDatetimes.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={questionGrid.id || 'new'} type={'QuestionGrid'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={questionGrid}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <OnChange name=\"horizontal_code_list_id\">\n                  {(value, previous) => {\n                    const codeList = codeLists.find(el => el.id === value)\n                    if(codeList){\n                      values.cols = codeList.codes.map((code) => {\n                        return {\n                          label: code.label,\n                          value: code.value,\n                          order: code.order\n                        }\n                      })\n                    }\n                  }}\n                </OnChange>\n                <h3>Response Domains</h3>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Column</TableCell>\n                          <TableCell>Type and Label</TableCell>\n                          <TableCell>Actions</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <FieldArray name=\"cols\">\n                          {({ fields }) =>\n                            fields.map((name, index) => (\n                              <TableRow key={name}>\n                                <TableCell>{fields.value[index].label}</TableCell>\n                                <TableCell>\n                                 <Autocomplete\n                                  freesolo=\"true\"\n                                  options={Object.values(responseDomains)}\n                                  getOptionLabel={(option) => (option.type === '') ? `` :`${option.label} - ${option.type}`}\n                                  onChange={(event, value, reason)=>{\n                                    var rd;\n                                    if(isNil(value)){\n                                      rd = {...fields.value[index].rd, ...{type: '', id: null, label: ''} }\n                                    }else{\n                                      rd = {...fields.value[index].rd, ...{type: value.type, id: value.id, label: value.label} }\n                                    }\n                                    fields.update(index, {...fields.value[index], ...{rd: rd} })\n                                  } }\n                                  value={(fields.value[index].rd) ? {type: fields.value[index].rd.type, id: fields.value[index].rd.id, label:fields.value[index].rd.label} : {type: '', id: null, label: ''}}\n                                  getOptionSelected= {(option, value) => (\n                                    option.type === value.type && option.id === value.id\n                                  )}\n                                  renderInput={(params) => (\n                                    <TextField name={`${name}.type - ${name}.label`}\n                                      {...params}\n                                      variant=\"outlined\"\n                                      label=\"Label\"\n                                      placeholder=\"label\"\n                                    />\n                                  )}\n                                />\n                                </TableCell>\n                                <TableCell>\n                                  <span\n                                    onClick={() => fields.update(index, {...fields.value[index], ...{rd: {type: '', id: null, label: ''} } }) }\n                                    style={{ cursor: 'pointer' }}\n                                  >\n                                    <DeleteIcon />\n                                  </span>\n                                </TableCell>\n                              </TableRow>\n                            ))\n                          }\n                        </FieldArray>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={QuestionGrids} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionGrids, CodeLists } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { QuestionGridForm } from '../components/QuestionGridForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildQuestionGrids = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const [questionGridId, setquestionGridId] = React.useState(get(props, \"match.params.questionGridId\", null));\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const questionGrids = useSelector(state => get(state.questionGrids, instrumentId, {}));\n  const selectedQuestion = get(questionGrids, questionGridId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(QuestionGrids.all(instrumentId));\n    dispatch(CodeLists.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const QuestionGrid = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleQuestionSelection(id)}}/>\n      </ListItem>\n    )\n  }\n\n  const handleQuestionSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: id })\n    history.push(path);\n    setquestionGridId(id)\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Question Grids <Link to={url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })}>Question Items</Link></h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['QuestionItem', 'QuestionGrid']} callback={setquestionGridId} />\n              <List dense={true}>\n                {Object.values(questionGrids).map((questionGrid) => {\n                  return <QuestionGrid label={questionGrid.label} id={questionGrid.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              {!isNil(selectedQuestion) && (\n                <QuestionGridForm questionGrid={selectedQuestion} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildQuestionGrids;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainNumerics } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n   if (!values.subtype) {\n     errors.subtype = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"subtype\"\n          label=\"Type\"\n          formControlProps={{ margin: 'none' }}\n          required={true}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='Integer'>Integer</MenuItem>\n          <MenuItem value='Float'>Float</MenuItem>\n        </Select>\n      )\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Min\"\n        name=\"min\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Max\"\n        name=\"max\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nexport const ResponseDomainNumericForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(responseDomain, values)\n\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainNumerics.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainNumerics.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainNumerics} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainTexts } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Max Length\"\n        name=\"maxlen\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nexport const ResponseDomainTextForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(responseDomain, values)\n\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainTexts.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainTexts.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainTexts} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainDatetimes } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n   if (!values.subtype) {\n     errors.subtype = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    type: 'select',\n    size: 12,\n    field: (options) => (\n      <Select\n        name=\"subtype\"\n        label=\"Type\"\n        formControlProps={{ margin: 'none' }}\n        required={true}\n      >\n        <MenuItem value=\"Date\">Date</MenuItem>\n        <MenuItem value=\"Time\">Time</MenuItem>\n        <MenuItem value=\"Duration\">Duration</MenuItem>\n      </Select>\n    ),\n  },\n  {\n    size: 12,\n    visible: (values) => {\n      return get(values, 'subtype', '') === 'Duration'\n    },\n    field: (\n      <TextField\n        label=\"Format\"\n        name=\"format\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nconst FormField = (props) => {\n  const {item, values} = props\n\n  if(item.visible !== undefined && !item.visible(values) ){\n    return ''\n  }\n\n  if(item.type && item.type === 'select'){\n    return item.field()\n  }else{\n    return item.field\n  }\n}\n\nexport const ResponseDomainDatetimeForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(responseDomain, values)\n\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainDatetimes.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainDatetimes.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    <FormField item={item} values={values} />\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainDatetimes} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainNumerics, ResponseDomainTexts, ResponseDomainDatetimes } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { ResponseDomainNumericForm } from '../components/ResponseDomainNumericForm'\nimport { ResponseDomainTextForm } from '../components/ResponseDomainTextForm'\nimport { ResponseDomainDatetimeForm } from '../components/ResponseDomainDatetimeForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildResponseDomains = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const responseDomainId = get(props, \"match.params.responseDomainId\", null)\n  const responseDomainType = get(props, \"match.params.responseDomainType\", null)\n\n  const responseDomainNumerics = useSelector(state => get(state.responseDomainNumerics, instrumentId, {}));\n  const responseDomainTexts = useSelector(state => get(state.responseDomainTexts, instrumentId, {}));\n  const responseDomainDatetimes = useSelector(state => get(state.responseDomainDatetimes, instrumentId, {}));\n\n  const responseDomains = [...Object.values(responseDomainNumerics), ...Object.values(responseDomainTexts), ...Object.values(responseDomainDatetimes)]\n\n  const selectedResponseDomain = responseDomains.find(responseDomain => responseDomain.id == responseDomainId && responseDomain.type == responseDomainType) || {};\n\n  useEffect(() => {\n    dispatch(ResponseDomainNumerics.all(instrumentId));\n    dispatch(ResponseDomainTexts.all(instrumentId));\n    dispatch(ResponseDomainDatetimes.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const ResponseDomainItem = (props) => {\n    const {label, type, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleResponseDomainSelection(type,id)}}/>\n        <ListItemSecondaryAction>\n          <Chip label={type} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  const handleResponseDomainSelection = (type, id) => {\n    const path = url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: type, responseDomainId: id })\n    history.push(path);\n  }\n\n  const responseDomainForm = () => {\n    switch(responseDomainType) {\n      case('ResponseDomainNumeric'):\n          return <ResponseDomainNumericForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      case('ResponseDomainText'):\n          return <ResponseDomainTextForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      case('ResponseDomainDatetime'):\n          return <ResponseDomainDatetimeForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      default:\n        return ''\n    }\n  }\n\n  const createNew = (type) => {\n    const path = url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: type, responseDomainId: 'new' })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Response Domains</h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['ResponseDomainText', 'ResponseDomainNumeric', 'ResponseDomainDatetime']} />\n              <List dense={true}>\n                {Object.values(responseDomains).map((responseDomain) => {\n                  return <ResponseDomainItem label={responseDomain.label} type={responseDomain.type} id={responseDomain.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              { responseDomainForm() }\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildResponseDomains;\n","const NoMatch = () => {\n\n  return (\n    'NoMatch'\n  )\n}\n\nexport default NoMatch;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport { get } from 'lodash'\n\nconst RedirectFromState = () => {\n  const redirect = useSelector(state => get(state.common, 'redirect'));\n  const dispatch = useDispatch()\n\n  if(redirect){\n    return (\n      <Redirect to={redirect} />\n    )\n  }else{\n    return ''\n  }\n}\n\nexport default RedirectFromState;\n","import React from 'react';\nimport { Switch, BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\n\nimport routes from './routes'\nimport AuthRoute from './AuthRoute'\nimport Login from './pages/Login';\nimport Instruments from './pages/Instruments';\nimport Datasets from './pages/Datasets';\nimport DatasetView from './pages/DatasetView';\nimport InstrumentView from './pages/InstrumentView';\nimport InstrumentMap from './pages/InstrumentMap';\nimport InstrumentBuild from './pages/InstrumentBuild';\nimport InstrumentConstructBuild from './pages/InstrumentConstructBuild';\nimport InstrumentBuildCodeLists from './pages/InstrumentBuildCodeLists';\nimport InstrumentBuildQuestionItems from './pages/InstrumentBuildQuestionItems';\nimport InstrumentBuildQuestionGrids from './pages/InstrumentBuildQuestionGrids';\nimport InstrumentBuildResponseDomains from './pages/InstrumentBuildResponseDomains';\nimport NoMatch from './pages/NoMatch';\nimport RedirectFromState from './components/RedirectFromState';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#009de6',\n    },\n    secondary: {\n      main: '#652d90',\n    },\n    error: {\n      main: '#eb008b',\n    },\n    warning: {\n      main: '#eb008b',\n    },\n    info: {\n      main: '#faaf40',\n    },\n    success: {\n      main: '#37b34a',\n    },\n  }\n});\n\nconst App = () => {\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Router>\n       <div>\n          <RedirectFromState />\n          <Switch>\n            <AuthRoute type=\"guest\" exact path={routes.login} component={Login} />\n            <Route\n              exact\n              path=\"/\"\n              render={() => {return ( <Redirect to={routes.instruments.all} />)}}\n            />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.map.show} component={InstrumentMap} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.show} component={InstrumentBuild} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.show} component={InstrumentView} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.all} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.show} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.new} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.all} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.show} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.new} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.all} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.show} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.new} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.all} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.show} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.new} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.constructs.show} component={InstrumentConstructBuild} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.all} component={Instruments} />\n            <AuthRoute type=\"private\" exact path={'/datasets/:dataset_id'} component={DatasetView} />\n            <AuthRoute type=\"private\" exact path={routes.datasets.all} component={Datasets} />\n            <AuthRoute type=\"guest\" component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    </MuiThemeProvider>\n  )\n}\n\nexport default App\n","import { combineReducers } from \"redux\";\nimport { get } from 'lodash'\n\nconst serializeSearchesArrayToObject = (array) =>\n  array.reduce((obj, item) => {\n    obj[item.prefix] = item\n   return obj\n  }, {})\n\nconst serializeArrayToObject = (array) =>\n  array.reduce((obj, item) => {\n    obj[item.id] = item\n   return obj\n  }, {})\n\nconst auth = (state = { isAuthUser: !!window.localStorage.getItem(\"jwt\") }, action) => {\n\n  switch (action.type) {\n\n    case 'LOGIN':\n      window.localStorage.setItem('jwt', action.payload.jwt);\n      return { isAuthUser: true }\n    case 'LOGOUT':\n      window.localStorage.removeItem('jwt');\n      return { isAuthUser: false }\n    default:\n      return state\n  }\n}\n\nconst instruments = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENTS':\n      return serializeSearchesArrayToObject(action.payload.instruments)\n    case 'LOAD_INSTRUMENT':\n      return {...state, ...{[action.payload.instrument.prefix]: action.payload.instrument}}\n    default:\n      return state\n  }\n}\n\nconst datasets = (state = [], action) => {\n  switch (action.type) {\n    case 'LOAD_DATASETS':\n      return serializeArrayToObject(action.payload.datasets)\n    case 'LOAD_DATASET':\n      return {...state, ...{[action.payload.dataset.id]: action.payload.dataset}}\n    default:\n      return state\n  }\n}\n\nconst instrumentStats = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_STATS':\n      return {...state, ...{[action.payload.instrumentId]: action.payload.stats}}\n    default:\n      return state\n  }\n}\n\nconst cc_sequences = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_SEQUENCES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.sequences)}}\n    case 'LOAD_INSTRUMENT_SEQUENCE':\n      var instrumentSequences = state[action.payload.instrumentId]\n      instrumentSequences[action.payload.sequence.id] = action.payload.sequence\n      return {...state, ...{[action.payload.instrumentId]: instrumentSequences}}\n    default:\n      return state\n  }\n}\n\nconst cc_statements = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_STATEMENTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.statements)}}\n    case 'LOAD_INSTRUMENT_STATEMENT':\n      var instrumentStatements = state[action.payload.instrumentId]\n      instrumentStatements[action.payload.statement.id] = action.payload.statement\n      return {...state, ...{[action.payload.instrumentId]: instrumentStatements}}\n    default:\n      return state\n  }\n}\n\nconst cc_conditions = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CONDITIONS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.conditions)}}\n    case 'LOAD_INSTRUMENT_CONDITION':\n      var instrumentConditions = state[action.payload.instrumentId]\n      instrumentConditions[action.payload.condition.id] = action.payload.condition\n      return {...state, ...{[action.payload.instrumentId]: instrumentConditions}}\n    default:\n      return state\n  }\n}\n\n\nconst cc_loops = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_LOOPS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.loops)}}\n    case 'LOAD_INSTRUMENT_LOOP':\n      var instrumentLoops = state[action.payload.instrumentId]\n      instrumentLoops[action.payload.loop.id] = action.payload.loop\n      return {...state, ...{[action.payload.instrumentId]: instrumentLoops}}\n    default:\n      return state\n  }\n}\n\nconst response_units = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_UNITS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseUnits)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_UNIT':\n      var instrumentResponseUnits = state[action.payload.instrumentId]\n      instrumentResponseUnits[action.payload.responseUnit.id] = action.payload.responseUnit\n      return {...state, ...{[action.payload.instrumentId]: instrumentResponseUnits}}\n    default:\n      return state\n  }\n}\n\nconst cc_questions = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTIONS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION':\n      var instrumentQuestions = state[action.payload.instrumentId]\n      instrumentQuestions[action.payload.question.id] = action.payload.question\n      return {...state, ...{[action.payload.instrumentId]: instrumentQuestions}}\n    default:\n      return state\n  }\n}\n\nconst questionItems = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTION_ITEMS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION_ITEM':\n      var questionItems = get(state, action.payload.instrumentId, {})\n      const revisedQuestionItems = {...questionItems, ...{[action.payload.questionItem.id]: action.payload.questionItem}}\n      return {...state, ...{[action.payload.instrumentId]: revisedQuestionItems}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'QuestionItem'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst questionGrids = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTION_GRIDS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION_GRID':\n      var questionGrids = get(state, action.payload.instrumentId, {})\n      const revisedQuestionGrids = {...questionGrids, ...{[action.payload.questionGrid.id]: action.payload.questionGrid}}\n      return {...state, ...{[action.payload.instrumentId]: revisedQuestionGrids}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'QuestionGrid'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst variables = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_VARIABLES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.variables)}}\n    default:\n      return state\n  }\n}\n\nconst datasetVariables = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_DATASET_VARIABLES':\n      return {...state, ...{[action.payload.datasetId]: serializeArrayToObject(action.payload.variables)}}\n    case 'LOAD_DATASET_VARIABLE':\n      var variables = get(state, action.payload.datasetId, {})\n      const revisedVariables = {...variables, ...{[action.payload.variable.id]: action.payload.variable}}\n      return {...state, ...{[action.payload.datasetId]: revisedVariables}}\n    default:\n      return state\n  }\n}\n\nconst codeLists = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CODE_LISTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.codeLists)}}\n    case 'LOAD_INSTRUMENT_CODE_LIST':\n      var codeLists = get(state, action.payload.instrumentId, {})\n      const revisedCodeLists = {...codeLists, ...{[action.payload.codeList.id]: action.payload.codeList}}\n      return {...state, ...{[action.payload.instrumentId]: revisedCodeLists}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'CodeList'){\n        var codeLists = get(state, action.payload.instrumentId, {})\n        delete codeLists[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: codeLists}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainNumerics = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERICS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainNumerics)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERIC':\n      var responseDomainNumerics = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainNumerics, ...{[action.payload.responseDomainNumeric.id]: action.payload.responseDomainNumeric}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainNumeric'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainTexts = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainTexts)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXT':\n      var responseDomainTexts = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainTexts, ...{[action.payload.responseDomainText.id]: action.payload.responseDomainText}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainText'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainDatetimes = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIMES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainDatetimes)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIME':\n      var responseDomainDatetimes = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainDatetimes, ...{[action.payload.responseDomainDatetime.id]: action.payload.responseDomainDatetime}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainDatetime'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst categories = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CATEGORIES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.categories)}}\n    default:\n      return state\n  }\n}\n\nconst topics = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_TOPICS':\n      return {...state, ...serializeArrayToObject(action.payload.topics)}\n    default:\n      return state\n  }\n}\n\nconst statuses = (state = {}, action) => {\n\n  var key;\n\n  switch (action.type) {\n    case 'SAVING':\n      key = action.payload.type + ':' + action.payload.id\n      return {...state, ...{[key]: {saving: true}}}\n    case 'SAVED':\n      key = action.payload.type + ':' + action.payload.id\n      return {...state, ...{[key]: {saved: true}}}\n    case 'ERROR':\n      key = action.payload.type + ':' + action.payload.id\n      if(typeof action.payload.error === 'object' && action.payload.error !== null){\n        return {...state, ...{[key]: {error: true, errors: action.payload.error, errorMessage: ''}}}\n      }else{\n        return {...state, ...{[key]: {error: true, errorMessage: action.payload.error}}}\n      }\n    default:\n      return state\n  }\n}\n\nconst common = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'REDIRECT':\n      return {...state, ...{redirect: action.payload.to}}\n    case 'REDIRECT_CLEAR':\n      return {...state, ...{redirect: undefined}}\n    default:\n      return state\n  }\n}\n\n\nconst appReducer = combineReducers({\n    common,\n    auth,\n    datasets,\n    instruments,\n    instrumentStats,\n    cc_sequences,\n    cc_statements,\n    cc_conditions,\n    cc_loops,\n    cc_questions,\n    response_units,\n    questionItems,\n    questionGrids,\n    categories,\n    codeLists,\n    responseDomainNumerics,\n    responseDomainTexts,\n    responseDomainDatetimes,\n    datasetVariables,\n    variables,\n    statuses,\n    topics\n})\n\nexport default appReducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport reducers from \"./../reducers\";\nimport thunk from \"redux-thunk\"\n\nexport default createStore(reducers, applyMiddleware(thunk));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport Store from './components/Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}