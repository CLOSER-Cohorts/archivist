{"version":3,"sources":["routes.js","AuthRoute.js","actions/index.js","pages/Login.js","components/BreadcrumbBar.js","support/ObjectColour.js","components/Dashboard.js","components/ObjectStatusBar.js","components/FileField.js","components/AdminInstrumentForm.js","components/AdminDatasetForm.js","pages/AdminImport.js","pages/AdminImports.js","components/AdminImportMappingsTable.js","components/AdminImportMappingsForm.js","components/Loader.js","pages/AdminInstrumentImportMappings.js","pages/AdminDatasetImportMappings.js","pages/AdminInstruments.js","pages/AdminDatasets.js","pages/Instruments.js","pages/Datasets.js","pages/DatasetView.js","components/InstrumentHeading.js","pages/InstrumentView.js","pages/InstrumentMap.js","pages/InstrumentBuild.js","components/DeleteObjectButton.js","support/ObjectCheckForInitialValues.js","components/CcConditionForm.js","components/CcQuestionForm.js","components/CcStatementForm.js","components/CcSequenceForm.js","components/CcLoopForm.js","pages/InstrumentConstructBuild.js","components/CodeListForm.js","components/CreateNewBuildObjectButtons.js","pages/InstrumentBuildCodeLists.js","components/QuestionItemForm.js","pages/InstrumentBuildQuestionItems.js","components/QuestionGridForm.js","pages/InstrumentBuildQuestionGrids.js","components/ResponseDomainNumericForm.js","components/ResponseDomainTextForm.js","components/ResponseDomainDatetimeForm.js","pages/InstrumentBuildResponseDomains.js","pages/NoMatch.js","components/RedirectFromState.js","App.js","reducers/index.js","components/Store.js","serviceWorker.js","index.js"],"names":["login","datasets","include","all","admin","import","imports","instruments","importMappings","instrument","show","map","build","constructs","codeLists","new","questionItems","questionGrids","responseDomains","AuthRoute","props","isAuthUser","useSelector","state","auth","type","to","url","routes","api_host","process","api_headers","window","localStorage","getItem","axios","interceptors","response","use","error","status","Promise","reject","removeItem","location","Dataset","request","get","headers","dispatch","then","res","datasetsFetchSuccess","data","catch","err","fetchFailure","message","id","datasetFetchSuccess","AdminInstrument","values","formData","FormData","append","files","post","savingItem","savedItem","console","log","AdminDataset","AdminImportMapping","importsFetchSuccess","AdminImport","Instrument","instrumentsFetchSuccess","instrumentFetchSuccess","instrumentStatsFetchSuccess","instrumentId","updates","Categories","categoriesFetchSuccess","categories","payload","CodeLists","codeListsFetchSuccess","update","codeListId","put","codeListFetchSuccess","saveError","error_sentence","create","redirectTo","instrument_id","delete","objectDeleteSuccess","codeList","CcSequences","ccSequencesFetchSuccess","ccSequenceId","ccSequenceFetchSuccess","onSuccess","object","onDelete","sequences","sequence","CcStatements","ccStatementsFetchSuccess","ccStatementId","ccStatementFetchSuccess","statements","statement","CcLoops","ccLoopsFetchSuccess","ccLoopId","ccLoopFetchSuccess","loops","loop","ResponseUnits","responseUnitsFetchSuccess","responseUnits","CcConditions","ccConditionsFetchSuccess","ccConditionId","ccConditionFetchSuccess","conditions","condition","CcQuestions","ccQuestionsFetchSuccess","ccQuestionId","ccQuestionFetchSuccess","topic","set","topicId","variables","add","variableNames","remove","variableId","questions","question","QuestionItems","questionItemsFetchSuccess","questionItemId","questionItemFetchSuccess","questionItem","QuestionGrids","questionGridsFetchSuccess","questionGridId","questionGridFetchSuccess","questionGrid","ResponseDomainNumerics","responseDomainNumericsFetchSuccess","responseDomainNumericId","responseDomainNumericFetchSuccess","responseDomainType","responseDomainId","responseDomainNumerics","responseDomainNumeric","ResponseDomainTexts","responseDomainTextsFetchSuccess","responseDomainTextId","responseDomainTextFetchSuccess","responseDomainTexts","responseDomainText","ResponseDomainDatetimes","responseDomainDatetimesFetchSuccess","responseDomainDatetimeId","responseDomainDatetimeFetchSuccess","responseDomainDatetimes","responseDomainDatetime","Variables","variablesFetchSuccess","DatasetVariable","datasetId","datasetVariablesFetchSuccess","datasetVariableId","sources","datasetVariableFetchSuccess","source","other","class","x","y","variable","Topics","topicsFetchSuccess","topics","dataset","stats","objectType","authUserSuccess","authUserFailure","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","useFormField","initialValue","React","useState","value","setValue","onChange","useCallback","e","target","Login","classes","emailField","passwordField","useDispatch","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","onSubmit","preventDefault","email","password","authUser","TextField","required","fullWidth","label","name","autoComplete","autoFocus","Button","color","BreadcrumbBarItem","text","link","isEmpty","root","padding","BreadcrumbBar","useLocation","buildDatasetBreadcrumbs","buildAdminBreadcrumbs","buildInstrumentBreadcrumbs","crumbs","push","params","capturingRegex","found","pathname","match","RegExp","paramsFromPath","subtype","breadcrumbs","buildBreadcrumbs","Paper","Breadcrumbs","separator","fontSize","aria-label","breadcrumb","ObjectColour","Copyright","align","Date","getFullYear","nested","paddingLeft","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","fixedHeight","MainListItems","open","setOpen","ListItem","button","ListItemIcon","ListItemText","primary","onClick","style","Collapse","in","timeout","unmountOnExit","List","disablePadding","Dashboard","charSet","AppBar","clsx","Toolbar","IconButton","edge","noWrap","Drawer","src","alt","Divider","maxHeight","Grid","item","xs","children","Box","pt","ObjectStatus","statuses","key","ObjectStatusBar","isNil","saved","Alert","severity","AlertTitle","errorMessage","FileField","input","table","minWidth","boxShadow","formFields","size","field","AdminInstrumentForm","initialValues","validate","render","handleSubmit","mutators","pop","pristine","submitting","idx","disabled","AdminDatasetForm","useEffect","AdminImports","page","setPage","rowsPerPage","setRowsPerPage","rows","Object","Table","TableHead","TableRow","TableCell","TableBody","slice","row","file","created_at","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","length","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","SelectProps","inputProps","native","AdminImportMappingsTable","ButtonGroup","AdminImportMappingsForm","hint","Loader","m","shuffle","AdminInstrumentImportMappings","instrumentImportMappings","dataLoaded","setDataLoaded","AdminDatasetImportMappings","datasetImportMappings","AdminInstruments","prefix","study","AdminDatasets","Instruments","ccs","qvs","Datasets","dvs","dataset_id","DatasetView","datasetVariables","SourcesList","sourceOptions","filter","opt","difference","handleChange","reason","includes","newSources","oldSources","Autocomplete","multiple","options","getOptionLabel","option","filterSelectedOptions","renderInput","placeholder","getOptionSelected","var_type","InstrumentHeading","mode","slug","background","control","ObjectFinder","cc_sequences","cc_statements","cc_conditions","cc_questions","allQuestionItems","allQuestionGrids","toString","question_type","question_id","QuestionItemListItem","literal","rds","ResponseDomains","rd","ResponseDomainCodes","codes","code","StatementListItem","ConditionItem","aria-labelledby","child","SequenceItem","InstrumentView","undefined","find","element","top","Chip","saving","deleteIcon","VariableList","TopicList","textAlign","FormControl","formControl","InputLabel","htmlFor","Select","level","defaultValue","allVariables","variableOptions","newVariables","join","oldVariables","InstrumentMap","InstrumentBuild","instrumentStats","code_lists","response_domain_datetimes","response_domain_numerics","response_domain_texts","question_items","question_grids","instructions","cc_loops","StatCount","ListItemSecondaryAction","dense","DeleteObjectButton","action","confirm","ObjectCheckForInitialValues","initialValuesWithEmptyFields","keys","reduce","acc","Array","isArray","merge","CcConditionForm","ccCondition","path","newObject","node","errors","arrayMutators","reset","formControlProps","MenuItem","CcQuestionForm","ccQuestion","allResponseUnits","response_units","questionOptions","setQuestionOptions","error_key","previous","CcStatementForm","ccStatement","CcSequenceForm","ccSequence","CcLoopForm","ccLoop","start_val","loop_var","TreeNode","expanded","fchildren","trueAndFalse","conditionId","Tree","topSequence","onNodeSelect","treeData","setTreeData","selectedNode","setSelectedNode","searchString","setSearchString","searchFocusIndex","setSearchFocusIndex","searchFoundCount","setSearchFoundCount","getNodeKey","treeIndex","canHaveChildren","toggleExpand","toggleExpandedForAll","reorderConstructs","getFlatDataFromTree","ignoreCollapsed","parent","branch","indexOf","el","orderArray","generateButtons","buttons","addNodeUnderParent","parentKey","expandParent","newNode","stopPropagation","onRequestSearch","newValue","onCancelSearch","divider","startIcon","newTreeData","canNodeHaveChildren","canDrop","nextParent","prevPath","nextPath","canDrag","searchMethod","searchQuery","toLowerCase","searchFocusOffset","searchFinishCallback","matches","generateNodeProps","callback","changeNodeAtPath","updateNode","deleteCallback","removeNodeAtPath","deleteNode","side","right","ConstructForm","NewConstructQuestion","InstrumentConstructBuild","visible","multiline","FormField","CodeListForm","TableContainer","fields","index","freesolo","category_id","cursor","used_by","CreateNewBuildObjectButtons","objectTypes","history","useHistory","ObjectTypeLookup","InstrumentBuildCodeLists","selectedCodeList","CodeListItem","handleCodeListSelection","QuestionItemForm","InstrumentBuildQuestionItems","selectedQuestion","QuestionItem","handleQuestionSelection","QuestionGridForm","cl","cols","order","InstrumentBuildQuestionGrids","setquestionGridId","QuestionGrid","ResponseDomainNumericForm","responseDomain","ResponseDomainTextForm","ResponseDomainDatetimeForm","InstrumentBuildResponseDomains","selectedResponseDomain","ResponseDomainItem","handleResponseDomainSelection","responseDomainForm","NoMatch","RedirectFromState","redirect","common","createMuiTheme","warning","info","success","App","exact","serializeSearchesArrayToObject","array","obj","serializeArrayToObject","appReducer","combineReducers","setItem","jwt","instrumentSequences","instrumentStatements","instrumentConditions","instrumentLoops","instrumentQuestions","instrumentResponseUnits","responseUnit","revisedQuestionItems","objects","revisedQuestionGrids","revisedCodeLists","revisedResponseDomains","revisedVariables","revisedImportMappings","importMapping","createStore","reducers","applyMiddleware","thunk","Boolean","hostname","ReactDOM","store","Store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.abce9e61.chunk.js","sourcesContent":["import { include } from 'named-urls'\n\nexport default {\n    login : '/login',\n    datasets: include('/datasets', {\n      all: ''\n    }),\n    admin: include('/admin/', {\n      import: 'import',\n      imports: 'imports',\n      instruments: include('instruments/', {\n        all: '',\n        importMappings: ':instrumentId/imports'\n      }),\n      datasets: include('datasets/', {\n        all: '',\n        importMappings: ':datasetId/imports'\n      }),\n    }),\n    instruments: include('/instruments', {\n      all: '',\n      instrument: include(':instrument_id/', {\n        show: '',\n         map: include('map/', {\n            show: ''\n        }),\n        build: include('build/', {\n            show: '',\n            constructs: include('constructs/', {\n                show: ''\n            }),\n            codeLists: include('code_lists/', {\n              all: '',\n              show: ':codeListId',\n              new: 'new'\n            }),\n            questionItems: include('question_items/', {\n              all: '',\n              show: ':questionItemId',\n              new: 'new'\n            }),\n            questionGrids: include('question_grids/', {\n              all: '',\n              show: ':questionGridId',\n              new: 'new'\n            }),\n            responseDomains: include('response_domains/', {\n              all: '',\n              new: 'new',\n              show: ':responseDomainType/:responseDomainId',\n            })\n        })\n      })\n   })\n}\n","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { reverse as url } from 'named-urls'\n\nimport routes from './routes'\n\nconst AuthRoute = props => {\n\n  const isAuthUser = useSelector(state => state.auth.isAuthUser);\n\n  const { type } = props;\n\n  if (type === \"guest\" && isAuthUser) {\n    return <Redirect to={url(routes.instruments.all)} />\n  }else if (type === \"private\" && !isAuthUser){\n    return <Redirect to={url(routes.login)} />\n  };\n\n  return <Route {...props} />;\n};\n\nexport default AuthRoute;\n","import axios from \"axios\";\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst api_host = process.env.REACT_APP_API_HOST\n\nconst api_headers = () => ({\n          'Authorization': 'Bearer ' + window.localStorage.getItem('jwt'),\n          'Content-Type': 'application/json'\n        })\n\naxios.interceptors.response.use(function (response) {\n    return response;\n}, function (error) {\n    if (401 === error.response.status) {\n      window.localStorage.removeItem('jwt');\n      window.location = '/login'\n    } else {\n        return Promise.reject(error);\n    }\n});\n\n// Auth\nexport const authUser = (email, password) => {\n  const request = axios.post(api_host + '/users/sign_in.json', {\n      \"user\": {\n              \"email\": email,\n              \"password\": password\n      }\n    })\n  return (dispatch) => {\n      return request.then(res => {\n        dispatch(authUserSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(authUserFailure(err.message));\n      });\n  };\n};\n\nexport const Dataset = {\n  all: () => {\n    const request = axios.get(api_host + '/datasets.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(datasetsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  show: (id) => {\n    const request = axios.get(api_host + '/datasets/' + id + '.json?questions=true',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(datasetFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nexport const AdminInstrument = {\n  create: (values) => {\n    let formData = new FormData();\n\n    formData.append(\"files[]\", values.files[0]);\n    const request = axios.post(api_host + '/admin/import/instruments/', formData, {\n        headers: {...api_headers(), ...{'Content-Type': 'multipart/form-data'}}\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'AdminInstrument'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'AdminInstrument'));\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  },\n}\n\nexport const AdminDataset = {\n  create: (values) => {\n    let formData = new FormData();\n\n    formData.append(\"files[]\", values.files[0]);\n    const request = axios.post(api_host + '/admin/import/datasets/', formData, {\n        headers: {...api_headers(), ...{'Content-Type': 'multipart/form-data'}}\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'AdminDataset'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'AdminDataset'));\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  },\n}\n\nexport const AdminImportMapping = {\n  create: (type, id, values) => {\n    let formData = new FormData();\n\n    formData.append(\"files[]\", values.files[0]);\n    const request = axios.post(api_host + '/' + type + '/' + id + '/imports.json', formData, {\n        headers: {...api_headers(), ...{'Content-Type': 'multipart/form-data'}}\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'AdminImportMappings'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'AdminImportMappings'));\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  },\n  all: (type, id) => {\n    const request = axios.get(api_host + '/' + type + '/' + id + '/imports.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(importsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n}\n\nexport const AdminImport = {\n  all: () => {\n    const request = axios.get(api_host + '/imports.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(importsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n}\n\nexport const Instrument = {\n  import: (values) => {\n    const request = axios.post(api_host + '/admin/import/instruments/', { updates: values }, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          console.log('ok')\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  },\n  all: () => {\n    const request = axios.get(api_host + '/instruments.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  show: (id) => {\n    const request = axios.get(api_host + '/instruments/' + id + '.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  stats: (id) => {\n    const request = axios.get(api_host + '/instruments/' + id + '/stats.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(instrumentStatsFetchSuccess(id, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  reorderConstructs: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/reorder_ccs.json', { updates: values }, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          console.log('ok')\n        })\n        .catch(err => {\n          console.log('error')\n        });\n    };\n  }\n}\n\nexport const Categories = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/categories.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(categoriesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst categoriesFetchSuccess = (instrumentId, categories) => ({\n  type: 'LOAD_INSTRUMENT_CATEGORIES',\n  payload: {\n    instrumentId: instrumentId,\n    categories: categories\n  }\n});\n\nexport const CodeLists = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/code_lists.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(codeListsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, codeListId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/code_lists/' + codeListId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(codeListId, 'CodeList'));\n        return request.then(res => {\n          dispatch(savedItem(codeListId, 'CodeList'));\n          dispatch(codeListFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(codeListId, 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/code_lists.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CodeList'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CodeList'));\n          dispatch(codeListFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, codeListId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/code_lists/' + codeListId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'CodeList', codeListId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(savedItem(codeListId, 'CodeList'));\n          dispatch(saveError(codeListId, 'CodeList', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst codeListsFetchSuccess = (instrumentId, codeLists) => ({\n  type: 'LOAD_INSTRUMENT_CODE_LISTS',\n  payload: {\n    instrumentId: instrumentId,\n    codeLists: codeLists\n  }\n});\n\nconst codeListFetchSuccess = (instrumentId, codeList) => ({\n  type: 'LOAD_INSTRUMENT_CODE_LIST',\n  payload: {\n    instrumentId: instrumentId,\n    codeList: codeList\n  }\n});\n\nexport const CcSequences = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_sequences.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccSequencesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccSequenceId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_sequences/' + ccSequenceId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccSequenceId, 'CcSequence'));\n        return request.then(res => {\n          dispatch(savedItem(ccSequenceId, 'CcSequence'));\n          dispatch(ccSequenceFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccSequenceId, 'CcSequence', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_sequences.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcSequence'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcSequence'));\n          dispatch(ccSequenceFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcSequence', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccSequenceId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_sequences/' + ccSequenceId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccSequenceId, 'CcSequence'));\n        return request.then(res => {\n          dispatch(savedItem(ccSequenceId, 'CcSequence'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcSequence', ccSequenceId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(ccSequenceId, 'CcSequence', err.response.data));\n        });\n    };\n  },\n}\n\nconst ccSequencesFetchSuccess = (instrumentId, sequences) => ({\n  type: 'LOAD_INSTRUMENT_SEQUENCES',\n  payload: {\n    instrumentId: instrumentId,\n    sequences: sequences\n  }\n});\n\nconst ccSequenceFetchSuccess = (instrumentId, sequence) => ({\n  type: 'LOAD_INSTRUMENT_SEQUENCE',\n  payload: {\n    instrumentId: instrumentId,\n    sequence: sequence\n  }\n});\n\nexport const CcStatements = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_statements.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccStatementsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccStatementId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_statements/' + ccStatementId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccStatementId, 'CcStatement'));\n        return request.then(res => {\n          dispatch(savedItem(ccStatementId, 'CcStatement'));\n          dispatch(ccStatementFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccStatementId, 'CcStatement', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_statements.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcStatement'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcStatement'));\n          dispatch(ccStatementFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcStatement', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccStatementId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_statements/' + ccStatementId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccStatementId, 'CcStatement'));\n        return request.then(res => {\n          dispatch(savedItem(ccStatementId, 'CcStatement'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcStatement', ccStatementId));\n          onDelete()\n        })\n        .catch(err => {\n          dispatch(saveError(ccStatementId, 'CcStatement', err.response.data));\n        });\n    };\n  },\n}\n\nconst ccStatementsFetchSuccess = (instrumentId, statements) => ({\n  type: 'LOAD_INSTRUMENT_STATEMENTS',\n  payload: {\n    instrumentId: instrumentId,\n    statements: statements\n  }\n});\n\nconst ccStatementFetchSuccess = (instrumentId, statement) => ({\n  type: 'LOAD_INSTRUMENT_STATEMENT',\n  payload: {\n    instrumentId: instrumentId,\n    statement: statement\n  }\n});\n\nexport const CcLoops = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_loops.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccLoopsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccLoopId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_loops/' + ccLoopId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccLoopId, 'CcLoop'));\n        return request.then(res => {\n          dispatch(savedItem(ccLoopId, 'CcLoop'));\n          dispatch(ccLoopFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccLoopId, 'CcLoop', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_loops.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcLoop'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcLoop'));\n          dispatch(ccLoopFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcLoop', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, ccLoopId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_loops/' + ccLoopId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccLoopId, 'CcLoop'));\n        return request.then(res => {\n          dispatch(savedItem(ccLoopId, 'CcLoop'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcLoop', ccLoopId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(ccLoopId, 'CcLoop', err.response.data.error_sentence));\n        });\n    };\n  },\n}\n\nconst ccLoopsFetchSuccess = (instrumentId, loops) => ({\n  type: 'LOAD_INSTRUMENT_LOOPS',\n  payload: {\n    instrumentId: instrumentId,\n    loops: loops\n  }\n});\n\nconst ccLoopFetchSuccess = (instrumentId, loop) => ({\n  type: 'LOAD_INSTRUMENT_LOOP',\n  payload: {\n    instrumentId: instrumentId,\n    loop: loop\n  }\n});\n\nexport const ResponseUnits = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_units.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseUnitsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseUnitId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_units/' + responseUnitId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseUnitFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseUnitId, 'ResponseUnit', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_units.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseUnitFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseUnit', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseUnitId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_units/' + responseUnitId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseUnit', responseUnitId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(responseUnitId, 'ResponseUnit', err.response.data.error_sentence));\n        });\n    };\n  },\n}\n\nconst responseUnitsFetchSuccess = (instrumentId, responseUnits) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_UNITS',\n  payload: {\n    instrumentId: instrumentId,\n    responseUnits: responseUnits\n  }\n});\n\nconst responseUnitFetchSuccess = (instrumentId, responseUnit) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_UNITS',\n  payload: {\n    instrumentId: instrumentId,\n    responseUnit: responseUnit\n  }\n});\n\nexport const CcConditions = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_conditions.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccConditionsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccConditionId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_conditions/' + ccConditionId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccConditionId, 'CcCondition'));\n        return request.then(res => {\n          dispatch(savedItem(ccConditionId, 'CcCondition'));\n          dispatch(ccConditionFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccConditionId, 'CcCondition', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_conditions.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcCondition'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcCondition'));\n          dispatch(ccConditionFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcCondition', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccConditionId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_conditions/' + ccConditionId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccConditionId, 'CcCondition'));\n        return request.then(res => {\n          dispatch(savedItem(ccConditionId, 'CcCondition'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcCondition', ccConditionId));\n          onDelete()\n        })\n        .catch(err => {\n          dispatch(saveError(ccConditionId, 'CcCondition', err.response.data));\n        });\n    };\n  },\n}\n\nconst ccConditionsFetchSuccess = (instrumentId, conditions) => ({\n  type: 'LOAD_INSTRUMENT_CONDITIONS',\n  payload: {\n    instrumentId: instrumentId,\n    conditions: conditions\n  }\n});\n\nconst ccConditionFetchSuccess = (instrumentId, condition) => ({\n  type: 'LOAD_INSTRUMENT_CONDITION',\n  payload: {\n    instrumentId: instrumentId,\n    condition: condition\n  }\n});\n\nexport const CcQuestions = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/cc_questions.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(ccQuestionsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, ccQuestionId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n        return request.then(res => {\n          dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n          dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data));\n        });\n    };\n  },\n  create: (instrumentId, values, onSuccess=(object)=>{}) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'CcQuestion'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'CcQuestion'));\n          dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          onSuccess({id:res.data.id})\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'CcQuestion', err.response.data));\n        });\n    };\n  },\n  delete: (instrumentId, ccQuestionId, onDelete=()=>{}) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n        return request.then(res => {\n          dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n          dispatch(objectDeleteSuccess(instrumentId,'CcQuestion', ccQuestionId));\n          onDelete();\n        })\n        .catch(err => {\n          dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data));\n        });\n    };\n  },\n  topic: {\n    set: (instrumentId, ccQuestionId, topicId) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/set_topic.json',\n      {\n        \"topic_id\": topicId\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data.message));\n          });\n      };\n    }\n  },\n  variables: {\n    add: (instrumentId, ccQuestionId, variableNames) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/add_variables.json',\n      {\n        \"variable_names\": variableNames\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.response.data.message));\n          });\n      };\n    },\n    remove: (instrumentId, ccQuestionId, variableId) => {\n      const request = axios.post(api_host + '/instruments/' + instrumentId + '/cc_questions/' + ccQuestionId + '/remove_variable.json',\n      {\n        \"variable_id\": variableId\n      },\n      {\n          headers: api_headers()\n        })\n      return (dispatch) => {\n          dispatch(savingItem(ccQuestionId, 'CcQuestion'));\n          return request.then(res => {\n            dispatch(savedItem(ccQuestionId, 'CcQuestion'));\n            dispatch(ccQuestionFetchSuccess(instrumentId, res.data));\n          })\n          .catch(err => {\n            dispatch(saveError(ccQuestionId, 'CcQuestion', err.message));\n          });\n      };\n    }\n  }\n}\n\nconst savingItem = (id, type) => ({\n  type: 'SAVING',\n  payload: {\n    id: id,\n    type: type\n  }\n});\n\nconst savedItem = (id, type) => ({\n  type: 'SAVED',\n  payload: {\n    id: id,\n    type: type\n  }\n});\n\nconst ccQuestionsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTIONS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst ccQuestionFetchSuccess = (instrumentId, question) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION',\n  payload: {\n    instrumentId: instrumentId,\n    question: question\n  }\n});\n\nexport const QuestionItems = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/question_items.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionItemsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, questionItemId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/question_items/' + questionItemId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionItemId, 'QuestionItem'));\n        return request.then(res => {\n          dispatch(savedItem(questionItemId, 'QuestionItem'));\n          dispatch(questionItemFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(questionItemId, 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/question_items.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'QuestionItem'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'QuestionItem'));\n          dispatch(questionItemFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, questionItemId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/question_items/' + questionItemId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionItemId, 'QuestionItem'));\n        return request.then(res => {\n          dispatch(savedItem(questionItemId, 'QuestionItem'));\n          dispatch(objectDeleteSuccess(instrumentId,'QuestionItem', questionItemId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(questionItemId, 'QuestionItem', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst questionItemsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_ITEMS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst questionItemFetchSuccess = (instrumentId, questionItem) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_ITEM',\n  payload: {\n    instrumentId: instrumentId,\n    questionItem: questionItem\n  }\n});\n\nexport const QuestionGrids = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/question_grids.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(questionGridsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, questionGridId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/question_grids/' + questionGridId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionGridId, 'QuestionGrid'));\n        return request.then(res => {\n          dispatch(savedItem(questionGridId, 'QuestionGrid'));\n          dispatch(questionGridFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(questionGridId, 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/question_grids.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'QuestionGrid'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'QuestionGrid'));\n          dispatch(questionGridFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, questionGridId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/question_grids/' + questionGridId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(questionGridId, 'QuestionGrid'));\n        return request.then(res => {\n          dispatch(savedItem(questionGridId, 'QuestionGrid'));\n          dispatch(objectDeleteSuccess(instrumentId,'QuestionGrid', questionGridId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(questionGridId, 'QuestionGrid', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst questionGridsFetchSuccess = (instrumentId, questions) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_GRIDS',\n  payload: {\n    instrumentId: instrumentId,\n    questions: questions\n  }\n});\n\nconst questionGridFetchSuccess = (instrumentId, questionGrid) => ({\n  type: 'LOAD_INSTRUMENT_QUESTION_GRID',\n  payload: {\n    instrumentId: instrumentId,\n    questionGrid: questionGrid\n  }\n});\n\nexport const ResponseDomainNumerics = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_numerics.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainNumericsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainNumericId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_numerics/' + responseDomainNumericId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n          dispatch(responseDomainNumericFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainNumericId, 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_numerics.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'ResponseDomainNumeric'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'ResponseDomainNumeric'));\n          dispatch(responseDomainNumericFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainNumericId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_numerics/' + responseDomainNumericId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainNumericId, 'ResponseDomainNumeric'));\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainNumeric', responseDomainNumericId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainNumericId, 'ResponseDomainNumeric', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainNumericsFetchSuccess = (instrumentId, responseDomainNumerics) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERICS',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainNumerics: responseDomainNumerics\n  }\n});\n\nconst responseDomainNumericFetchSuccess = (instrumentId, responseDomainNumeric) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERIC',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainNumeric: responseDomainNumeric\n  }\n});\n\nexport const ResponseDomainTexts = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_texts.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainTextsFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainTextId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_texts/' + responseDomainTextId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainTextId, 'ResponseDomainText'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainTextId, 'ResponseDomainText'));\n          dispatch(responseDomainTextFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainTextId, 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_texts.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'ResponseDomainText'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'ResponseDomainText'));\n          dispatch(responseDomainTextFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainTextId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_texts/' + responseDomainTextId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainTextId, 'ResponseDomainText'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainTextId, 'ResponseDomainText'));\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainText', responseDomainTextId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainTextId, 'ResponseDomainText', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainTextsFetchSuccess = (instrumentId, responseDomainTexts) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXTS',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainTexts: responseDomainTexts\n  }\n});\n\nconst responseDomainTextFetchSuccess = (instrumentId, responseDomainText) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXT',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainText: responseDomainText\n  }\n});\n\nexport const ResponseDomainDatetimes = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(responseDomainDatetimesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  update: (instrumentId, responseDomainDatetimeId, values) => {\n    const request = axios.put(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes/' + responseDomainDatetimeId + '.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n          dispatch(responseDomainDatetimeFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainDatetimeId, 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  },\n  create: (instrumentId, values) => {\n    const request = axios.post(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes.json', values, {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem('new', 'ResponseDomainDatetime'));\n        return request.then(res => {\n          dispatch(savedItem('new', 'ResponseDomainDatetime'));\n          dispatch(responseDomainDatetimeFetchSuccess(instrumentId, res.data));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: res.data.type, responseDomainId: res.data.id })));\n        })\n        .catch(err => {\n          dispatch(saveError('new', 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  },\n  delete: (instrumentId, responseDomainDatetimeId) => {\n    const request = axios.delete(api_host + '/instruments/' + instrumentId + '/response_domain_datetimes/' + responseDomainDatetimeId + '.json', {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n        return request.then(res => {\n          dispatch(savedItem(responseDomainDatetimeId, 'ResponseDomainDatetime'));\n          dispatch(objectDeleteSuccess(instrumentId,'ResponseDomainDatetime', responseDomainDatetimeId));\n          dispatch(redirectTo(url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })));\n        })\n        .catch(err => {\n          dispatch(saveError(responseDomainDatetimeId, 'ResponseDomainDatetime', err.response.data.error_sentence));\n        });\n    };\n  }\n}\n\nconst responseDomainDatetimesFetchSuccess = (instrumentId, responseDomainDatetimes) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIMES',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainDatetimes: responseDomainDatetimes\n  }\n});\n\nconst responseDomainDatetimeFetchSuccess = (instrumentId, responseDomainDatetime) => ({\n  type: 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIME',\n  payload: {\n    instrumentId: instrumentId,\n    responseDomainDatetime: responseDomainDatetime\n  }\n});\n\nexport const Variables = {\n  all: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(variablesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  add: (instrumentId) => {\n    const request = axios.get(api_host + '/instruments/' + instrumentId + '/add_variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(variablesFetchSuccess(instrumentId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst variablesFetchSuccess = (instrumentId, variables) => ({\n  type: 'LOAD_INSTRUMENT_VARIABLES',\n  payload: {\n    instrumentId: instrumentId,\n    variables: variables\n  }\n});\n\nexport const DatasetVariable = {\n  all: (datasetId) => {\n    const request = axios.get(api_host + '/datasets/' + datasetId + '/variables.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(datasetVariablesFetchSuccess(datasetId, res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  },\n  add_source: (datasetId, datasetVariableId, sources) => {\n    const request = axios.post(api_host + '/datasets/' + datasetId + '/variables/' + datasetVariableId + '/add_sources.json',\n    {\n      sources: {\n        \"id\": sources,\n        \"x\": null,\n        \"y\": null\n      }\n    },\n    {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(datasetVariableId, 'DatasetVariable'));\n        return request.then(res => {\n          dispatch(savedItem(datasetVariableId, 'DatasetVariable'));\n          dispatch(datasetVariableFetchSuccess(datasetId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(datasetVariableId, 'DatasetVariable', err.response.data.message));\n        });\n    };\n  },\n  remove_source: (datasetId, datasetVariableId, source) => {\n    const request = axios.post(api_host + '/datasets/' + datasetId + '/variables/' + datasetVariableId + '/remove_source.json',\n    {\n      other: {\n        id: source.id,\n        class: source.class,\n        x: source.x,\n        y: source.y\n      }\n    },\n    {\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        dispatch(savingItem(datasetVariableId, 'DatasetVariable'));\n        return request.then(res => {\n          dispatch(savedItem(datasetVariableId, 'DatasetVariable'));\n          dispatch(datasetVariableFetchSuccess(datasetId, res.data));\n        })\n        .catch(err => {\n          dispatch(saveError(datasetVariableId, 'DatasetVariable', err.message));\n        });\n    };\n  }\n}\n\nconst datasetVariablesFetchSuccess = (datasetId, variables) => ({\n  type: 'LOAD_DATASET_VARIABLES',\n  payload: {\n    datasetId: datasetId,\n    variables: variables\n  }\n});\n\nconst datasetVariableFetchSuccess = (datasetId, variable) => ({\n  type: 'LOAD_DATASET_VARIABLE',\n  payload: {\n    datasetId: datasetId,\n    variable: variable\n  }\n});\n\nexport const Topics = {\n  all: () => {\n    const request = axios.get(api_host + '/topics/flattened_nest.json',{\n        headers: api_headers()\n      })\n    return (dispatch) => {\n        return request.then(res => {\n          dispatch(topicsFetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchFailure(err.message));\n        });\n    };\n  }\n}\n\nconst topicsFetchSuccess = (topics) => ({\n  type: 'LOAD_TOPICS',\n  payload: {\n    topics: topics\n  }\n});\n\nconst datasetsFetchSuccess = datasets => ({\n  type: 'LOAD_DATASETS',\n  payload: {\n    datasets: datasets\n  }\n});\n\nconst datasetFetchSuccess = datasets => ({\n  type: 'LOAD_DATASET',\n  payload: {\n    dataset: datasets\n  }\n});\n\nconst importsFetchSuccess = imports => ({\n  type: 'LOAD_ADMIN_IMPORTS',\n  payload: {\n    imports: imports\n  }\n});\n\nconst instrumentsFetchSuccess = instruments => ({\n  type: 'LOAD_INSTRUMENTS',\n  payload: {\n    instruments: instruments\n  }\n});\n\nconst instrumentFetchSuccess = instruments => ({\n  type: 'LOAD_INSTRUMENT',\n  payload: {\n    instrument: instruments\n  }\n});\n\nconst instrumentStatsFetchSuccess = (instrumentId, stats) => ({\n  type: 'LOAD_INSTRUMENT_STATS',\n  payload: {\n    instrumentId: instrumentId,\n    stats: stats\n  }\n});\n\nconst objectDeleteSuccess = (instrumentId, objectType, id) => ({\n  type: 'DELETE_INSTRUMENT_OBJECT_TYPE',\n  payload: {\n    instrumentId: instrumentId,\n    id: id,\n    objectType: objectType\n  }\n});\n\nconst fetchFailure = error => ({\n  type: 'FETCH_FAILURE',\n  payload: {\n    error\n  }\n});\n\nconst saveError = (id, type, error) => ({\n  type: 'ERROR',\n  payload: {\n    id: id,\n    type: type,\n    error: error\n  }\n});\n\nconst authUserSuccess = auth => ({\n  type: 'LOGIN',\n  payload: {\n    ...auth\n  }\n});\n\nconst authUserFailure = error => ({\n  type: 'LOGIN_FAILURE',\n  payload: {\n    error\n  }\n});\n\nconst redirectTo = (url) => ({\n  type: 'REDIRECT',\n  payload: {\n    to: url\n  }\n})\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { authUser } from '../actions'\nimport { useDispatch } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst useFormField = (initialValue: string = \"\") => {\n  const [value, setValue] = React.useState(initialValue);\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value),\n    []\n  );\n  return { value, onChange };\n};\n\nexport default function Login() {\n  const classes = useStyles();\n\n  const emailField = useFormField();\n  const passwordField = useFormField();\n\n  const dispatch = useDispatch()\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    dispatch(authUser(emailField.value, passwordField.value));\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            {...emailField}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            {...passwordField}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { isEmpty, get } from 'lodash'\nimport routes from '../routes'\nimport { reverse as url } from 'named-urls'\nimport { useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst BreadcrumbBarItem = (props) => {\n  const {text, link} = props\n\n  if(isEmpty(link)){\n    return (\n      <Typography color=\"textPrimary\">{text}</Typography>\n    )\n  }else{\n    return (\n      <Link color=\"inherit\" to={link}>\n        {text}\n      </Link>\n    )\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    'margin-bottom': '10px',\n    padding: '15px'\n  }\n}));\n\nconst BreadcrumbBar = (props) => {\n  const {instrumentId} = props\n\n  const location = useLocation();\n\n  const buildBreadcrumbs = () => {\n    var found = location.pathname.match(new RegExp(`^\\\\/(?<topLevel>instruments|datasets|admin)`));\n    var topLevel = get(get(found, 'groups',{}),'topLevel','instruments')\n    switch (topLevel) {\n      case 'datasets':\n        return buildDatasetBreadcrumbs()\n        break\n      case 'admin':\n        return buildAdminBreadcrumbs()\n        break\n      default:\n        return buildInstrumentBreadcrumbs()\n        break\n    }\n  }\n\n  const buildDatasetBreadcrumbs = () => {\n    var crumbs = [{text: 'Datasets', link: url(routes.datasets.all)}]\n    return crumbs\n  }\n\n  const buildAdminBreadcrumbs = () => {\n    var crumbs = [{text: 'Admin', link: url(routes.admin.instruments)}]\n    return crumbs\n  }\n\n  const buildInstrumentBreadcrumbs = () => {\n    const paramsFromPath = () => {\n      const capturingRegex = `/instruments\\\\/${instrumentId}\\\\/(?<type>build|map)\\/?(?<subtype>question_grids|question_items|response_domains|code_lists|constructs)?\\/?`;\n      const found = location.pathname.match(new RegExp(capturingRegex));\n      return get(found, 'groups',{})\n    }\n\n    var crumbs = [{text: 'Instruments', link: url(routes.instruments.all)}]\n\n    if(instrumentId){\n      crumbs.push(\n        {\n          text: instrumentId,\n          link: url(routes.instruments.instrument.show, { instrument_id: instrumentId })\n        }\n      )\n      const params = paramsFromPath();\n      if(params){\n        switch (params.type) {\n          case 'map':\n            crumbs.push(\n                {\n                  text: 'Map',\n                  link: url(routes.instruments.instrument.map.show, { instrument_id: instrumentId })\n                }\n              )\n            break\n          case 'build':\n            crumbs.push(\n                {\n                  text: 'Build',\n                  link: url(routes.instruments.instrument.build.show, { instrument_id: instrumentId })\n                }\n              )\n            if(params.subtype){\n\n              if(params.subtype === 'question_items'){\n                  crumbs.push(\n                      {\n                        text: 'Question Items',\n                        link: url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'question_grids'){\n                  crumbs.push(\n                      {\n                        text: 'Question Grids',\n                        link: url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'code_lists'){\n                  crumbs.push(\n                      {\n                        text: 'CodeLists',\n                        link: url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'response_domains'){\n                  crumbs.push(\n                      {\n                        text: 'Response Domains',\n                        link: url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })\n                      }\n                    )\n              }else if(params.subtype === 'constructs'){\n                  crumbs.push(\n                      {\n                        text: 'Constructs',\n                        link: url(routes.instruments.instrument.build.constructs.show, { instrument_id: instrumentId })\n                      }\n                    )\n              }\n\n            }\n        }\n      }\n    }\n    return crumbs\n  }\n\n  const breadcrumbs = buildBreadcrumbs()\n\n  const classes = useStyles()\n\n  return (\n      <Paper className={classes.root}>\n        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n          {breadcrumbs.map((breadcrumb) => {\n            return <BreadcrumbBarItem text={breadcrumb.text} link={breadcrumb.link} />\n          })}\n        </Breadcrumbs>\n      </Paper>\n  )\n}\n\nexport default BreadcrumbBar\n","export const ObjectColour = (type) => {\n   switch (type){\n      case 'statement':\n         return '652d90' // Purple;\n      case 'loop':\n         return '37b34a' // Green;\n      case 'question':\n         return '00adee' // Pale Blue;\n      case 'sequence':\n         return 'faaf40' // Orange;\n      case 'condition':\n         return 'f1003a' // Red;\n      default:\n         return 'd3d3d3' // Light Grey\n   }\n}\n\n//652d90 Purple\n// eb008b Pink\n// faaf40 Orange\n// f1003a Red\n// 37b34a Green\n// 00adee Pale Blue\n// 2e008b Dark Purple\n// 1f801e Dark Green\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport LabelIcon from '@material-ui/icons/Label';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport Helmet from \"react-helmet\";\nimport { useDispatch } from 'react-redux'\nimport BreadcrumbBar from './BreadcrumbBar'\nimport { ObjectColour } from '../support/ObjectColour'\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\n        Archivist\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst MainListItems = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n  <div>\n    <ListItem button>\n        <ListItemIcon>\n          <Link to={url(routes.instruments.all)}>\n            <QuestionAnswerIcon />\n          </Link>\n        </ListItemIcon>\n      <Link to={url(routes.instruments.all)}>\n        <ListItemText primary=\"Instruments\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <StorageIcon />\n      </ListItemIcon>\n      <Link to={url(routes.datasets.all)}>\n        <ListItemText primary=\"Datasets\" />\n      </Link>\n    </ListItem>\n     <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <SupervisedUserCircleIcon style={{ color: '37b34a' }}/>\n        </ListItemIcon>\n        <ListItemText primary=\"Admin\" />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem button className={classes.nested}>\n            <Link to={url(routes.admin.instruments.all)}>\n              <ListItemText primary=\"Instruments\" />\n            </Link>\n          </ListItem>\n          <ListItem button className={classes.nested}>\n            <Link to={url(routes.admin.datasets.all)}>\n              <ListItemText primary=\"Datasets\" />\n            </Link>\n          </ListItem>\n          <ListItem button className={classes.nested}>\n            <Link to={url(routes.admin.import)}>\n              <ListItemText primary=\"Import\" />\n            </Link>\n          </ListItem>\n          <ListItem button className={classes.nested}>\n            <Link to={url(routes.admin.imports)}>\n              <ListItemText primary=\"DDI Imports\" />\n            </Link>\n          </ListItem>\n        </List>\n      </Collapse>\n  </div>\n  )\n}\n\nexport const Dashboard = (props)  => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const dispatch = useDispatch();\n  const { instrumentId } = props;\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Archivist</title>\n      </Helmet>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            {props.title}\n          </Typography>\n          <IconButton color=\"inherit\">\n            <ExitToAppIcon onClick={()=>{ dispatch({type:'LOGOUT'}) }}/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <img src=\"/logo.svg\" alt=\"BigCo Inc. logo\" style={{width: \"51%\"}}/>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <MainListItems />\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth={false} maxHeight={false} className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <BreadcrumbBar instrumentId={instrumentId} />\n              <Paper className={classes.paper}>\n                {props.children}\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { isEmpty, isNil, get } from 'lodash'\n\nexport const ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nexport const ObjectStatusBar = (props) => {\n  const {id, type} = props\n  const status = ObjectStatus(id, type)\n\n  if(!isEmpty(status) && !isNil(status.error)){\n    return (\n      <div>\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          {status.errorMessage}\n        </Alert>\n      </div>\n    )\n  }else if(status && status.saved){\n    return (\n      <div>\n        <Alert severity=\"success\">\n          <AlertTitle>{ (id === 'new') ? 'Created' : 'Saved' }</AlertTitle>\n        </Alert>\n      </div>\n    )\n  }else{\n    return ''\n  }\n}\n","import React from 'react';\nimport { Field } from \"react-final-form\";\n\nexport const FileField = ({ name, ...props }) => (\n  <Field name={name}>\n    {({ input: { value, onChange, ...input } }) => (\n      <input\n        {...input}\n        type=\"file\"\n        onChange={({ target }) => onChange(target.files)} // instead of the default target.value\n        {...props}\n      />\n    )}\n  </Field>\n);\n","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux'\nimport { AdminInstrument } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { FileField } from '../components/FileField'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('statement')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <FileField name=\"files\" />\n    ),\n  }\n];\n\nexport const AdminInstrumentForm = (props) => {\n  const {} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n\n  const onSubmit = (values) => {\n      dispatch(AdminInstrument.create(values))\n  }\n\n  const status = ObjectStatus('new', 'AdminInstrument')\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <h2>Upload DDI Instrument Files</h2>\n      <ObjectStatusBar type={'AdminInstrument'} id={'new'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={{files: []}}\n        validate={(values) => validate(values, status)}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  Only DDI-L 3.2 Instrument files are accepted.\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Import Instrument\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux'\nimport { AdminDataset } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { FileField } from '../components/FileField'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('statement')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <FileField name=\"files\" />\n    ),\n  }\n];\n\nexport const AdminDatasetForm = (props) => {\n  const {} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n\n  const onSubmit = (values) => {\n      dispatch(AdminDataset.create(values))\n  }\n\n  const status = ObjectStatus('new', 'AdminDataset')\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <h2>Upload DDI Dataset Files</h2>\n      <ObjectStatusBar type={'AdminDataset'} id={'new'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={{files: []}}\n        validate={(values) => validate(values, status)}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  Only DDI-L 3.2 Dataset files are accepted.\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Import Dataset\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dashboard } from '../components/Dashboard'\nimport { AdminInstrumentForm } from '../components/AdminInstrumentForm'\nimport { AdminDatasetForm } from '../components/AdminDatasetForm'\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst AdminImport = () => {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Import'}>\n        <AdminInstrumentForm />\n        <AdminDatasetForm />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminImport;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AdminImport } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst AdminImports = () => {\n\n  const dispatch = useDispatch()\n  const imports = useSelector(state => state.imports);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(imports);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n    dispatch(AdminImport.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'DDI Imports'}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>File</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>State</TableCell>\n              <TableCell>Created At</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.file}</TableCell>\n                <TableCell>{row.type}</TableCell>\n                <TableCell>{row.state}</TableCell>\n                <TableCell>{row.created_at}</TableCell>\n                <TableCell>\n                  <Button variant=\"outlined\">\n                    View\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminImports;\n","import React from 'react';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nexport const AdminImportMappingsTable = ({values}) => {\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = values;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>File</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>State</TableCell>\n              <TableCell>Created At</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.file}</TableCell>\n                <TableCell>{row.type}</TableCell>\n                <TableCell>{row.state}</TableCell>\n                <TableCell>{row.created_at}</TableCell>\n                <TableCell>\n                  <ButtonGroup variant=\"outlined\">\n                    <Button>\n                      View Log\n                    </Button>\n                  </ButtonGroup>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n  );\n}\n","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux'\nimport { AdminDataset } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { FileField } from '../components/FileField'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('statement')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <FileField name=\"files\" />\n    ),\n  }\n];\n\nexport const AdminImportMappingsForm = ({type, hint, onSubmit=()=>{}}) => {\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus('new', 'AdminImportMapping')\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <h2>Import Mappings</h2>\n      <ObjectStatusBar type={'AdminImportMapping'} id={'new'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={{files: []}}\n        validate={(values) => validate(values, status)}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  {hint}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Import {type}\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport { Box } from '@material-ui/core'\nimport { shuffle } from \"lodash\";\nimport { ObjectColour } from '../support/ObjectColour'\n\nexport const Loader = () => {\n  return (\n    <Box style={{ height: 200, 'margin-top': 50 }} m=\"auto\"><BounceLoader color={`#${ObjectColour(shuffle(['sequence', 'condition', 'question', 'statement','loop'])[0])}`}/></Box>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dashboard } from '../components/Dashboard'\nimport { AdminImportMappingsTable } from '../components/AdminImportMappingsTable'\nimport { AdminImportMappingsForm } from '../components/AdminImportMappingsForm'\nimport { Loader } from '../components/Loader'\nimport { AdminImportMapping } from '../actions'\nimport { get } from 'lodash';\n\nconst AdminInstrumentImportMappings = (props) => {\n  const dispatch = useDispatch()\n  const type = \"Instrument\"\n  const hint = \"You can import multiple Q-V and T-Q mapping files. Only TXT files are accepted.\"\n  const instrumentId = get(props, \"match.params.instrumentId\", \"\")\n\n  const onSubmit = (values) => {\n      dispatch(AdminImportMapping.create('instruments', instrumentId, values))\n  }\n  const values = Object.values(useSelector(state => state.instrumentImportMappings));\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n  useEffect(() => {\n    Promise.all([\n      dispatch(AdminImportMapping.all('instruments',instrumentId)),\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Instruments Import Mappings'}>\n        {!dataLoaded\n        ? <Loader />\n        : (\n          <>\n            <AdminImportMappingsForm type={type} hint={hint} onSubmit={onSubmit} />\n            <AdminImportMappingsTable values={values} />\n          </>\n        )}\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminInstrumentImportMappings;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dashboard } from '../components/Dashboard'\nimport { AdminImportMappingsTable } from '../components/AdminImportMappingsTable'\nimport { AdminImportMappingsForm } from '../components/AdminImportMappingsForm'\nimport { Loader } from '../components/Loader'\nimport { AdminImportMapping } from '../actions'\nimport { get } from 'lodash';\n\nconst AdminDatasetImportMappings = (props) => {\n  const dispatch = useDispatch()\n  const type = \"Dataset\"\n  const hint = \"You can import multiple T-V and DV mapping files. Only TXT files are accepted.\"\n  const datasetId = get(props, \"match.params.datasetId\", \"\")\n\n  const onSubmit = (values) => {\n      dispatch(AdminImportMapping.create('datasets', datasetId, values))\n  }\n  const values = Object.values(useSelector(state => state.datasetImportMappings));\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n  useEffect(() => {\n    Promise.all([\n      dispatch(AdminImportMapping.all('datasets',datasetId)),\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Datasets Import Mappings'}>\n        {!dataLoaded\n        ? <Loader />\n        : (\n          <>\n            <AdminImportMappingsForm type={type} hint={hint} onSubmit={onSubmit} />\n            <AdminImportMappingsTable values={values} />\n          </>\n        )}\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminDatasetImportMappings;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst AdminInstruments = () => {\n\n  const dispatch = useDispatch()\n  const instruments = useSelector(state => state.instruments);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(instruments);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n     dispatch(Instrument.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Admin Instruments'}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Prefix</TableCell>\n              <TableCell>Study</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.prefix}</TableCell>\n                <TableCell>{row.study}</TableCell>\n                <TableCell>\n                  <ButtonGroup variant=\"outlined\">\n                    <Button>\n                      Edit\n                    </Button>\n                    <Button>\n                      Copy\n                    </Button>\n                    <Button>\n                      <Link to={url(routes.admin.instruments.importMappings, { instrumentId: row.id })}>\n                        Import Mappings\n                      </Link>\n                    </Button>\n                    <Button>\n                      QV\n                    </Button>\n                    <Button>\n                      Topics\n                    </Button>\n                    <Button>\n                      <Link to={url(routes.admin.instruments.importMappings, { instrumentId: row.id })}>\n                        View Imports\n                      </Link>\n                    </Button>\n                    <Button>\n                      Clear Cache\n                    </Button>\n                    <Button>\n                      Delete\n                    </Button>\n                  </ButtonGroup>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminInstruments;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dataset } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst AdminDatasets = () => {\n\n  const dispatch = useDispatch()\n  const datasets = useSelector(state => state.datasets);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(datasets);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n     dispatch(Dataset.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Admin Datasets'}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Study</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.study}</TableCell>\n                <TableCell>\n                <ButtonGroup variant=\"outlined\">\n                  <Button>\n                    Edit\n                  </Button>\n                  <Button>\n                    <Link to={url(routes.admin.datasets.importMappings, { datasetId: row.id })}>\n                      Import Mappings\n                    </Link>\n                  </Button>\n                  <Button>\n                    DV\n                  </Button>\n                  <Button>\n                    Topics\n                  </Button>\n                  <Button>\n                    <Link to={url(routes.admin.datasets.importMappings, { datasetId: row.id })}>\n                      View Imports\n                    </Link>\n                  </Button>\n                  <Button>\n                    Delete\n                  </Button>\n                 </ButtonGroup>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default AdminDatasets;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst Instruments = () => {\n\n  const dispatch = useDispatch()\n  const instruments = useSelector(state => state.instruments);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(instruments);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n     dispatch(Instrument.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Instruments'}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Prefix</TableCell>\n              <TableCell>Control Constructs</TableCell>\n              <TableCell>Q-V Mappings</TableCell>\n              <TableCell>Study</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.prefix}</TableCell>\n                <TableCell>{row.ccs}</TableCell>\n                <TableCell>{row.qvs}</TableCell>\n                <TableCell>{row.study}</TableCell>\n                <TableCell>\n                  <Button variant=\"outlined\">\n                    <Link to={url(routes.instruments.instrument.show, { instrument_id: row.prefix })}>View</Link>\n                  </Button>\n                  <Button variant=\"outlined\">\n                    <Link to={url(routes.instruments.instrument.build.show, { instrument_id: row.prefix })}>Build</Link>\n                  </Button>\n                  <Button variant=\"outlined\">\n                    <Link to={url(routes.instruments.instrument.map.show, { instrument_id: row.prefix })}>Map</Link>\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default Instruments;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dataset } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { Loader } from '../components/Loader'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst Datasets = () => {\n\n  const dispatch = useDispatch()\n  const datasets = useSelector(state => state.datasets);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(datasets);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(Dataset.all())\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Datasets'}>\n      {!dataLoaded\n        ? <Loader />\n        : (\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ID</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Variables</TableCell>\n                <TableCell>Q-V Mappings</TableCell>\n                <TableCell>DV Mappings</TableCell>\n                <TableCell>Study</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell>{row.id}</TableCell>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>{row.variables}</TableCell>\n                  <TableCell>{row.qvs}</TableCell>\n                  <TableCell>{row.dvs}</TableCell>\n                  <TableCell>{row.study}</TableCell>\n                  <TableCell>\n                    <Button variant=\"outlined\">\n                      <Link to={url('/datasets/:dataset_id', { dataset_id: row.id })}>View</Link>\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n           <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true,\n                  }}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        )}\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default Datasets;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Dataset, DatasetVariable } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { Loader } from '../components/Loader'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { get, isEmpty } from 'lodash'\n\nconst DatasetView = (props) => {\n\n  const dispatch = useDispatch()\n  const datasetId = get(props, \"match.params.dataset_id\", \"\")\n\n  const dataset = useSelector(state => get(state.datasets, datasetId));\n  const variables = useSelector(state => get(state.datasetVariables, datasetId,{}));\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\n\n  const rows: RowsProp = Object.values(variables);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(Dataset.show(datasetId)),\n      dispatch(DatasetVariable.all(datasetId))\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const SourcesList = (props) => {\n    const { sources, datasetId, variable } = props\n    let { sourceOptions } = props\n    sourceOptions = sourceOptions.filter(opt => get(opt.topic, 'id') == get(variable.topic, 'id'))\n    const variableId = variable.id\n    const dispatch = useDispatch()\n\n    const handleAddSource = (newSources) => {\n      dispatch(DatasetVariable.add_source(datasetId, variableId, newSources));\n    }\n\n    const handleRemoveSource = (oldSources) => {\n      oldSources.map((source)=>{\n        dispatch(DatasetVariable.remove_source(datasetId, variableId, source));\n      })\n    }\n\n    var difference = []\n\n    const handleChange = (event, value, reason) => {\n      switch (reason) {\n        case 'select-option':\n          difference = value.filter(x => !sources.includes(x));\n          if(!isEmpty(difference)){\n            return handleAddSource(difference.map((source) => { return source.label }))\n          };\n          break;\n        case 'remove-option':\n          difference = sources.filter(x => !value.includes(x));\n          if(!isEmpty(difference)){\n            return handleRemoveSource(difference)\n          };\n          break;\n        default:\n          return null;\n      }\n    }\n\n    if(isEmpty(sources)){\n      return (\n        <div>\n           <Autocomplete\n            multiple\n            id=\"tags-outlined\"\n            options={Object.values(sourceOptions)}\n            getOptionLabel={(option) => option.label}\n            onChange={handleChange}\n            value={[]}\n            filterSelectedOptions\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"outlined\"\n                label=\"Sources\"\n                placeholder=\"Add source\"\n              />\n            )}\n          />\n        </div>\n      )\n    }else{\n      return (\n        <div>\n           <Autocomplete\n            multiple\n            id=\"tags-outlined\"\n            options={Object.values(sourceOptions)}\n            getOptionLabel={(option) => option.label}\n            onChange={handleChange}\n            value={sources}\n            getOptionSelected= {(option, value) => (\n              option.id === value.id\n            )}\n            filterSelectedOptions\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"outlined\"\n                label=\"Sources\"\n                placeholder=\"Add source\"\n              />\n            )}\n          />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Datasets'}>\n      {!dataLoaded\n        ? <Loader />\n        : (\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>ID</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Label</TableCell>\n                <TableCell>Type</TableCell>\n                <TableCell>Used by</TableCell>\n                <TableCell>Sources</TableCell>\n                <TableCell>Topic</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell>{row.id}</TableCell>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>{row.label}</TableCell>\n                  <TableCell>{row.var_type}</TableCell>\n                  <TableCell></TableCell>\n                  <TableCell><SourcesList sources={row.sources} sourceOptions={get(dataset,'questions',[])} datasetId={datasetId} variable={row} /></TableCell>\n                  <TableCell>{get(row.topic, 'name')}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n           <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[20, 50, 100, { label: 'All', value: -1 }]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true,\n                  }}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        )}\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default DatasetView;\n","import React from 'react';\nimport { get } from \"lodash\";\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport Button from '@material-ui/core/Button';\n\nexport const InstrumentHeading = ({instrument, mode='view'}) => {\n  return (\n    <h1>\n    {get(instrument, 'label')}\n      { instrument && (\n        <>\n        { mode !== 'view' && (\n          <Button variant=\"outlined\">\n            <Link to={url(routes.instruments.instrument.show, { instrument_id: instrument.slug })}>View</Link>\n          </Button>\n        )}\n        { mode !== 'build' && (\n          <Button variant=\"outlined\">\n            <Link to={url(routes.instruments.instrument.build.show, { instrument_id: instrument.slug })}>Build</Link>\n          </Button>\n        )}\n        { mode !== 'map' && (\n          <Button variant=\"outlined\">\n            <Link to={url(routes.instruments.instrument.map.show, { instrument_id: instrument.slug })}>Map</Link>\n          </Button>\n        )}\n        </>\n      )}\n    </h1>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, Variables, Topics } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { InstrumentHeading } from '../components/InstrumentHeading'\nimport { get, isEmpty, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { Box } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n  }\n\n  return item\n\n}\n\nconst QuestionItemListItem = (props) => {\n  const {type, id, instrumentId} = props\n  const item = ObjectFinder(instrumentId, type, id)\n  const classes = useStyles();\n  console.log(item)\n  return (\n    <div>\n      {item.question.literal}\n      {(item.question.rds) && (\n        <ResponseDomains rds={item.question.rds} />\n      )}\n    </div>\n  )\n}\n\nconst ResponseDomains = ({ rds }) => {\n\n  return rds.map((rd) => {\n    console.log(rd)\n    switch (rd.type) {\n      case 'ResponseDomainCode':\n        return(<ul><ResponseDomainCodes codes={rd.codes} /></ul>)\n      case 'ResponseDomainText':\n        return(<ul><li>{rd.label}</li></ul>)\n      case 'ResponseDomainNumeric':\n        return(<ul><li>{rd.label} {rd.params} {rd.subtype}</li></ul>)\n      case 'ResponseDomainDatetime':\n        return(<ul><li>{rd.label} {rd.params} {rd.subtype}</li></ul>)\n      default:\n        console.log(rd)\n        return '';\n    }\n  })\n}\n\nconst ResponseDomainCodes = ({ codes }) => {\n  return codes.map((code) => {\n      return(<li>{code.label}</li>)\n    })\n}\n\nconst QuestionGridListItem = (props) => {\n\n  return (\n    <div>This is a Question Grid</div>\n  )\n}\n\nconst StatementListItem = (props) => {\n  const {type, id, instrumentId} = props\n  const item = ObjectFinder(instrumentId, type, id)\n  const classes = useStyles();\n\n  return (\n    <div>{item.literal}</div>\n  )\n}\n\nconst ConditionItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'literal', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n              <ListItem button className={classes.nested}>\n                {(function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />;\n                    case 'CcQuestion':\n                      return <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    case 'CcCondition':\n                      return <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    default:\n                      console.log(child)\n                      return null;\n                  }\n                })()}\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst SequenceItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'label', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n                (function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />\n                          </ListItem>)\n                    case 'CcQuestion':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    case 'CcStatement':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <StatementListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    case 'CcCondition':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} children={get(child,'children',[])} />\n                          </ListItem>)\n                    default:\n                      return null;\n                  }\n                })()\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst InstrumentView = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n\n  useEffect(() => {\n    dispatch(Instrument.show(instrumentId));\n    dispatch(CcSequences.all(instrumentId));\n    dispatch(CcStatements.all(instrumentId));\n    dispatch(CcConditions.all(instrumentId));\n    dispatch(CcQuestions.all(instrumentId));\n    dispatch(QuestionItems.all(instrumentId));\n    dispatch(QuestionGrids.all(instrumentId));\n    dispatch(Variables.all(instrumentId));\n    dispatch(Topics.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sequence = (isEmpty(cc_sequences)) ? undefined : Object.values(cc_sequences).find(element => element.top == true)\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'View'} instrumentId={instrumentId}>\n      <InstrumentHeading instrument={instrument} mode={'view'} />\n      {isNil(sequence)\n        ? <Box m=\"auto\"><BounceLoader color={'#009de6'}/></Box>\n        : <SequenceItem instrumentId={instrumentId} type={'CcSequence'} id={sequence.children[0].id} title={sequence.children[0].label} children={sequence.children[0].children}/>\n      }\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentView;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, Variables, Topics } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { get, isEmpty, isNil } from \"lodash\";\nimport { InstrumentHeading } from '../components/InstrumentHeading'\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport { Box } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n  }\n\n  return item\n\n}\n\nconst QuestionItemListItem = (props) => {\n  const {type, id, instrumentId} = props\n  const item = ObjectFinder(instrumentId, type, id)\n  const classes = useStyles();\n\n  const title = (isEmpty(item.question)) ? item.label : item.question.literal\n\n  const topic = get(item, 'topic', {id: null})\n  const topicId = get(topic, 'id', null)\n\n  const status = ObjectStatus(item.id, 'CcQuestion')\n\n  return (\n      <ListItem>\n      <Paper className={classes.control}>\n      <Grid container spacing={3}>\n          { !isEmpty(status) && !isNil(status.error) && (\n            <div className={classes.root}>\n              <Alert severity=\"error\">\n                <AlertTitle>Error</AlertTitle>\n                {status.errorMessage}\n              </Alert>\n            </div>\n          )}\n          <Grid item xs={9}>\n            <ListItemText primary={title} />\n          </Grid>\n          <Grid item xs={3}>\n            <Chip label={item.label} color=\"primary\"></Chip>\n            { !isEmpty(status) && !isNil(status.saving) && (\n              <Chip label=\"Saving\" color=\"secondary\">              <SyncLoader/></Chip>\n            )}\n            { !isEmpty(status) && !isNil(status.saved) && (\n              <Chip label=\"Saved\" color=\"success\" deleteIcon={<DoneIcon />}></Chip>\n            )}\n          </Grid>\n          <Grid item xs={6}>\n            <VariableList variables={item.variables} instrumentId={instrumentId} ccQuestionId={item.id} />\n          </Grid>\n          <Grid item xs={6}>\n            <TopicList topicId={topicId} instrumentId={instrumentId} ccQuestionId={item.id} />\n          </Grid>\n        </Grid>\n      </Paper>\n      </ListItem>\n  )\n}\n\nconst TopicList = (props) => {\n  const {topicId, instrumentId, ccQuestionId} = props\n\n  const dispatch = useDispatch()\n\n  const topics = useSelector(state => state.topics);\n\n  const classes = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\n  const handleChange = (event, value, reason) => {\n    dispatch(CcQuestions.topic.set(instrumentId, ccQuestionId, event.target.value));\n  }\n\n  if(isEmpty(topics)){\n    return 'Fetching topics'\n  }else if(isNil(topicId)){\n    return (\n          <div>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"grouped-native-select\">Topic</InputLabel>\n              <Select native id=\"grouped-native-select\" onChange={handleChange}>\n                <option aria-label=\"None\" value=\"\" />\n                {Object.values(topics).map((topic) => (\n                  <option key={topic.id} value={topic.id}>{(topic.level === 1) ? topic.name : '--' + topic.name }</option>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n    )\n  }else{\n    return (\n          <div>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"grouped-native-select\">Topic</InputLabel>\n              <Select native defaultValue={topicId} id=\"grouped-native-select\" onChange={handleChange}>\n                <option aria-label=\"None\" value=\"\" />\n                {Object.values(topics).map((topic) => (\n                  <option key={topic.id} value={topic.id}>{(topic.level === 1) ? topic.name : '--' + topic.name }</option>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n    )\n  }\n}\n\nconst VariableList = (props) => {\n  const {variables, instrumentId, ccQuestionId} = props\n\n  const dispatch = useDispatch()\n\n  const allVariables = useSelector(state => state.variables);\n  const variableOptions = get(allVariables, instrumentId, {})\n\n  const handleAddVariable = (newVariables) => {\n    dispatch(CcQuestions.variables.add(instrumentId, ccQuestionId, newVariables));\n  }\n\n  const handleRemoveVariable = (oldVariables) => {\n    dispatch(CcQuestions.variables.remove(instrumentId, ccQuestionId, oldVariables));\n  }\n\n  var difference = []\n\n  const handleChange = (event, value, reason) => {\n    switch (reason) {\n      case 'select-option':\n        difference = value.filter(x => !variables.includes(x));\n        if(!isEmpty(difference)){\n          return handleAddVariable(difference.map((variable) => { return variable.name }).join(','))\n        };\n        break;\n      case 'remove-option':\n        difference = variables.filter(x => !value.includes(x));\n        if(!isEmpty(difference)){\n          return handleRemoveVariable(difference.map((variable) => { return variable.id }).join(','))\n        };\n        break;\n      default:\n        return null;\n    }\n  }\n\n  if(isEmpty(variables)){\n    return (\n      <div>\n         <Autocomplete\n          multiple\n          id=\"tags-outlined\"\n          options={Object.values(variableOptions)}\n          getOptionLabel={(option) => option.name}\n          onChange={handleChange}\n          value={[]}\n          filterSelectedOptions\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Variables\"\n              placeholder=\"Add variable\"\n            />\n          )}\n        />\n      </div>\n    )\n  }else{\n    return (\n      <div>\n         <Autocomplete\n          multiple\n          id=\"tags-outlined\"\n          options={Object.values(variableOptions)}\n          getOptionLabel={(option) => option.name}\n          onChange={handleChange}\n          value={variables}\n          getOptionSelected= {(option, value) => (\n            option.id === value.id\n          )}\n          filterSelectedOptions\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"outlined\"\n              label=\"Variables\"\n              placeholder=\"Add variable\"\n            />\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nconst QuestionGridListItem = (props) => {\n\n  return (\n    <div>This is a Question Grid</div>\n  )\n}\n\nconst ConditionItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'literal', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n              <ListItem button className={classes.nested}>\n                {(function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />;\n                    case 'CcQuestion':\n                      return <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    case 'CcCondition':\n                      return <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                    default:\n                      console.log(child)\n                      return null;\n                  }\n                })()}\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst SequenceItem = (props) => {\n  const { instrumentId } = props;\n  var {title} = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  var item = ObjectFinder(instrumentId, props.type, props.id)\n\n  title = get(item, 'label', props.title)\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n          {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      {!isEmpty(item.children) && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {item.children.map((child) => (\n                (function() {\n                  switch (child.type) {\n                    case 'CcSequence':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <SequenceItem instrumentId={instrumentId} id={child.id} type={child.type} title={child.type} children={get(child,'children',[])} />\n                          </ListItem>)\n                    case 'CcQuestion':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <QuestionItemListItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    case 'CcCondition':\n                      return (\n                          <ListItem button className={classes.nested}>\n                            <ConditionItem instrumentId={instrumentId} id={child.id} type={child.type} />\n                          </ListItem>)\n                    default:\n                      return null;\n                  }\n                })()\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </List>\n  );\n}\n\nconst InstrumentMap = (props) => {\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n\n  useEffect(() => {\n    dispatch(Instrument.show(instrumentId));\n    dispatch(CcSequences.all(instrumentId));\n    dispatch(CcStatements.all(instrumentId));\n    dispatch(CcConditions.all(instrumentId));\n    dispatch(CcQuestions.all(instrumentId));\n    dispatch(QuestionItems.all(instrumentId));\n    dispatch(QuestionGrids.all(instrumentId));\n    dispatch(Variables.all(instrumentId));\n    dispatch(Topics.all());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sequence = (isEmpty(cc_sequences)) ? undefined : Object.values(cc_sequences).find(element => element.top == true)\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Maps'} instrumentId={instrumentId}>\n        <InstrumentHeading instrument={instrument} mode={'map'} />\n      {isNil(sequence)\n        ? <Box m=\"auto\"><BounceLoader color={'#009de6'}/></Box>\n        : <SequenceItem instrumentId={instrumentId} type={'CcSequence'} id={sequence.children[0].id} title={sequence.children[0].label} children={sequence.children[0].children}/>\n      }\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentMap;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { InstrumentHeading } from '../components/InstrumentHeading'\nimport { get } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuild = (props) => {\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const stats = useSelector(state => get(state.instrumentStats, instrumentId, {}));\n\n  const instrumentStats = get(stats, 'stats', {})\n  const {\n    categories=0, code_lists=0, response_domain_datetimes=0,\n    response_domain_numerics=0, response_domain_texts=0,\n    question_items=0, question_grids=0, instructions=0,\n    cc_conditions=0, cc_loops=0, cc_questions=0, cc_sequences=0,\n    cc_statements=0\n  } = instrumentStats\n\n  useEffect(() => {\n    dispatch(Instrument.show(instrumentId));\n    dispatch(Instrument.stats(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const StatCount = (props) => {\n    const {label, value} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label}/>\n        <ListItemSecondaryAction>\n          <Chip label={value} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <InstrumentHeading instrument={instrument} mode={'build'}/>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.codeLists.all, { instrument_id: instrumentId })}>Code Lists</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Categories\" value={categories} />\n                  <StatCount label=\"Code Lists\" value={code_lists} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.responseDomains.all, { instrument_id: instrumentId })}>ResponseDomains</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Datetime Answers\" value={response_domain_datetimes} />\n                  <StatCount label=\"Numberic Answers\" value={response_domain_numerics} />\n                  <StatCount label=\"Text Answers\" value={response_domain_texts} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })}>Questions</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Question Items\" value={question_items} />\n                  <StatCount label=\"Question Grids\" value={question_grids} />\n                  <StatCount label=\"Instructions\" value={instructions} />\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.control}>\n              <h2><Link to={url(routes.instruments.instrument.build.constructs.show, { instrument_id: instrumentId })}>Constructs</Link></h2>\n              <List dense={true}>\n                  <StatCount label=\"Conditions\" value={cc_conditions} />\n                  <StatCount label=\"Loops\" value={cc_loops} />\n                  <StatCount label=\"Questions\" value={cc_questions} />\n                  <StatCount label=\"Sequences\" value={cc_sequences} />\n                  <StatCount label=\"Statements\" value={cc_statements} />\n              </List>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuild;\n","import React from 'react'\nimport {isNil} from 'lodash'\nimport { useDispatch } from 'react-redux'\n\nimport {\n  Grid,\n  Button\n} from '@material-ui/core';\n\nexport const DeleteObjectButton = (props) => {\n  const {instrumentId, id, action, onDelete= () => { console.log('No delete callback provided') }} = props;\n\n  const dispatch=useDispatch()\n\n  const handleDelete = () => {\n    if( !isNil(id) && window.confirm('Are you sure you want to delete this?')){\n      dispatch(action.delete(instrumentId, id, onDelete))\n    }\n  }\n\n  if(isNil(id)){\n    return ''\n  }\n\n  return (\n    <Grid item style={{ marginTop: 16 }}>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={()=>{handleDelete()}}\n      >\n        Delete\n      </Button>\n    </Grid>\n  )\n}\n","import { merge, isObject } from 'lodash';\n\nexport const ObjectCheckForInitialValues = (initialValues, values) => {\n    // For every field initially provided, we check whether it value has been removed\n    // and set it explicitly to an empty string\n    if (!initialValues) return values;\n    const initialValuesWithEmptyFields = Object.keys(initialValues).reduce(\n        (acc, key) => {\n            if (values[key] instanceof Date || Array.isArray(values[key])) {\n                acc[key] = values[key];\n            } else if (\n                typeof values[key] === 'object' &&\n                values[key] !== null\n            ) {\n                acc[key] = ObjectCheckForInitialValues(initialValues[key], values[key]);\n            } else {\n                acc[key] =\n                    typeof values[key] === 'undefined' ? null : values[key];\n            }\n            return acc;\n        },\n        {}\n    );\n\n    // Finally, we merge back the values to not miss any which wasn't initially provided\n    return merge(initialValuesWithEmptyFields, values);\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcConditions } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('condition')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Logic\"\n        name=\"logic\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n];\n\nexport const CcConditionForm = (props) => {\n  const {ccCondition, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccCondition.id || 'new', 'CcCondition')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccCondition, values)\n\n    if(isNil(ccCondition.id)){\n      dispatch(CcConditions.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcConditions.update(instrumentId, ccCondition.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccCondition.id || 'new'} type={'CcCondition'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccCondition}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcConditions} onDelete={()=> { onDelete({ path }) }}/>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcQuestions } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { OnChange } from 'react-final-form-listeners'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('question')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((error_key)=>{\n      var key = (['response_unit', 'question'].includes(error_key)) ? `${error_key}_id` : error_key\n      if(isNil(values[key]) || values[key] == ''){\n        return errors[key] = status.errors[error_key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"question_type\"\n          label=\"Type\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='QuestionItem'>Item</MenuItem>\n          <MenuItem value='QuestionGrid'>Grid</MenuItem>\n        </Select>\n      )\n  }\n];\n\nexport const CcQuestionForm = (props) => {\n  const {ccQuestion, instrumentId, onChange, path, onDelete} = props;\n\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  const allResponseUnits = useSelector(state => state.response_units);\n  const responseUnits = get(allResponseUnits, instrumentId, {})\n\n  const [questionOptions, setQuestionOptions] = useState((ccQuestion.question_type === 'QuestionGrid') ? questionGrids : questionItems);\n\n  const changeQuestionOptions = (question_type) => {\n    setQuestionOptions((question_type === 'QuestionGrid') ? questionGrids : questionItems)\n  }\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccQuestion.id || 'new', 'CcQuestion')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccQuestion, values)\n\n    if(isNil(ccQuestion.id)){\n      dispatch(CcQuestions.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcQuestions.update(instrumentId, ccQuestion.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccQuestion.id || 'new'} type={'CcQuestion'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccQuestion}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <OnChange name=\"question_type\">\n                  {(value, previous) => {\n                    changeQuestionOptions(value)\n                    values.question_id = null\n                  }}\n                </OnChange>\n                <Grid item xs=\"12\" key=\"question\">\n                  <Select\n                    name=\"question_id\"\n                    label=\"Question\"\n                    formControlProps={{ margin: 'none' }}\n                  >\n                    <MenuItem></MenuItem>\n                    {Object.values(questionOptions).map((item, idx) => (\n                      <MenuItem value={item.id}>{item.label}</MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n                <Grid item xs=\"12\" key=\"response_unit_id\">\n                  <Select\n                    name=\"response_unit_id\"\n                    label=\"Interviewee\"\n                    formControlProps={{ margin: 'none' }}\n                  >\n                    <MenuItem></MenuItem>\n                    {Object.values(responseUnits).map((item, idx) => (\n                      <MenuItem value={item.id}>{item.label}</MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcQuestions} onDelete={()=> { onDelete({ path }) }} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcStatements } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('statement')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={false}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={false}\n      />\n    ),\n  },\n];\n\nexport const CcStatementForm = (props) => {\n  const {ccStatement, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccStatement.id || 'new', 'CcStatement')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccStatement, values)\n\n    if(isNil(ccStatement.id)){\n      dispatch(CcStatements.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcStatements.update(instrumentId, ccStatement.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccStatement.id || 'new'} type={'CcStatement'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccStatement}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcStatements} onDelete={()=> { onDelete({ path }) }} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcSequences } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('sequence')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n];\n\nexport const CcSequenceForm = (props) => {\n  const {ccSequence, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccSequence.id || 'new', 'CcSequence')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccSequence, values)\n\n    if(isNil(ccSequence.id)){\n      dispatch(CcSequences.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcSequences.update(instrumentId, ccSequence.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccSequence.id || 'new'} type={'CcSequence'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccSequence}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcSequences} onDelete={()=> { onDelete({ path }) }} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CcLoops } from '../actions'\nimport { ObjectStatusBar, ObjectStatus } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ObjectColour } from '../support/ObjectColour'\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  paper:{\n    boxShadow :`5px 5px 15px 5px  #${ObjectColour('loop')}`\n  }\n});\n\nconst validate = (values, status) => {\n\n  const errors = {};\n\n  if(status.errors){\n    Object.keys(status.errors).map((key)=>{\n      if(isNil(values[key]) || values[key] == ''){\n        errors[key] = status.errors[key][0];\n      }\n    })\n  }else{\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n   if (!values.start_val) {\n     errors.start_val = 'Required';\n   }\n   if (!values.loop_var) {\n     errors.loop_var = 'Required';\n   }\n  }\n\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Variable\"\n        name=\"loop_var\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Start Value\"\n        name=\"start_val\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"End Value\"\n        name=\"end_val\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Loop While\"\n        name=\"loop_while\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nexport const CcLoopForm = (props) => {\n  const {ccLoop, instrumentId, onChange, path, onDelete} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const status = ObjectStatus(ccLoop.id || 'new', 'CcLoop')\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(ccLoop, values)\n\n    if(isNil(ccLoop.id)){\n      dispatch(CcLoops.create(instrumentId, values, (newObject) => {\n        onChange({node: { ...values, ...newObject  }, path: path})\n      }))\n    }else{\n      dispatch(CcLoops.update(instrumentId, ccLoop.id, values))\n      onChange({node: values, path: path})\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={ccLoop.id || 'new'} type={'CcLoop'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={ccLoop}\n        validate={(values) => validate(values, status)}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field([])\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CcLoops} onDelete={()=> { onDelete({ path }) }}/>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Instrument, CcConditions, CcLoops, CcSequences, CcStatements, CcQuestions, QuestionItems, QuestionGrids, ResponseUnits } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { CcConditionForm } from '../components/CcConditionForm'\nimport { CcQuestionForm } from '../components/CcQuestionForm'\nimport { CcStatementForm } from '../components/CcStatementForm'\nimport { CcSequenceForm } from '../components/CcSequenceForm'\nimport { CcLoopForm } from '../components/CcLoopForm'\nimport { Loader } from '../components/Loader'\nimport { ObjectColour } from '../support/ObjectColour'\nimport { get, isEmpty, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\nimport SearchBar from \"material-ui-search-bar\";\n\nimport {\n  Button,\n  ButtonGroup,\n  Divider\n} from '@material-ui/core';\n\nimport {\n  Alert,\n  AlertTitle\n} from '@material-ui/lab';\n\nimport SortableTree, { addNodeUnderParent, removeNodeAtPath, getFlatDataFromTree, changeNodeAtPath, toggleExpandedForAll } from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css'; // This only needs to be imported once in your app\n\nconst TreeNode = (instrumentId, type, id, expanded=false) => {\n  var item = ObjectFinder(instrumentId, type, id)\n  var children;\n\n  if(item.type === \"condition\"){\n    children = get(item, 'children',[])\n    var fchildren = get(item, 'fchildren',[])\n\n    var trueAndFalse = [\n      { title: `True`, expanded: expanded, conditionId: item.id, type: 'conditionTrue', children: children.map(child => TreeNode(instrumentId, child.type, child.id)) },\n      { title: `False`, expanded: expanded, conditionId: item.id, type: 'conditionFalse', children: fchildren.map(child => TreeNode(instrumentId, child.type, child.id)) },\n    ]\n    return {...item, ...{ title: `${item.label}`, expanded: expanded, type: item.type, children: trueAndFalse } }\n  }else{\n    children = get(item, 'children',[])\n\n    return {...item, ...{ title: `${item.label}`, expanded: expanded, type: item.type, children: children.map(child => TreeNode(instrumentId, child.type, child.id)) } }\n  }\n}\n\nconst TreeNodeFormatter = (instrumentId, item) => {\n  return {...item, ...{ title: `${item.label}`, expanded: true, type: item.type } }\n}\n\nconst Tree = (props) => {\n  const { topSequence, instrumentId, dispatch, onNodeSelect } = props\n  const [treeData, setTreeData] = useState([TreeNode(instrumentId, 'CcSequence', topSequence.id, true)]);\n  const [selectedNode, setSelectedNode] = useState({});\n//  const [expanded, setExpanded] = useState(true);\n  const classes = useStyles();\n\n  const [searchString, setSearchString] = useState();\n  const [searchFocusIndex, setSearchFocusIndex] = useState();\n  const [searchFoundCount, setSearchFoundCount] = useState();\n\n  // Case insensitive search of `node.title`\n  const customSearchMethod = ({ node, searchQuery }) =>\n    searchQuery &&\n    node.title.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1;\n\n  const selectPrevMatch = () =>\n      setSearchFocusIndex(\n        searchFocusIndex !== null\n          ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\n          : searchFoundCount - 1\n      );\n\n  const selectNextMatch = () =>\n    setSearchFocusIndex(\n        searchFocusIndex !== null\n          ? (searchFocusIndex + 1) % searchFoundCount\n          : 0,\n    );\n\n  const getNodeKey = ({ treeIndex }) => treeIndex;\n\n  const updateNode = ({ node, path }) => {\n    var data = changeNodeAtPath({\n        treeData: treeData,\n        path,\n        getNodeKey,\n        newNode: TreeNodeFormatter(instrumentId, node)\n      })\n      setTreeData(data)\n      reorderConstructs(data)\n  }\n\n  const deleteNode = ({ path }) => {\n    onNodeSelect({})\n    setTreeData(removeNodeAtPath({\n                    treeData: treeData,\n                    path,\n                    getNodeKey,\n    }));\n  }\n\n  const canHaveChildren = (node) => {\n    return (node.type === 'sequence' || node.type === 'loop' || node.type === 'conditionTrue' || node.type === 'conditionFalse')\n  }\n\n  const canDrop = ({ node, nextParent, prevPath, nextPath }) => {\n    if (canHaveChildren(nextParent)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const toggleExpand = (expanded) => {\n    setTreeData(toggleExpandedForAll({\n                    treeData: treeData,\n                    expanded: expanded\n    }));\n  }\n\n  const orderArray = (data) => {\n    return getFlatDataFromTree({\n      treeData: data,\n      getNodeKey: ({ node }) => { return { id: node.id, type: node.type, children: node.children.map(child => `type ${child.type} id ${child.id}` ) } }, // This ensures your \"id\" properties are exported in the path\n      ignoreCollapsed: false, // Makes sure you traverse every node in the tree, not just the visible ones\n    }).map(({ node, path }) => {\n      if(['conditionTrue', 'conditionFalse'].includes(node.type)){\n        return null\n      }\n      let parent = path[path.length - 2]\n      let branch = (parent !== undefined && parent.type === 'conditionFalse') ? 1 : 0\n      if(parent !== undefined && ['conditionTrue', 'conditionFalse'].includes(parent.type)){\n        parent = path[path.length - 3]\n      }\n      return {\n        id: node.id,\n        type: node.type,\n        position: (parent !== undefined) ? parent.children.indexOf(`type ${node.type} id ${node.id}`) + 1 : node.position,\n        branch: branch,\n        // // The last entry in the path is this node's key\n        // // The second to last entry (accessed here) is the parent node's key\n        parent: (parent !== undefined) ? { id: parent.id, type: parent.type } : {},\n    }}).filter(el => el != null);\n  }\n\n  const reorderConstructs = (data) => {\n    dispatch(Instrument.reorderConstructs(instrumentId, orderArray(data)));\n  }\n\n  const generateButtons = (node, path) => {\n      var buttons = []\n      if(canHaveChildren(node)){\n        buttons.push(\n              <button\n              onClick={(event) => {\n                  setTreeData(addNodeUnderParent({\n                    treeData: treeData,\n                    parentKey: path[path.length - 1],\n                    expandParent: true,\n                    getNodeKey,\n                    newNode: {\n                      title: `Click to select construct type`,\n                      children: []\n                    }\n                  }).treeData)\n                  event.stopPropagation()\n                  setSelectedNode({node: { type: undefined }})\n              }}\n            >\n              <AddIcon />\n            </button>\n        )\n      }\n      return buttons;\n  }\n\n  return (\n    <div style={{ height: 10000 }}>\n\n    <SearchBar\n      placeholder=\"Search (press return to perform search)\"\n      onRequestSearch={(newValue) =>\n              setSearchString(newValue)\n            }\n      onCancelSearch={() => {\n              setSearchString()\n            }}\n    />\n\n    {searchFoundCount === 0 && !isNil(searchString) && (\n      <Alert severity=\"error\">\n        <AlertTitle>Error</AlertTitle>\n        No results found.\n      </Alert>\n    )}\n\n    {searchFoundCount > 0 && !isNil(searchString) && (\n      <>\n        <span>\n          &nbsp;\n          {searchFoundCount > 0 ? searchFocusIndex + 1 : 0}\n          &nbsp;of&nbsp;\n          {searchFoundCount || 0} matches\n        </span>\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n          <Button onClick={selectPrevMatch}>&lt; Prev</Button>\n          <Button onClick={selectNextMatch}>&gt; Next</Button>\n        </ButtonGroup>\n      </>\n    )}\n\n      <Divider className={classes.divider}/>\n\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button onClick={()=>{toggleExpand(true)}} startIcon={<ExpandMoreIcon />}>Expand All</Button>\n        <Button onClick={()=>{toggleExpand(false)}} startIcon={<ExpandLessIcon />}>Collapse All</Button>\n      </ButtonGroup>\n\n      <SortableTree\n        treeData={treeData}\n        onChange={newTreeData => { setTreeData(newTreeData); reorderConstructs(newTreeData) } }\n        canNodeHaveChildren={node => canHaveChildren(node)}\n        canDrop={canDrop}\n        canDrag={({node}) =>{\n          return !['conditionTrue', 'conditionFalse'].includes(node.type)\n        }}\n        searchMethod={customSearchMethod}\n        searchQuery={searchString}\n        searchFocusOffset={searchFocusIndex}\n        searchFinishCallback={(matches) => {\n          setSearchFoundCount(matches.length)\n          setSearchFocusIndex(matches.length > 0 ? searchFocusIndex % matches.length : 0)\n        }}\n        generateNodeProps={({ node, path }) => {\n          const boxShadow = (node === selectedNode || node.type == 'sequence' ) ? `0px 0px 15px 3px  #${ObjectColour(node.type)}` : ''\n\n          return (\n            {\n              style: {\n                boxShadow: boxShadow,\n              },\n              onClick: () => {\n                onNodeSelect({ node: node, path: path,  callback: ({ node, path }) => { updateNode({ node, path }) }, deleteCallback: ({ path }) => { deleteNode({ path }) } });\n                setSelectedNode(node);\n              },\n              buttons: generateButtons(node, path),\n              className: `${node.type}:${node.id}`\n            }\n          )\n        }}\n      />\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  main: {\n    'min-height': '1200px'\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n    right: '5px'\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  paper:{\n    boxShadow :`5px 5px 10px 5px  #${ObjectColour('default')}`\n  },\n  statement:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('statement')}`,\n    'margin-bottom': '10px'\n  },\n  sequence:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('sequence')}`,\n    'margin-bottom': '10px'\n  },\n  question:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('question')}`,\n    'margin-bottom': '10px'\n  },\n  loop:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('loop')}`,\n    'margin-bottom': '10px'\n  },\n  condition:{\n    boxShadow :`2px 2px 7px 2px  #${ObjectColour('condition')}`,\n    'margin-bottom': '10px'\n  },\n  divider:{\n    margin: '25px'\n  }\n}));\n\nconst ObjectStatus = (id, type) => {\n  const statuses = useSelector(state => state.statuses);\n  const key = type + ':' + id\n  return get(statuses, key, {})\n}\n\nconst ObjectFinder = (instrumentId, type, id) => {\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, {})\n  const statements = useSelector(state => state.cc_statements);\n  const cc_statements = get(statements, instrumentId, {})\n  const conditions = useSelector(state => state.cc_conditions);\n  const cc_conditions = get(conditions, instrumentId, {})\n  const loops = useSelector(state => state.cc_loops);\n  const cc_loops = get(loops, instrumentId, {})\n  const questions = useSelector(state => state.cc_questions);\n  const cc_questions = get(questions, instrumentId, {})\n  const allQuestionItems = useSelector(state => state.questionItems);\n  const questionItems = get(allQuestionItems, instrumentId, {})\n  const allQuestionGrids = useSelector(state => state.questionGrids);\n  const questionGrids = get(allQuestionGrids, instrumentId, {})\n\n  var item = {children: []}\n\n  if(type === 'CcLoop'){\n    item = get(cc_loops, id.toString(), {})\n    item.type = 'loop'\n  }\n\n  if(type === 'CcSequence'){\n    item = get(cc_sequences, id.toString(), {})\n    item.type = 'sequence'\n  }\n\n  if(type === 'CcStatement'){\n    item = get(cc_statements, id.toString(), {})\n    item.type = 'statement'\n  }\n\n  if(type === 'CcCondition'){\n    item = get(cc_conditions, id.toString(), {})\n    item.type = 'condition'\n  }\n\n  if(type === 'CcQuestion'){\n    item = get(cc_questions, id.toString(), {})\n\n    if(item.question_type === 'QuestionItem'){\n      item.question = get(questionItems, item.question_id.toString(), {})\n    }else if(item.question_type === 'QuestionGrid'){\n      item.question = get(questionGrids, item.question_id.toString(), {})\n    }\n    item.type = 'question'\n  }\n\n  return item\n\n}\n\nconst ConstructForm = (props) => {\n  const {object, instrumentId, onNodeSelect} = props;\n  const { node={}, path, callback=(node)=>{ console.log('No onChange callback provided')}, deleteCallback=(node)=>{ console.log('No onDelete callback provided')} } = object;\n\n  switch (node.type) {\n    case 'question':\n      return <CcQuestionForm ccQuestion={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'statement':\n      return <CcStatementForm ccStatement={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'sequence':\n      return <CcSequenceForm ccSequence={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'condition':\n      return <CcConditionForm ccCondition={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case 'loop':\n      return <CcLoopForm ccLoop={node} instrumentId={instrumentId} path={path} onChange={callback} onDelete={deleteCallback} />\n    case undefined:\n      return <NewConstructQuestion onNodeSelect={onNodeSelect} object={object}/>\n    default:\n      return ''\n  }\n\n}\n\nconst NewConstructQuestion = (props) => {\n  const {object, onNodeSelect} = props;\n\n  const classes = useStyles();\n\n  return (\n            <Paper style={{ padding: 16 }} className={classes.paper}>\n              <h3>Select construct type</h3>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.question}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'question' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Question\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.condition}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'condition' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Condition\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.loop}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'loop' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Loop\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.sequence}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'sequence' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Sequence\n                  </Button>\n                  <br/>\n                  <Button\n                    type=\"button\"\n                    variant=\"outlined\"\n                    className={classes.statement}\n                    onClick={() => {\n                      var node = {...object.node, ...{ type: 'statement' }}\n                      onNodeSelect({...object, ...{node: node }})\n                    }}\n                  >\n                    Statement\n                  </Button>\n          </Paper>\n  )\n\n}\n\nconst InstrumentConstructBuild = (props) => {\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch()\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const instrument = useSelector(state => get(state.instruments, instrumentId));\n  const sequences = useSelector(state => state.cc_sequences);\n  const cc_sequences = get(sequences, instrumentId, null)\n\n  const [selectedNode, setSelectedNode] = useState({});\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(Instrument.show(instrumentId)),\n      dispatch(CcSequences.all(instrumentId)),\n      dispatch(CcStatements.all(instrumentId)),\n      dispatch(CcConditions.all(instrumentId)),\n      dispatch(CcLoops.all(instrumentId)),\n      dispatch(CcQuestions.all(instrumentId)),\n      dispatch(QuestionItems.all(instrumentId)),\n      dispatch(QuestionGrids.all(instrumentId)),\n      dispatch(ResponseUnits.all(instrumentId))\n    ]).then(() => {\n      setDataLoaded(true)\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const sequence = (isEmpty(cc_sequences) || isNil(cc_sequences)) ? undefined : Object.values(cc_sequences).find(element => element.top == true)\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={'Build'} instrumentId={instrumentId}>\n        <h1>{get(instrument, 'label')}</h1>\n      {!dataLoaded\n        ? <Loader />\n        : (\n          <Grid container spacing={3} className={classes.main}>\n            <Grid item xs={(isEmpty(selectedNode)) ? 12 : 12 }>\n              <Tree topSequence={sequence.children[0]} instrumentId={instrumentId} onNodeSelect={setSelectedNode} dispatch={dispatch} />\n            </Grid>\n            {!isEmpty(selectedNode) && (\n              <Grid item xs={4} className={classes.side}>\n                <ConstructForm object={selectedNode} instrumentId={instrumentId} onNodeSelect={setSelectedNode} />\n              </Grid>\n            )}\n          </Grid>\n        )\n      }\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentConstructBuild;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CodeLists } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { Link } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport {\n  TextField,\n  Checkboxes,\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <Checkboxes\n        name=\"rd\"\n        formControlProps={{ margin: 'none' }}\n        data={{ label: 'Response Domain', value: true }}\n      />\n    ),\n  },\n  {\n    size: 12,\n    visible: (values) => {\n      return get(values, 'rd', false)\n    },\n    field: <TextField name=\"min_responses\" multiline label=\"Min Responses\" margin=\"none\" />,\n  },\n  {\n    size: 12,\n    visible: (values) => {\n      return get(values, 'rd', false)\n    },\n    field: <TextField name=\"max_responses\" multiline label=\"Max Responses\" margin=\"none\" />,\n  }\n];\n\nconst FormField = (props) => {\n  const {item, values} = props\n\n  if(item.visible !== undefined && !item.visible(values) ){\n    return ''\n  }\n\n  if(item.type && item.type === 'select'){\n    return item.field()\n  }else{\n    return item.field\n  }\n}\n\nexport const CodeListForm = (props) => {\n  const {codeList, instrumentId} = props;\n\n  const categories = useSelector(state => get(state.categories, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n      values = ObjectCheckForInitialValues(codeList, values)\n\n    if(isNil(codeList.id)){\n      dispatch(CodeLists.create(instrumentId, values))\n    }else{\n      dispatch(CodeLists.update(instrumentId, codeList.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={codeList.id || 'new'} type={'CodeList'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={codeList}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    <FormField item={item} values={values} />\n                  </Grid>\n                ))}\n                <h3>Codes</h3>\n                  <AddCircleOutlineIcon onClick={() => push('codes', {})}/>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>ID</TableCell>\n                        <TableCell size=\"small\">Value</TableCell>\n                        <TableCell>Label</TableCell>\n                        <TableCell>Actions</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                            <FieldArray name=\"codes\">\n                              {({ fields }) =>\n                                fields.map((name, index) => (\n                                  <TableRow key={name}>\n                                    <TableCell>\n                                      {fields.value[index].id}\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      <TextField name={`${name}.value`} multiline label=\"Value\" margin=\"none\" />\n                                    </TableCell>\n                                    <TableCell>\n                                     <Autocomplete\n                                      freesolo=\"true\"\n                                      options={Object.values(categories)}\n                                      getOptionLabel={(option) => option.label}\n                                      onChange={(event, value, reason)=>{\n                                        if(isNil(value)){\n                                          fields.update(index, {...fields.value[index], ...{category_id: null, label: null} })\n                                        }else{\n                                          fields.update(index, {...fields.value[index], ...{category_id: value.id, label: value.label} })\n                                        }\n                                      } }\n                                      value={{id: fields.value[index].category_id, label:fields.value[index].label}}\n                                      getOptionSelected= {(option, value) => (\n                                        option.id === value.id\n                                      )}\n                                      renderInput={(params) => (\n                                        <TextField name={`${name}.label`}\n                                          {...params}\n                                          variant=\"outlined\"\n                                          label=\"Label\"\n                                          placeholder=\"label\"\n                                        />\n                                      )}\n                                    />\n                                    </TableCell>\n                                    <TableCell>\n                                      <span\n                                        onClick={() => fields.remove(index)}\n                                        style={{ cursor: 'pointer' }}\n                                      >\n                                        <DeleteIcon />\n                                      </span>\n                                    </TableCell>\n                                  </TableRow>\n                                ))\n                              }\n                            </FieldArray>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={CodeLists} />\n              </Grid>\n              <Grid item style={{ marginTop: 16 }}>\n                <h3>Used By</h3>\n                <TableContainer component={Paper}>\n                  <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>ID</TableCell>\n                        <TableCell size=\"small\">Question Type</TableCell>\n                        <TableCell>Label</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                              {codeList.used_by.map((question) => (\n                                  <TableRow key={question.id}>\n                                    <TableCell>\n                                      <Button variant=\"outlined\">\n                                        <Link to={url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: question.id })}>{question.id}</Link>\n                                      </Button>\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      {question.type}\n                                    </TableCell>\n                                    <TableCell size=\"small\">\n                                      {question.label}\n                                    </TableCell>\n                                  </TableRow>\n                                ))\n                              }\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { useHistory } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nconst ObjectTypeLookup = (objectType, instrumentId) => {\n    switch(objectType) {\n      case('ResponseDomainNumeric'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Numeric'\n        }\n      case('ResponseDomainText'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Text'\n        }\n      case('ResponseDomainDatetime'):\n        return {\n          path: url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: objectType, responseDomainId: 'new' }),\n          text: 'Datetime'\n        }\n      case('CodeList'):\n        return {\n          path: url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: 'new' }),\n          text: 'New CodeList'\n        }\n      case('QuestionItem'):\n        return {\n          path: url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: 'new' }),\n          text: 'Question Item'\n        }\n      case('QuestionGrid'):\n        return {\n          path: url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: 'new' }),\n          text: 'Question Grid'\n        }\n      default:\n        return {\n          path: '/',\n          text: 'Not found'\n        }\n  }\n}\n\nexport const CreateNewBuildObjectButtons  = (props) => {\n  const { objectTypes=[], instrumentId, callback=()=>{}} = props;\n\n  const history = useHistory();\n\n  const createNew = (path) => {\n    history.push(path);\n    callback('new')\n  }\n\n  const buttons = objectTypes.map( objectType => ObjectTypeLookup(objectType, instrumentId) )\n\n  return (\n    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n     {buttons.map((button) => {\n        return <Button onClick={()=> { createNew(button.path)} }startIcon={<AddIcon />}>{button.text}</Button>\n      })}\n    </ButtonGroup>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CodeLists, Categories } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { CodeListForm } from '../components/CodeListForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildCodeLists = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const codeListId = get(props, \"match.params.codeListId\", null);\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n  const selectedCodeList = get(codeLists, codeListId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(CodeLists.all(instrumentId));\n    dispatch(Categories.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const CodeListItem = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleCodeListSelection(id)}}/>\n        <ListItemSecondaryAction>\n          <Chip label={value} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  const handleCodeListSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.codeLists.show, { instrument_id: instrumentId, codeListId: id })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Code Lists</h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['CodeList']} />\n              <List dense={true}>\n                {Object.values(codeLists).map((codeList) => {\n                  return (\n                    <CodeListItem label={codeList.label} value={codeList.used_by.length} id={codeList.id} />\n                  )\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              {!isNil(selectedCodeList) && (\n                <CodeListForm codeList={selectedCodeList} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildCodeLists;\n","import React, { useEffect } from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionItems, ResponseDomainNumerics, ResponseDomainTexts, ResponseDomainDatetimes } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  Table,\n  TableContainer,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport {\n  Autocomplete\n} from '@material-ui/lab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Instruction\"\n        name=\"instruction\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nexport const QuestionItemForm = (props) => {\n  const {questionItem, instrumentId} = props;\n\n  const categories = useSelector(state => get(state.categories, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const responseDomainNumerics = useSelector(state => get(state.responseDomainNumerics, instrumentId, {}));\n  const responseDomainTexts = useSelector(state => get(state.responseDomainTexts, instrumentId, {}));\n  const responseDomainDatetimes = useSelector(state => get(state.responseDomainDatetimes, instrumentId, {}));\n\n  const responseDomains = [...Object.values(responseDomainNumerics), ...Object.values(responseDomainTexts), ...Object.values(responseDomainDatetimes)]\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(questionItem, values)\n\n    if(isNil(questionItem.id)){\n      dispatch(QuestionItems.create(instrumentId, values))\n    }else{\n      dispatch(QuestionItems.update(instrumentId, questionItem.id, values))\n    }\n  }\n\n  useEffect(() => {\n    dispatch(ResponseDomainNumerics.all(instrumentId));\n    dispatch(ResponseDomainTexts.all(instrumentId));\n    dispatch(ResponseDomainDatetimes.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={questionItem.id || 'new'} type={'QuestionItem'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={questionItem}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.field}\n                  </Grid>\n                ))}\n                <h3>Response Domains</h3>\n                <AddCircleOutlineIcon onClick={() => push('rds', {})}/>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Type and Label</TableCell>\n                          <TableCell>Actions</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <FieldArray name=\"rds\">\n                          {({ fields }) =>\n                            fields.map((name, index) => (\n                              <TableRow key={name}>\n                                <TableCell>\n                                 <Autocomplete\n                                  freesolo=\"true\"\n                                  options={Object.values(responseDomains)}\n                                  getOptionLabel={(option) => `${option.type} - ${option.label}`}\n                                  onChange={(event, value, reason)=>{\n                                    if(isNil(value)){\n                                      fields.update(index, {...fields.value[index], ...{type: null, id: null, label: null} })\n                                    }else{\n                                      fields.update(index, {...fields.value[index], ...{type: value.type, id: value.id, label: value.label} })\n                                    }\n                                  } }\n                                  value={{type: fields.value[index].type, id: fields.value[index].id, label:fields.value[index].label}}\n                                  getOptionSelected= {(option, value) => (\n                                    option.type === value.type && option.id === value.id\n                                  )}\n                                  renderInput={(params) => (\n                                    <TextField name={`${name}.type - ${name}.label`}\n                                      {...params}\n                                      variant=\"outlined\"\n                                      label=\"Label\"\n                                      placeholder=\"label\"\n                                    />\n                                  )}\n                                />\n                                </TableCell>\n                                <TableCell>\n                                  <span\n                                    onClick={() => fields.remove(index)}\n                                    style={{ cursor: 'pointer' }}\n                                  >\n                                    <DeleteIcon />\n                                  </span>\n                                </TableCell>\n                              </TableRow>\n                            ))\n                          }\n                        </FieldArray>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={QuestionItems} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionItems } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { QuestionItemForm } from '../components/QuestionItemForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildQuestionItems = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const questionItemId = get(props, \"match.params.questionItemId\", null);\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const questionItems = useSelector(state => get(state.questionItems, instrumentId, {}));\n  const selectedQuestion = get(questionItems, questionItemId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(QuestionItems.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const QuestionItem = (props) => {\n    const {label, value, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleQuestionSelection(id)}}/>\n      </ListItem>\n    )\n  }\n\n  const handleQuestionSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.questionItems.show, { instrument_id: instrumentId, questionItemId: id })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Question Items <Link to={url(routes.instruments.instrument.build.questionGrids.all, { instrument_id: instrumentId })}>Question Grids</Link></h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['QuestionItem', 'QuestionGrid']} />\n              <List dense={true}>\n                {Object.values(questionItems).map((questionItem) => {\n                  return <QuestionItem label={questionItem.label} id={questionItem.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              {!isNil(selectedQuestion) && (\n                <QuestionItemForm questionItem={selectedQuestion} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildQuestionItems;\n","import React, { useEffect } from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionGrids, ResponseDomainNumerics, ResponseDomainTexts, ResponseDomainDatetimes } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { OnChange } from 'react-final-form-listeners'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem,\n  Table,\n  TableContainer,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport {\n  Autocomplete\n} from '@material-ui/lab';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Instruction\"\n        name=\"instruction\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Literal\"\n        name=\"literal\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    type: 'select',\n    size: 12,\n    field: (options) => (\n      <Select\n        name=\"horizontal_code_list_id\"\n        label=\"Horizontal Code List (X)\"\n        formControlProps={{ margin: 'none' }}\n      >\n        <MenuItem></MenuItem>\n        {options.map((item, idx) => (\n          <MenuItem value={item.id}>{item.label}</MenuItem>\n        ))}\n      </Select>\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"vertical_code_list_id\"\n          label=\"Vertical Code List (Y)\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          {options.map((item, idx) => (\n            <MenuItem value={item.id}>{item.label}</MenuItem>\n          ))}\n        </Select>\n      )\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"corner_label\"\n          label=\"Corner Label\"\n          formControlProps={{ margin: 'none' }}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='H'>Horizontal</MenuItem>\n          <MenuItem value='V'>Vertical</MenuItem>\n        </Select>\n      )\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Roster Label\"\n        name=\"roster_label\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Roster Row Number\"\n        name=\"roster_rows\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nexport const QuestionGridForm = (props) => {\n  const {questionGrid, instrumentId} = props;\n\n  var codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  // Only show response domains in the list of codeLists\n  codeLists = Object.values(codeLists).filter((cl) => { return cl.rd === false})\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(questionGrid, values)\n\n    if(isNil(questionGrid.id)){\n      dispatch(QuestionGrids.create(instrumentId, values))\n    }else{\n      dispatch(QuestionGrids.update(instrumentId, questionGrid.id, values))\n    }\n  }\n\n  const responseDomainNumerics = useSelector(state => get(state.responseDomainNumerics, instrumentId, {}));\n  const responseDomainTexts = useSelector(state => get(state.responseDomainTexts, instrumentId, {}));\n  const responseDomainDatetimes = useSelector(state => get(state.responseDomainDatetimes, instrumentId, {}));\n\n  const responseDomains = [...Object.values(responseDomainNumerics), ...Object.values(responseDomainTexts), ...Object.values(responseDomainDatetimes)]\n\n  useEffect(() => {\n    dispatch(ResponseDomainNumerics.all(instrumentId));\n    dispatch(ResponseDomainTexts.all(instrumentId));\n    dispatch(ResponseDomainDatetimes.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={questionGrid.id || 'new'} type={'QuestionGrid'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={questionGrid}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <OnChange name=\"horizontal_code_list_id\">\n                  {(value, previous) => {\n                    const codeList = codeLists.find(el => el.id === value)\n                    if(codeList){\n                      values.cols = codeList.codes.map((code) => {\n                        return {\n                          label: code.label,\n                          value: code.value,\n                          order: code.order\n                        }\n                      })\n                    }\n                  }}\n                </OnChange>\n                <h3>Response Domains</h3>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Column</TableCell>\n                          <TableCell>Type and Label</TableCell>\n                          <TableCell>Actions</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <FieldArray name=\"cols\">\n                          {({ fields }) =>\n                            fields.map((name, index) => (\n                              <TableRow key={name}>\n                                <TableCell>{fields.value[index].label}</TableCell>\n                                <TableCell>\n                                 <Autocomplete\n                                  freesolo=\"true\"\n                                  options={Object.values(responseDomains)}\n                                  getOptionLabel={(option) => (option.type === '') ? `` :`${option.label} - ${option.type}`}\n                                  onChange={(event, value, reason)=>{\n                                    var rd;\n                                    if(isNil(value)){\n                                      rd = {...fields.value[index].rd, ...{type: '', id: null, label: ''} }\n                                    }else{\n                                      rd = {...fields.value[index].rd, ...{type: value.type, id: value.id, label: value.label} }\n                                    }\n                                    fields.update(index, {...fields.value[index], ...{rd: rd} })\n                                  } }\n                                  value={(fields.value[index].rd) ? {type: fields.value[index].rd.type, id: fields.value[index].rd.id, label:fields.value[index].rd.label} : {type: '', id: null, label: ''}}\n                                  getOptionSelected= {(option, value) => (\n                                    option.type === value.type && option.id === value.id\n                                  )}\n                                  renderInput={(params) => (\n                                    <TextField name={`${name}.type - ${name}.label`}\n                                      {...params}\n                                      variant=\"outlined\"\n                                      label=\"Label\"\n                                      placeholder=\"label\"\n                                    />\n                                  )}\n                                />\n                                </TableCell>\n                                <TableCell>\n                                  <span\n                                    onClick={() => fields.update(index, {...fields.value[index], ...{rd: {type: '', id: null, label: ''} } }) }\n                                    style={{ cursor: 'pointer' }}\n                                  >\n                                    <DeleteIcon />\n                                  </span>\n                                </TableCell>\n                              </TableRow>\n                            ))\n                          }\n                        </FieldArray>\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={QuestionGrids} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { QuestionGrids, CodeLists } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { QuestionGridForm } from '../components/QuestionGridForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildQuestionGrids = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const [questionGridId, setquestionGridId] = React.useState(get(props, \"match.params.questionGridId\", null));\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const questionGrids = useSelector(state => get(state.questionGrids, instrumentId, {}));\n  const selectedQuestion = get(questionGrids, questionGridId, {used_by: []})\n\n  useEffect(() => {\n    dispatch(QuestionGrids.all(instrumentId));\n    dispatch(CodeLists.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const QuestionGrid = (props) => {\n    const {label, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleQuestionSelection(id)}}/>\n      </ListItem>\n    )\n  }\n\n  const handleQuestionSelection = (id) => {\n    const path = url(routes.instruments.instrument.build.questionGrids.show, { instrument_id: instrumentId, questionGridId: id })\n    history.push(path);\n    setquestionGridId(id)\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Question Grids <Link to={url(routes.instruments.instrument.build.questionItems.all, { instrument_id: instrumentId })}>Question Items</Link></h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['QuestionItem', 'QuestionGrid']} callback={setquestionGridId} />\n              <List dense={true}>\n                {Object.values(questionGrids).map((questionGrid) => {\n                  return <QuestionGrid label={questionGrid.label} id={questionGrid.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              {!isNil(selectedQuestion) && (\n                <QuestionGridForm questionGrid={selectedQuestion} instrumentId={instrumentId} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildQuestionGrids;\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainNumerics } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n   if (!values.subtype) {\n     errors.subtype = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n      type: 'select',\n      size: 12,\n      field: (options) => (\n        <Select\n          name=\"subtype\"\n          label=\"Type\"\n          formControlProps={{ margin: 'none' }}\n          required={true}\n        >\n          <MenuItem></MenuItem>\n          <MenuItem value='Integer'>Integer</MenuItem>\n          <MenuItem value='Float'>Float</MenuItem>\n        </Select>\n      )\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Min\"\n        name=\"min\"\n        margin=\"none\"\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Max\"\n        name=\"max\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nexport const ResponseDomainNumericForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(responseDomain, values)\n\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainNumerics.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainNumerics.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainNumerics} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainTexts } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Max Length\"\n        name=\"maxlen\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  }\n];\n\nexport const ResponseDomainTextForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const codeLists = useSelector(state => get(state.codeLists, instrumentId, {}));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(responseDomain, values)\n\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainTexts.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainTexts.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    {item.type && item.type === 'select'\n                      ? item.field(codeLists)\n                      : item.field\n                    }\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainTexts} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { get, isNil } from \"lodash\";\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainDatetimes } from '../actions'\nimport { ObjectStatusBar } from '../components/ObjectStatusBar'\nimport { DeleteObjectButton } from '../components/DeleteObjectButton'\nimport { ObjectCheckForInitialValues } from '../support/ObjectCheckForInitialValues'\nimport arrayMutators from 'final-form-arrays'\nimport { FieldArray } from 'react-final-form-arrays'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  Select\n} from 'mui-rff';\nimport {\n  Paper,\n  Grid,\n  Button,\n  CssBaseline,\n  MenuItem\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n   if (!values.label) {\n     errors.label = 'Required';\n   }\n   if (!values.subtype) {\n     errors.subtype = 'Required';\n   }\n  return errors;\n};\n\nconst formFields = [\n  {\n    size: 12,\n    field: (\n      <TextField\n        label=\"Label\"\n        name=\"label\"\n        margin=\"none\"\n        required={true}\n      />\n    ),\n  },\n  {\n    type: 'select',\n    size: 12,\n    field: (options) => (\n      <Select\n        name=\"subtype\"\n        label=\"Type\"\n        formControlProps={{ margin: 'none' }}\n        required={true}\n      >\n        <MenuItem value=\"Date\">Date</MenuItem>\n        <MenuItem value=\"Time\">Time</MenuItem>\n        <MenuItem value=\"Duration\">Duration</MenuItem>\n      </Select>\n    ),\n  },\n  {\n    size: 12,\n    visible: (values) => {\n      return get(values, 'subtype', '') === 'Duration'\n    },\n    field: (\n      <TextField\n        label=\"Format\"\n        name=\"format\"\n        margin=\"none\"\n      />\n    ),\n  }\n];\n\nconst FormField = (props) => {\n  const {item, values} = props\n\n  if(item.visible !== undefined && !item.visible(values) ){\n    return ''\n  }\n\n  if(item.type && item.type === 'select'){\n    return item.field()\n  }else{\n    return item.field\n  }\n}\n\nexport const ResponseDomainDatetimeForm = (props) => {\n  const {responseDomain, instrumentId} = props;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const onSubmit = (values) => {\n    values = ObjectCheckForInitialValues(responseDomain, values)\n\n    if(isNil(responseDomain.id)){\n      dispatch(ResponseDomainDatetimes.create(instrumentId, values))\n    }else{\n      dispatch(ResponseDomainDatetimes.update(instrumentId, responseDomain.id, values))\n    }\n  }\n\n  return (\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 1000 }}>\n      <ObjectStatusBar id={responseDomain.id || 'new'} type={'ResponseDomain'} />\n      <CssBaseline />\n      <Form\n        onSubmit={onSubmit}\n        initialValues={responseDomain}\n        validate={validate}\n        mutators={{\n          ...arrayMutators\n        }}\n        render={({\n        handleSubmit,\n        form: {\n          mutators: { push, pop }\n        }, // injected from final-form-arrays above\n        pristine,\n        form,\n        submitting,\n        values\n      }) => (\n          <form onSubmit={handleSubmit} noValidate>\n            <Paper style={{ padding: 16 }}>\n              <Grid container alignItems=\"flex-start\" spacing={2}>\n                {formFields.map((item, idx) => (\n                  <Grid item xs={item.size} key={idx}>\n                    <FormField item={item} values={values} />\n                  </Grid>\n                ))}\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n                <Grid item style={{ marginTop: 16 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={submitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n                <DeleteObjectButton id={values.id} instrumentId={instrumentId} action={ResponseDomainDatetimes} />\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ResponseDomainNumerics, ResponseDomainTexts, ResponseDomainDatetimes } from '../actions'\nimport { Dashboard } from '../components/Dashboard'\nimport { ResponseDomainNumericForm } from '../components/ResponseDomainNumericForm'\nimport { ResponseDomainTextForm } from '../components/ResponseDomainTextForm'\nimport { ResponseDomainDatetimeForm } from '../components/ResponseDomainDatetimeForm'\nimport { CreateNewBuildObjectButtons } from '../components/CreateNewBuildObjectButtons'\nimport { get, isNil } from \"lodash\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport { reverse as url } from 'named-urls'\nimport routes from '../routes'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  side: {\n    position: 'absolute',\n    width: '50%',\n  },\n  control: {\n    width: '100%',\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InstrumentBuildResponseDomains = (props) => {\n  let history = useHistory();\n\n  const dispatch = useDispatch()\n  const classes = useStyles();\n\n  const instrumentId = get(props, \"match.params.instrument_id\", \"\")\n  const responseDomainId = get(props, \"match.params.responseDomainId\", null)\n  const responseDomainType = get(props, \"match.params.responseDomainType\", null)\n\n  const responseDomainNumerics = useSelector(state => get(state.responseDomainNumerics, instrumentId, {}));\n  const responseDomainTexts = useSelector(state => get(state.responseDomainTexts, instrumentId, {}));\n  const responseDomainDatetimes = useSelector(state => get(state.responseDomainDatetimes, instrumentId, {}));\n\n  const responseDomains = [...Object.values(responseDomainNumerics), ...Object.values(responseDomainTexts), ...Object.values(responseDomainDatetimes)]\n\n  const selectedResponseDomain = responseDomains.find(responseDomain => responseDomain.id == responseDomainId && responseDomain.type == responseDomainType) || {};\n\n  useEffect(() => {\n    dispatch(ResponseDomainNumerics.all(instrumentId));\n    dispatch(ResponseDomainTexts.all(instrumentId));\n    dispatch(ResponseDomainDatetimes.all(instrumentId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  const ResponseDomainItem = (props) => {\n    const {label, type, id} = props\n    return (\n      <ListItem>\n        <ListItemText\n          primary={label} onClick={()=>{handleResponseDomainSelection(type,id)}}/>\n        <ListItemSecondaryAction>\n          <Chip label={type} />\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  const handleResponseDomainSelection = (type, id) => {\n    const path = url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: type, responseDomainId: id })\n    history.push(path);\n  }\n\n  const responseDomainForm = () => {\n    switch(responseDomainType) {\n      case('ResponseDomainNumeric'):\n          return <ResponseDomainNumericForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      case('ResponseDomainText'):\n          return <ResponseDomainTextForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      case('ResponseDomainDatetime'):\n          return <ResponseDomainDatetimeForm responseDomain={selectedResponseDomain} instrumentId={instrumentId} />\n      default:\n        return ''\n    }\n  }\n\n  const createNew = (type) => {\n    const path = url(routes.instruments.instrument.build.responseDomains.show, { instrument_id: instrumentId, responseDomainType: type, responseDomainId: 'new' })\n    history.push(path);\n  }\n\n  return (\n    <div style={{ height: 500, width: '100%' }}>\n      <Dashboard title={instrumentId} instrumentId={instrumentId}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <Paper className={classes.control}>\n              <h2>Response Domains</h2>\n              <CreateNewBuildObjectButtons instrumentId={instrumentId} objectTypes={['ResponseDomainText', 'ResponseDomainNumeric', 'ResponseDomainDatetime']} />\n              <List dense={true}>\n                {Object.values(responseDomains).map((responseDomain) => {\n                  return <ResponseDomainItem label={responseDomain.label} type={responseDomain.type} id={responseDomain.id} />\n                })}\n              </List>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.side}>\n              { responseDomainForm() }\n            </Paper>\n          </Grid>\n        </Grid>\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default InstrumentBuildResponseDomains;\n","const NoMatch = () => {\n\n  return (\n    'NoMatch'\n  )\n}\n\nexport default NoMatch;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport { get } from 'lodash'\n\nconst RedirectFromState = () => {\n  const redirect = useSelector(state => get(state.common, 'redirect'));\n  const dispatch = useDispatch()\n\n  if(redirect){\n    return (\n      <Redirect to={redirect} />\n    )\n  }else{\n    return ''\n  }\n}\n\nexport default RedirectFromState;\n","import React from 'react';\nimport { Switch, BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\n\nimport routes from './routes'\nimport AuthRoute from './AuthRoute'\nimport Login from './pages/Login';\nimport AdminImport from './pages/AdminImport';\nimport AdminImports from './pages/AdminImports';\nimport AdminInstrumentImportMappings from './pages/AdminInstrumentImportMappings';\nimport AdminDatasetImportMappings from './pages/AdminDatasetImportMappings';\nimport AdminInstruments from './pages/AdminInstruments';\nimport AdminDatasets from './pages/AdminDatasets';\nimport Instruments from './pages/Instruments';\nimport Datasets from './pages/Datasets';\nimport DatasetView from './pages/DatasetView';\nimport InstrumentView from './pages/InstrumentView';\nimport InstrumentMap from './pages/InstrumentMap';\nimport InstrumentBuild from './pages/InstrumentBuild';\nimport InstrumentConstructBuild from './pages/InstrumentConstructBuild';\nimport InstrumentBuildCodeLists from './pages/InstrumentBuildCodeLists';\nimport InstrumentBuildQuestionItems from './pages/InstrumentBuildQuestionItems';\nimport InstrumentBuildQuestionGrids from './pages/InstrumentBuildQuestionGrids';\nimport InstrumentBuildResponseDomains from './pages/InstrumentBuildResponseDomains';\nimport NoMatch from './pages/NoMatch';\nimport RedirectFromState from './components/RedirectFromState';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#009de6',\n    },\n    secondary: {\n      main: '#652d90',\n    },\n    admin: {\n      main: '#37b34a',\n    },\n    error: {\n      main: '#eb008b',\n    },\n    warning: {\n      main: '#eb008b',\n    },\n    info: {\n      main: '#faaf40',\n    },\n    success: {\n      main: '#37b34a',\n    },\n  }\n});\n\nconst App = () => {\n\n  console.log(routes)\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Router>\n       <div>\n          <RedirectFromState />\n          <Switch>\n            <AuthRoute type=\"guest\" exact path={routes.login} component={Login} />\n            <Route\n              exact\n              path=\"/\"\n              render={() => {return ( <Redirect to={routes.instruments.all} />)}}\n            />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.map.show} component={InstrumentMap} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.show} component={InstrumentBuild} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.show} component={InstrumentView} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.all} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.show} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.codeLists.new} component={InstrumentBuildCodeLists} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.all} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.show} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionItems.new} component={InstrumentBuildQuestionItems} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.all} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.show} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.questionGrids.new} component={InstrumentBuildQuestionGrids} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.all} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.show} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.responseDomains.new} component={InstrumentBuildResponseDomains} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.instrument.build.constructs.show} component={InstrumentConstructBuild} />\n            <AuthRoute type=\"private\" exact path={routes.instruments.all} component={Instruments} />\n            <AuthRoute type=\"private\" exact path={routes.datasets.all} component={Datasets} />\n            <AuthRoute type=\"private\" exact path={'/datasets/:dataset_id'} component={DatasetView} />\n            <AuthRoute type=\"private\" exact path={routes.admin.datasets.all} component={AdminDatasets} />\n            <AuthRoute type=\"private\" exact path={routes.admin.import} component={AdminImport} />\n            <AuthRoute type=\"private\" exact path={routes.admin.imports} component={AdminImports} />\n            <AuthRoute type=\"private\" exact path={routes.admin.instruments.all} component={AdminInstruments} />\n            <AuthRoute type=\"private\" exact path={routes.admin.instruments.importMappings} component={AdminInstrumentImportMappings} />\n            <AuthRoute type=\"private\" exact path={routes.admin.datasets.importMappings} component={AdminDatasetImportMappings} />\n            <AuthRoute type=\"guest\" component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    </MuiThemeProvider>\n  )\n}\n\nexport default App\n","import { combineReducers } from \"redux\";\nimport { get } from 'lodash'\n\nconst serializeSearchesArrayToObject = (array) =>\n  array.reduce((obj, item) => {\n    obj[item.prefix] = item\n   return obj\n  }, {})\n\nconst serializeArrayToObject = (array) =>\n  array.reduce((obj, item) => {\n    obj[item.id] = item\n   return obj\n  }, {})\n\nconst auth = (state = { isAuthUser: !!window.localStorage.getItem(\"jwt\") }, action) => {\n\n  switch (action.type) {\n\n    case 'LOGIN':\n      window.localStorage.setItem('jwt', action.payload.jwt);\n      return { isAuthUser: true }\n    case 'LOGOUT':\n      window.localStorage.removeItem('jwt');\n      return { isAuthUser: false }\n    default:\n      return state\n  }\n}\n\nconst instruments = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENTS':\n      return serializeSearchesArrayToObject(action.payload.instruments)\n    case 'LOAD_INSTRUMENT':\n      return {...state, ...{[action.payload.instrument.prefix]: action.payload.instrument}}\n    default:\n      return state\n  }\n}\n\nconst imports = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_IMPORTS':\n      return serializeSearchesArrayToObject(action.payload.imports)\n    case 'LOAD_IMPORT':\n      return {...state, ...{[action.payload.import.prefix]: action.payload.import}}\n    default:\n      return state\n  }\n}\n\nconst datasets = (state = [], action) => {\n  switch (action.type) {\n    case 'LOAD_DATASETS':\n      return serializeArrayToObject(action.payload.datasets)\n    case 'LOAD_DATASET':\n      return {...state, ...{[action.payload.dataset.id]: action.payload.dataset}}\n    default:\n      return state\n  }\n}\n\nconst instrumentStats = (state = [], action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_STATS':\n      return {...state, ...{[action.payload.instrumentId]: action.payload.stats}}\n    default:\n      return state\n  }\n}\n\nconst cc_sequences = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_SEQUENCES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.sequences)}}\n    case 'LOAD_INSTRUMENT_SEQUENCE':\n      var instrumentSequences = state[action.payload.instrumentId]\n      instrumentSequences[action.payload.sequence.id] = action.payload.sequence\n      return {...state, ...{[action.payload.instrumentId]: instrumentSequences}}\n    default:\n      return state\n  }\n}\n\nconst cc_statements = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_STATEMENTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.statements)}}\n    case 'LOAD_INSTRUMENT_STATEMENT':\n      var instrumentStatements = state[action.payload.instrumentId]\n      instrumentStatements[action.payload.statement.id] = action.payload.statement\n      return {...state, ...{[action.payload.instrumentId]: instrumentStatements}}\n    default:\n      return state\n  }\n}\n\nconst cc_conditions = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CONDITIONS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.conditions)}}\n    case 'LOAD_INSTRUMENT_CONDITION':\n      var instrumentConditions = state[action.payload.instrumentId]\n      instrumentConditions[action.payload.condition.id] = action.payload.condition\n      return {...state, ...{[action.payload.instrumentId]: instrumentConditions}}\n    default:\n      return state\n  }\n}\n\n\nconst cc_loops = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_LOOPS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.loops)}}\n    case 'LOAD_INSTRUMENT_LOOP':\n      var instrumentLoops = state[action.payload.instrumentId]\n      instrumentLoops[action.payload.loop.id] = action.payload.loop\n      return {...state, ...{[action.payload.instrumentId]: instrumentLoops}}\n    default:\n      return state\n  }\n}\n\nconst response_units = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_UNITS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseUnits)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_UNIT':\n      var instrumentResponseUnits = state[action.payload.instrumentId]\n      instrumentResponseUnits[action.payload.responseUnit.id] = action.payload.responseUnit\n      return {...state, ...{[action.payload.instrumentId]: instrumentResponseUnits}}\n    default:\n      return state\n  }\n}\n\nconst cc_questions = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTIONS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION':\n      var instrumentQuestions = state[action.payload.instrumentId]\n      instrumentQuestions[action.payload.question.id] = action.payload.question\n      return {...state, ...{[action.payload.instrumentId]: instrumentQuestions}}\n    default:\n      return state\n  }\n}\n\nconst questionItems = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTION_ITEMS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION_ITEM':\n      var questionItems = get(state, action.payload.instrumentId, {})\n      const revisedQuestionItems = {...questionItems, ...{[action.payload.questionItem.id]: action.payload.questionItem}}\n      return {...state, ...{[action.payload.instrumentId]: revisedQuestionItems}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'QuestionItem'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst questionGrids = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_QUESTION_GRIDS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.questions)}}\n    case 'LOAD_INSTRUMENT_QUESTION_GRID':\n      var questionGrids = get(state, action.payload.instrumentId, {})\n      const revisedQuestionGrids = {...questionGrids, ...{[action.payload.questionGrid.id]: action.payload.questionGrid}}\n      return {...state, ...{[action.payload.instrumentId]: revisedQuestionGrids}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'QuestionGrid'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst variables = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_VARIABLES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.variables)}}\n    default:\n      return state\n  }\n}\n\nconst datasetVariables = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_DATASET_VARIABLES':\n      return {...state, ...{[action.payload.datasetId]: serializeArrayToObject(action.payload.variables)}}\n    case 'LOAD_DATASET_VARIABLE':\n      var variables = get(state, action.payload.datasetId, {})\n      const revisedVariables = {...variables, ...{[action.payload.variable.id]: action.payload.variable}}\n      return {...state, ...{[action.payload.datasetId]: revisedVariables}}\n    default:\n      return state\n  }\n}\n\nconst datasetImportMappings = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_DATASET_IMPORT_MAPPINGS':\n      return {...state, ...{[action.payload.id]: serializeArrayToObject(action.payload.importMappings)}}\n    case 'LOAD_DATASET_IMPORT_MAPPING':\n      var importMappings = get(state, action.payload.id, {})\n      const revisedImportMappings = {...importMappings, ...{[action.payload.importMapping.id]: action.payload.importMapping}}\n      return {...state, ...{[action.payload.datasetId]: revisedImportMappings}}\n    default:\n      return state\n  }\n}\n\nconst instrumentImportMappings = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_IMPORT_MAPPINGS':\n      return {...state, ...{[action.payload.id]: serializeArrayToObject(action.payload.importMappings)}}\n    case 'LOAD_INSTRUMENT_IMPORT_MAPPING':\n      var importMappings = get(state, action.payload.id, {})\n      const revisedImportMappings = {...importMappings, ...{[action.payload.importMapping.id]: action.payload.importMapping}}\n      return {...state, ...{[action.payload.datasetId]: revisedImportMappings}}\n    default:\n      return state\n  }\n}\n\nconst codeLists = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CODE_LISTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.codeLists)}}\n    case 'LOAD_INSTRUMENT_CODE_LIST':\n      var codeLists = get(state, action.payload.instrumentId, {})\n      const revisedCodeLists = {...codeLists, ...{[action.payload.codeList.id]: action.payload.codeList}}\n      return {...state, ...{[action.payload.instrumentId]: revisedCodeLists}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'CodeList'){\n        var codeLists = get(state, action.payload.instrumentId, {})\n        delete codeLists[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: codeLists}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainNumerics = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERICS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainNumerics)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_NUMERIC':\n      var responseDomainNumerics = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainNumerics, ...{[action.payload.responseDomainNumeric.id]: action.payload.responseDomainNumeric}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainNumeric'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainTexts = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXTS':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainTexts)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_TEXT':\n      var responseDomainTexts = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainTexts, ...{[action.payload.responseDomainText.id]: action.payload.responseDomainText}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainText'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst responseDomainDatetimes = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIMES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.responseDomainDatetimes)}}\n    case 'LOAD_INSTRUMENT_RESPONSE_DOMAIN_DATETIME':\n      var responseDomainDatetimes = get(state, action.payload.instrumentId, {})\n      const revisedResponseDomains = {...responseDomainDatetimes, ...{[action.payload.responseDomainDatetime.id]: action.payload.responseDomainDatetime}}\n      return {...state, ...{[action.payload.instrumentId]: revisedResponseDomains}}\n    case 'DELETE_INSTRUMENT_OBJECT_TYPE':\n      if(action.payload.objectType === 'ResponseDomainDatetime'){\n        var objects = get(state, action.payload.instrumentId, {})\n        delete objects[action.payload.id]\n        return {...state, ...{[action.payload.instrumentId]: objects}}\n      }else{\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst categories = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_INSTRUMENT_CATEGORIES':\n      return {...state, ...{[action.payload.instrumentId]: serializeArrayToObject(action.payload.categories)}}\n    default:\n      return state\n  }\n}\n\nconst topics = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'LOAD_TOPICS':\n      return {...state, ...serializeArrayToObject(action.payload.topics)}\n    default:\n      return state\n  }\n}\n\nconst statuses = (state = {}, action) => {\n\n  var key;\n\n  switch (action.type) {\n    case 'SAVING':\n      key = action.payload.type + ':' + action.payload.id\n      return {...state, ...{[key]: {saving: true}}}\n    case 'SAVED':\n      key = action.payload.type + ':' + action.payload.id\n      return {...state, ...{[key]: {saved: true}}}\n    case 'ERROR':\n      key = action.payload.type + ':' + action.payload.id\n      if(typeof action.payload.error === 'object' && action.payload.error !== null){\n        return {...state, ...{[key]: {error: true, errors: action.payload.error, errorMessage: ''}}}\n      }else{\n        return {...state, ...{[key]: {error: true, errorMessage: action.payload.error}}}\n      }\n    default:\n      return state\n  }\n}\n\nconst common = (state = {}, action) => {\n\n  switch (action.type) {\n    case 'REDIRECT':\n      return {...state, ...{redirect: action.payload.to}}\n    case 'REDIRECT_CLEAR':\n      return {...state, ...{redirect: undefined}}\n    default:\n      return state\n  }\n}\n\n\nconst appReducer = combineReducers({\n    common,\n    auth,\n    datasets,\n    instruments,\n    imports,\n    instrumentStats,\n    cc_sequences,\n    cc_statements,\n    cc_conditions,\n    cc_loops,\n    cc_questions,\n    response_units,\n    questionItems,\n    questionGrids,\n    categories,\n    codeLists,\n    responseDomainNumerics,\n    responseDomainTexts,\n    responseDomainDatetimes,\n    datasetVariables,\n    variables,\n    statuses,\n    topics,\n    datasetImportMappings,\n    instrumentImportMappings,\n})\n\nexport default appReducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport reducers from \"./../reducers\";\nimport thunk from \"redux-thunk\"\n\nexport default createStore(reducers, applyMiddleware(thunk));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport Store from './components/Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}